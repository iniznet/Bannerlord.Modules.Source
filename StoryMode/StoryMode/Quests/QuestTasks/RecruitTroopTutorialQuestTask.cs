using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.SaveSystem;

namespace StoryMode.Quests.QuestTasks
{
	// Token: 0x0200002C RID: 44
	public class RecruitTroopTutorialQuestTask : QuestTaskBase
	{
		// Token: 0x0600024C RID: 588 RVA: 0x0000CE7E File Offset: 0x0000B07E
		public RecruitTroopTutorialQuestTask(Action onSucceed, int targetRecruitAmount, Func<CharacterObject, bool> recruitTypeConditions, Settlement recruitSettlement = null, JournalLog progressLog = null)
			: base(null, onSucceed, null, null)
		{
			this._targetRecruitAmount = targetRecruitAmount;
			this._recruitTypeConditions = recruitTypeConditions;
			this._recruitSettlement = recruitSettlement;
			this._progressLog = progressLog;
			this._recruitedTroopAmount = 0;
		}

		// Token: 0x0600024D RID: 589 RVA: 0x0000CEAF File Offset: 0x0000B0AF
		public void InitializeTaskOnLoad(int targetRecruitAmount, Func<CharacterObject, bool> recruitTypeConditions, Settlement recruitSettlement = null)
		{
			this._targetRecruitAmount = targetRecruitAmount;
			this._recruitTypeConditions = recruitTypeConditions;
			this._recruitSettlement = recruitSettlement;
		}

		// Token: 0x0600024E RID: 590 RVA: 0x0000CEC6 File Offset: 0x0000B0C6
		public override void SetReferences()
		{
			CampaignEvents.OnUnitRecruitedEvent.AddNonSerializedListener(this, new Action<CharacterObject, int>(this.OnUnitRecruited));
		}

		// Token: 0x0600024F RID: 591 RVA: 0x0000CEE0 File Offset: 0x0000B0E0
		private void OnUnitRecruited(CharacterObject character, int amount)
		{
			if (base.IsActive && (this._recruitSettlement == null || Settlement.CurrentSettlement == this._recruitSettlement) && this._recruitTypeConditions(character))
			{
				this._recruitedTroopAmount += amount;
				if (this._recruitedTroopAmount >= this._targetRecruitAmount)
				{
					JournalLog progressLog = this._progressLog;
					if (progressLog != null)
					{
						progressLog.UpdateCurrentProgress(this._targetRecruitAmount);
					}
					base.Finish(0);
					return;
				}
				JournalLog progressLog2 = this._progressLog;
				if (progressLog2 == null)
				{
					return;
				}
				progressLog2.UpdateCurrentProgress(this._recruitedTroopAmount);
			}
		}

		// Token: 0x06000250 RID: 592 RVA: 0x0000CF69 File Offset: 0x0000B169
		internal static void AutoGeneratedStaticCollectObjectsRecruitTroopTutorialQuestTask(object o, List<object> collectedObjects)
		{
			((RecruitTroopTutorialQuestTask)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06000251 RID: 593 RVA: 0x0000CF77 File Offset: 0x0000B177
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this._progressLog);
		}

		// Token: 0x06000252 RID: 594 RVA: 0x0000CF8C File Offset: 0x0000B18C
		internal static object AutoGeneratedGetMemberValue_progressLog(object o)
		{
			return ((RecruitTroopTutorialQuestTask)o)._progressLog;
		}

		// Token: 0x06000253 RID: 595 RVA: 0x0000CF99 File Offset: 0x0000B199
		internal static object AutoGeneratedGetMemberValue_recruitedTroopAmount(object o)
		{
			return ((RecruitTroopTutorialQuestTask)o)._recruitedTroopAmount;
		}

		// Token: 0x040000B6 RID: 182
		private int _targetRecruitAmount;

		// Token: 0x040000B7 RID: 183
		private Func<CharacterObject, bool> _recruitTypeConditions;

		// Token: 0x040000B8 RID: 184
		private Settlement _recruitSettlement;

		// Token: 0x040000B9 RID: 185
		[SaveableField(1)]
		private readonly JournalLog _progressLog;

		// Token: 0x040000BA RID: 186
		[SaveableField(2)]
		private int _recruitedTroopAmount;
	}
}
