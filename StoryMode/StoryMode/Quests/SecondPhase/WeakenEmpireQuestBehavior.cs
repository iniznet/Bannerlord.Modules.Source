using System;
using System.Collections.Generic;
using System.Linq;
using StoryMode.StoryModeObjects;
using StoryMode.StoryModePhases;
using TaleWorlds.CampaignSystem;
using TaleWorlds.CampaignSystem.Actions;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace StoryMode.Quests.SecondPhase
{
	public class WeakenEmpireQuestBehavior : CampaignBehaviorBase
	{
		public override void RegisterEvents()
		{
			StoryModeEvents.OnMainStoryLineSideChosenEvent.AddNonSerializedListener(this, new Action<MainStoryLineSide>(this.OnMainStoryLineSideChosen));
		}

		public override void SyncData(IDataStore dataStore)
		{
		}

		private void OnMainStoryLineSideChosen(MainStoryLineSide side)
		{
			if (side == MainStoryLineSide.CreateAntiImperialKingdom || side == MainStoryLineSide.SupportAntiImperialKingdom)
			{
				new WeakenEmpireQuestBehavior.WeakenEmpireQuest(StoryModeHeroes.AntiImperialMentor).StartQuest();
			}
		}

		public class WeakenEmpireQuestBehaviorTypeDefiner : SaveableTypeDefiner
		{
			public WeakenEmpireQuestBehaviorTypeDefiner()
				: base(1005000)
			{
			}

			protected override void DefineClassTypes()
			{
				base.AddClassDefinition(typeof(WeakenEmpireQuestBehavior.WeakenEmpireQuest), 1, null);
			}
		}

		public class WeakenEmpireQuest : StoryModeQuestBase
		{
			private TextObject _startQuestLog
			{
				get
				{
					TextObject textObject = new TextObject("{=0wQlpbtL}In order for the Empire to go into its final decline, there should be fewer than {NUMBER} imperial-owned settlements. If this happens, another kingdom can become the dominant power in Calradia.", null);
					textObject.SetTextVariable("NUMBER", 4);
					return textObject;
				}
			}

			public override TextObject Title
			{
				get
				{
					return new TextObject("{=iR4QCTxv}Weaken Empire", null);
				}
			}

			private TextObject _questCanceledLogText
			{
				get
				{
					return new TextObject("{=tVlZTOst}You have chosen a different path.", null);
				}
			}

			public WeakenEmpireQuest(Hero questGiver)
				: base("weaken_empire_quest", questGiver, CampaignTime.Never)
			{
				this._weakenedEmpire = false;
				this.SetDialogs();
				base.InitializeQuestOnCreation();
				base.AddLog(this._startQuestLog, false);
			}

			protected override void SetDialogs()
			{
				this.DiscussDialogFlow = DialogFlow.CreateDialogFlow("quest_discuss", 100).NpcLine(new TextObject("{=VeY3PQFL}You chose to defeat the Empire.", null), null, null).Condition(() => Hero.OneToOneConversationHero == base.QuestGiver)
					.CloseDialog();
			}

			protected override void InitializeQuestOnGameLoad()
			{
				this.SetDialogs();
			}

			protected override void RegisterEvents()
			{
				StoryModeEvents.OnConspiracyActivatedEvent.AddNonSerializedListener(this, new Action(this.OnConspiracyActivated));
				CampaignEvents.OnClanChangedKingdomEvent.AddNonSerializedListener(this, new Action<Clan, Kingdom, Kingdom, ChangeKingdomAction.ChangeKingdomActionDetail, bool>(this.OnClanChangedKingdom));
			}

			private void OnClanChangedKingdom(Clan clan, Kingdom oldKingdom, Kingdom newKingdom, ChangeKingdomAction.ChangeKingdomActionDetail detail, bool showNotification = true)
			{
				if (clan == Clan.PlayerClan && oldKingdom == StoryModeManager.Current.MainStoryLine.PlayerSupportedKingdom)
				{
					base.CompleteQuestWithCancel(this._questCanceledLogText);
					StoryModeManager.Current.MainStoryLine.CancelSecondAndThirdPhase();
				}
			}

			protected override void HourlyTick()
			{
				if (this.QuestConditionsHold())
				{
					this.SuccessComplete();
				}
			}

			private void OnConspiracyActivated()
			{
				if (!this._weakenedEmpire)
				{
					base.CompleteQuestWithFail(new TextObject("{=JVkPkbdg}You could not weaken the Empire.", null));
				}
			}

			private bool QuestConditionsHold()
			{
				return StoryModeData.NorthernEmpireKingdom.Fiefs.Count((Town f) => f.IsTown) + StoryModeData.WesternEmpireKingdom.Fiefs.Count((Town f) => f.IsTown) + StoryModeData.SouthernEmpireKingdom.Fiefs.Count((Town f) => f.IsTown) < 4;
			}

			private void SuccessComplete()
			{
				base.AddLog(new TextObject("{=wO19nK2y}You have weakened the Empire.", null), false);
				base.CompleteQuestWithSuccess();
				this._weakenedEmpire = true;
				SecondPhase.Instance.ActivateConspiracy();
			}

			internal static void AutoGeneratedStaticCollectObjectsWeakenEmpireQuest(object o, List<object> collectedObjects)
			{
				((WeakenEmpireQuestBehavior.WeakenEmpireQuest)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
			}

			protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
			{
				base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			}

			private const int EmpireDefeatSettlementCount = 4;

			private bool _weakenedEmpire;
		}
	}
}
