using System;
using System.Collections.Generic;
using System.Linq;
using System.Xml;
using TaleWorlds.Library;
using TaleWorlds.ObjectSystem;

namespace TaleWorlds.Core
{
	public class ItemModifierGroup : MBObjectBase
	{
		internal static void AutoGeneratedStaticCollectObjectsItemModifierGroup(object o, List<object> collectedObjects)
		{
			((ItemModifierGroup)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		public int NoModifierLootScore { get; private set; }

		public int NoModifierProductionScore { get; private set; }

		public MBReadOnlyList<ItemModifier> ItemModifiers
		{
			get
			{
				return this._itemModifiers;
			}
		}

		public ItemModifierGroup()
			: base("")
		{
		}

		public ItemModifierGroup(string id)
			: base(id)
		{
		}

		public override void Deserialize(MBObjectManager objectManager, XmlNode node)
		{
			base.Deserialize(objectManager, node);
			this.NoModifierLootScore = XmlHelper.ReadInt(node, "no_modifier_loot_score");
			this.NoModifierProductionScore = XmlHelper.ReadInt(node, "no_modifier_production_score");
			this.InitializeDropScoreLists();
		}

		public void AddItemModifier(ItemModifier itemModifier)
		{
			this._itemModifiers.Add(itemModifier);
		}

		public ItemModifier GetRandomItemModifierLootScoreBased()
		{
			return this.GetRandomItemModifier(true);
		}

		public ItemModifier GetRandomItemModifierProductionScoreBased()
		{
			return this.GetRandomItemModifier(false);
		}

		private ItemModifier GetRandomItemModifier(bool useLootScores)
		{
			return MBRandom.ChooseWeighted<ItemModifier>(useLootScores ? this._lootDropItemModifierScores : this._productionDropItemModifierScores);
		}

		public List<ItemModifier> GetModifiersBasedOnQuality(ItemQuality quality)
		{
			return this.ItemModifiers.Where((ItemModifier modifier) => modifier.ItemQuality == quality).ToList<ItemModifier>();
		}

		private void InitializeDropScoreLists()
		{
			foreach (ItemModifier itemModifier in this._itemModifiers)
			{
				this._lootDropItemModifierScores.Add(new ValueTuple<ItemModifier, float>(itemModifier, itemModifier.LootDropScore));
				this._productionDropItemModifierScores.Add(new ValueTuple<ItemModifier, float>(itemModifier, itemModifier.ProductionDropScore));
			}
			this._lootDropItemModifierScores.Add(new ValueTuple<ItemModifier, float>(null, (float)this.NoModifierLootScore));
			this._productionDropItemModifierScores.Add(new ValueTuple<ItemModifier, float>(null, (float)this.NoModifierProductionScore));
		}

		private readonly MBList<ItemModifier> _itemModifiers = new MBList<ItemModifier>();

		private readonly MBList<ValueTuple<ItemModifier, float>> _lootDropItemModifierScores = new MBList<ValueTuple<ItemModifier, float>>();

		private readonly MBList<ValueTuple<ItemModifier, float>> _productionDropItemModifierScores = new MBList<ValueTuple<ItemModifier, float>>();
	}
}
