using System;
using System.Collections.Generic;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;

namespace TaleWorlds.Core
{
	// Token: 0x0200002D RID: 45
	public sealed class ItemCategory : MBObjectBase
	{
		// Token: 0x060002FD RID: 765 RVA: 0x0000CB64 File Offset: 0x0000AD64
		internal static void AutoGeneratedStaticCollectObjectsItemCategory(object o, List<object> collectedObjects)
		{
			((ItemCategory)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x060002FE RID: 766 RVA: 0x0000CB72 File Offset: 0x0000AD72
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x060002FF RID: 767 RVA: 0x0000CB7B File Offset: 0x0000AD7B
		public ItemCategory()
		{
		}

		// Token: 0x170000F0 RID: 240
		// (get) Token: 0x06000300 RID: 768 RVA: 0x0000CB83 File Offset: 0x0000AD83
		// (set) Token: 0x06000301 RID: 769 RVA: 0x0000CB8B File Offset: 0x0000AD8B
		public bool IsTradeGood { get; private set; }

		// Token: 0x170000F1 RID: 241
		// (get) Token: 0x06000302 RID: 770 RVA: 0x0000CB94 File Offset: 0x0000AD94
		// (set) Token: 0x06000303 RID: 771 RVA: 0x0000CB9C File Offset: 0x0000AD9C
		public bool IsAnimal { get; private set; }

		// Token: 0x170000F2 RID: 242
		// (get) Token: 0x06000304 RID: 772 RVA: 0x0000CBA5 File Offset: 0x0000ADA5
		// (set) Token: 0x06000305 RID: 773 RVA: 0x0000CBAD File Offset: 0x0000ADAD
		public ItemCategory CanSubstitute { get; private set; }

		// Token: 0x170000F3 RID: 243
		// (get) Token: 0x06000306 RID: 774 RVA: 0x0000CBB6 File Offset: 0x0000ADB6
		// (set) Token: 0x06000307 RID: 775 RVA: 0x0000CBBE File Offset: 0x0000ADBE
		public float SubstitutionFactor { get; private set; }

		// Token: 0x170000F4 RID: 244
		// (get) Token: 0x06000308 RID: 776 RVA: 0x0000CBC7 File Offset: 0x0000ADC7
		// (set) Token: 0x06000309 RID: 777 RVA: 0x0000CBCF File Offset: 0x0000ADCF
		public ItemCategory.Property Properties { get; private set; }

		// Token: 0x170000F5 RID: 245
		// (get) Token: 0x0600030A RID: 778 RVA: 0x0000CBD8 File Offset: 0x0000ADD8
		// (set) Token: 0x0600030B RID: 779 RVA: 0x0000CBE0 File Offset: 0x0000ADE0
		public bool IsValid { get; private set; }

		// Token: 0x0600030C RID: 780 RVA: 0x0000CBE9 File Offset: 0x0000ADE9
		public ItemCategory(string stringId)
			: base(stringId)
		{
		}

		// Token: 0x0600030D RID: 781 RVA: 0x0000CBF4 File Offset: 0x0000ADF4
		public ItemCategory InitializeObject(bool isTradeGood = false, int baseDemand = 0, int luxuryDemand = 0, ItemCategory.Property properties = ItemCategory.Property.None, ItemCategory canSubstitute = null, float substitutionFactor = 0f, bool isAnimal = false, bool isValid = true)
		{
			base.Initialize();
			this.Properties = properties;
			this.BaseDemand = (float)baseDemand * 0.001f;
			this.LuxuryDemand = (float)luxuryDemand * 0.001f;
			this.IsTradeGood = isTradeGood;
			this.IsAnimal = isAnimal;
			this.CanSubstitute = canSubstitute;
			this.SubstitutionFactor = substitutionFactor;
			this.IsValid = isValid;
			base.AfterInitialized();
			return this;
		}

		// Token: 0x0600030E RID: 782 RVA: 0x0000CC59 File Offset: 0x0000AE59
		public override TextObject GetName()
		{
			return GameTexts.FindText("str_item_category", base.StringId);
		}

		// Token: 0x0600030F RID: 783 RVA: 0x0000CC6B File Offset: 0x0000AE6B
		public override string ToString()
		{
			return base.StringId;
		}

		// Token: 0x170000F6 RID: 246
		// (get) Token: 0x06000310 RID: 784 RVA: 0x0000CC73 File Offset: 0x0000AE73
		// (set) Token: 0x06000311 RID: 785 RVA: 0x0000CC7B File Offset: 0x0000AE7B
		public float BaseDemand { get; private set; }

		// Token: 0x170000F7 RID: 247
		// (get) Token: 0x06000312 RID: 786 RVA: 0x0000CC84 File Offset: 0x0000AE84
		// (set) Token: 0x06000313 RID: 787 RVA: 0x0000CC8C File Offset: 0x0000AE8C
		public float LuxuryDemand { get; private set; }

		// Token: 0x020000E4 RID: 228
		public enum Property
		{
			// Token: 0x04000645 RID: 1605
			None,
			// Token: 0x04000646 RID: 1606
			BonusToProduction,
			// Token: 0x04000647 RID: 1607
			BonusToFoodStores,
			// Token: 0x04000648 RID: 1608
			BonusToProsperity,
			// Token: 0x04000649 RID: 1609
			BonusToLoyalty,
			// Token: 0x0400064A RID: 1610
			BonusToMilitia,
			// Token: 0x0400064B RID: 1611
			BonusToGarrison,
			// Token: 0x0400064C RID: 1612
			BonusToTax
		}
	}
}
