using System;
using System.Collections.Generic;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem
{
	// Token: 0x0200006C RID: 108
	internal class FactionManagerStancesData
	{
		// Token: 0x06000E3D RID: 3645 RVA: 0x00042814 File Offset: 0x00040A14
		internal static void AutoGeneratedStaticCollectObjectsFactionManagerStancesData(object o, List<object> collectedObjects)
		{
			((FactionManagerStancesData)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06000E3E RID: 3646 RVA: 0x00042822 File Offset: 0x00040A22
		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this._stances);
		}

		// Token: 0x06000E3F RID: 3647 RVA: 0x00042830 File Offset: 0x00040A30
		internal static object AutoGeneratedGetMemberValue_stances(object o)
		{
			return ((FactionManagerStancesData)o)._stances;
		}

		// Token: 0x06000E40 RID: 3648 RVA: 0x0004283D File Offset: 0x00040A3D
		public Dictionary<ValueTuple<IFaction, IFaction>, StanceLink>.ValueCollection GetStanceLinks()
		{
			return this._stances.Values;
		}

		// Token: 0x06000E41 RID: 3649 RVA: 0x0004284C File Offset: 0x00040A4C
		internal StanceLink GetStance(IFaction faction1, IFaction faction2)
		{
			ValueTuple<IFaction, IFaction> key = this.GetKey(faction1, faction2);
			StanceLink stanceLink;
			this._stances.TryGetValue(key, out stanceLink);
			return stanceLink;
		}

		// Token: 0x06000E42 RID: 3650 RVA: 0x00042874 File Offset: 0x00040A74
		public void AddStance(StanceLink stance)
		{
			ValueTuple<IFaction, IFaction> key = this.GetKey(stance);
			if (this._stances.ContainsKey(key))
			{
				this._stances[key] = stance;
				return;
			}
			this._stances.Add(key, stance);
		}

		// Token: 0x06000E43 RID: 3651 RVA: 0x000428B4 File Offset: 0x00040AB4
		public void RemoveStance(StanceLink stance)
		{
			ValueTuple<IFaction, IFaction> key = this.GetKey(stance);
			if (this._stances.ContainsKey(key))
			{
				this._stances.Remove(key);
			}
		}

		// Token: 0x06000E44 RID: 3652 RVA: 0x000428E4 File Offset: 0x00040AE4
		private ValueTuple<IFaction, IFaction> GetKey(IFaction faction1, IFaction faction2)
		{
			if (faction1.Id < faction2.Id)
			{
				return new ValueTuple<IFaction, IFaction>(faction1, faction2);
			}
			return new ValueTuple<IFaction, IFaction>(faction2, faction1);
		}

		// Token: 0x06000E45 RID: 3653 RVA: 0x00042908 File Offset: 0x00040B08
		private ValueTuple<IFaction, IFaction> GetKey(StanceLink stance)
		{
			return this.GetKey(stance.Faction1, stance.Faction2);
		}

		// Token: 0x0400042A RID: 1066
		[SaveableField(10)]
		private Dictionary<ValueTuple<IFaction, IFaction>, StanceLink> _stances = new Dictionary<ValueTuple<IFaction, IFaction>, StanceLink>();
	}
}
