using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.CampaignSystem.Extensions;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.Core;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Settlements
{
	// Token: 0x0200035A RID: 858
	public class VillageMarketData : IMarketData
	{
		// Token: 0x06003087 RID: 12423 RVA: 0x000CBFBC File Offset: 0x000CA1BC
		internal static void AutoGeneratedStaticCollectObjectsVillageMarketData(object o, List<object> collectedObjects)
		{
			((VillageMarketData)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06003088 RID: 12424 RVA: 0x000CBFCA File Offset: 0x000CA1CA
		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this._village);
		}

		// Token: 0x06003089 RID: 12425 RVA: 0x000CBFD8 File Offset: 0x000CA1D8
		internal static object AutoGeneratedGetMemberValue_village(object o)
		{
			return ((VillageMarketData)o)._village;
		}

		// Token: 0x17000B98 RID: 2968
		// (get) Token: 0x0600308A RID: 12426 RVA: 0x000CBFE5 File Offset: 0x000CA1E5
		private Settlement ClosestTown
		{
			get
			{
				if (this._closestTown == null)
				{
					this._closestTown = SettlementHelper.FindNearestTown(null, this._village.Settlement);
				}
				return this._closestTown;
			}
		}

		// Token: 0x0600308B RID: 12427 RVA: 0x000CC00C File Offset: 0x000CA20C
		public VillageMarketData(Village village)
		{
			this._village = village;
		}

		// Token: 0x0600308C RID: 12428 RVA: 0x000CC01B File Offset: 0x000CA21B
		public int GetPrice(ItemObject item, MobileParty tradingParty, bool isSelling, PartyBase merchantParty)
		{
			return this.GetPrice(new EquipmentElement(item, null, null, false), tradingParty, isSelling, merchantParty);
		}

		// Token: 0x0600308D RID: 12429 RVA: 0x000CC030 File Offset: 0x000CA230
		public int GetPrice(EquipmentElement itemRosterElement, MobileParty tradingParty, bool isSelling, PartyBase merchantParty)
		{
			ItemData categoryData = (this._village.TradeBound ?? this.ClosestTown).Town.MarketData.GetCategoryData(itemRosterElement.Item.GetItemCategory());
			return Campaign.Current.Models.TradeItemPriceFactorModel.GetPrice(itemRosterElement, tradingParty, merchantParty, isSelling, (float)categoryData.InStoreValue, categoryData.Supply, categoryData.Demand);
		}

		// Token: 0x04000FEF RID: 4079
		[SaveableField(1)]
		private Village _village;

		// Token: 0x04000FF0 RID: 4080
		private Settlement _closestTown;
	}
}
