using System;
using System.Collections.Generic;
using System.Linq;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;

namespace TaleWorlds.CampaignSystem.Settlements.Buildings
{
	// Token: 0x02000372 RID: 882
	public sealed class BuildingType : MBObjectBase
	{
		// Token: 0x0600337A RID: 13178 RVA: 0x000D4758 File Offset: 0x000D2958
		internal static void AutoGeneratedStaticCollectObjectsBuildingType(object o, List<object> collectedObjects)
		{
			((BuildingType)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x0600337B RID: 13179 RVA: 0x000D4766 File Offset: 0x000D2966
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x17000C91 RID: 3217
		// (get) Token: 0x0600337C RID: 13180 RVA: 0x000D476F File Offset: 0x000D296F
		public static MBReadOnlyList<BuildingType> All
		{
			get
			{
				return Campaign.Current.AllBuildingTypes;
			}
		}

		// Token: 0x17000C92 RID: 3218
		// (get) Token: 0x0600337D RID: 13181 RVA: 0x000D477B File Offset: 0x000D297B
		// (set) Token: 0x0600337E RID: 13182 RVA: 0x000D4783 File Offset: 0x000D2983
		public TextObject Name { get; private set; }

		// Token: 0x17000C93 RID: 3219
		// (get) Token: 0x0600337F RID: 13183 RVA: 0x000D478C File Offset: 0x000D298C
		// (set) Token: 0x06003380 RID: 13184 RVA: 0x000D4794 File Offset: 0x000D2994
		public TextObject Explanation { get; private set; }

		// Token: 0x06003381 RID: 13185 RVA: 0x000D479D File Offset: 0x000D299D
		public BuildingType(string stringId)
			: base(stringId)
		{
		}

		// Token: 0x06003382 RID: 13186 RVA: 0x000D47B4 File Offset: 0x000D29B4
		public void Initialize(TextObject name, TextObject explanation, int[] productionCosts, BuildingLocation buildingLocation, Tuple<BuildingEffectEnum, float, float, float>[] effects, int startLevel = 0)
		{
			base.Initialize();
			this.Name = name;
			this.Explanation = explanation;
			this._productionCosts = productionCosts;
			this.IsDefaultProject = buildingLocation == BuildingLocation.Daily;
			this._effects = effects.Select((Tuple<BuildingEffectEnum, float, float, float> x) => new BuildingType.EffectInfo(x.Item1, x.Item2, x.Item3, x.Item4)).ToArray<BuildingType.EffectInfo>();
			this.StartLevel = startLevel;
			this.BuildingLocation = buildingLocation;
			base.AfterInitialized();
		}

		// Token: 0x06003383 RID: 13187 RVA: 0x000D482E File Offset: 0x000D2A2E
		public override string ToString()
		{
			return this.Name.ToString();
		}

		// Token: 0x06003384 RID: 13188 RVA: 0x000D483B File Offset: 0x000D2A3B
		public int GetProductionCost(int level)
		{
			if (level < this.StartLevel || level >= 3)
			{
				return 0;
			}
			return this._productionCosts[level];
		}

		// Token: 0x06003385 RID: 13189 RVA: 0x000D4854 File Offset: 0x000D2A54
		public float GetBaseBuildingEffectAmount(BuildingEffectEnum effect, int level)
		{
			for (int i = 0; i < this._effects.Length; i++)
			{
				if (this._effects[i].BuildingEffect == effect)
				{
					return this._effects[i].GetEffectValue(level);
				}
			}
			return 0f;
		}

		// Token: 0x06003386 RID: 13190 RVA: 0x000D48A0 File Offset: 0x000D2AA0
		public TextObject GetExplanationAtLevel(int level)
		{
			if (level == 0 || level > 3)
			{
				return TextObject.Empty;
			}
			TextObject textObject = TextObject.Empty;
			if (this._effects.Length == 1)
			{
				textObject = GameTexts.FindText("str_building_effect_explanation", Enum.GetName(typeof(BuildingEffectEnum), this._effects[0].BuildingEffect));
				textObject.SetTextVariable("BONUS_AMOUNT", this._effects[0].GetEffectValue(level));
			}
			else if (this._effects.Length >= 2)
			{
				textObject = GameTexts.FindText("str_string_newline_string", null);
				TextObject textObject2 = GameTexts.FindText("str_building_effect_explanation", Enum.GetName(typeof(BuildingEffectEnum), this._effects[0].BuildingEffect));
				textObject2.SetTextVariable("BONUS_AMOUNT", this._effects[0].GetEffectValue(level));
				TextObject textObject3 = GameTexts.FindText("str_building_effect_explanation", Enum.GetName(typeof(BuildingEffectEnum), this._effects[1].BuildingEffect));
				textObject3.SetTextVariable("BONUS_AMOUNT", this._effects[1].GetEffectValue(level));
				textObject.SetTextVariable("STR1", textObject2);
				textObject.SetTextVariable("STR2", textObject3);
				textObject.SetTextVariable("newline", "\n");
				for (int i = 2; i < this._effects.Length; i++)
				{
					TextObject textObject4 = GameTexts.FindText("str_string_newline_string", null);
					textObject4.SetTextVariable("STR1", textObject);
					TextObject textObject5 = GameTexts.FindText("str_building_effect_explanation", Enum.GetName(typeof(BuildingEffectEnum), this._effects[i].BuildingEffect));
					textObject5.SetTextVariable("BONUS_AMOUNT", this._effects[i].GetEffectValue(level));
					textObject4.SetTextVariable("STR2", textObject5);
					textObject4.SetTextVariable("newline", "\n");
					textObject = textObject4;
				}
			}
			return textObject;
		}

		// Token: 0x040010BB RID: 4283
		public const int MaxLevel = 3;

		// Token: 0x040010BC RID: 4284
		public bool IsDefaultProject;

		// Token: 0x040010BD RID: 4285
		private int[] _productionCosts = new int[3];

		// Token: 0x040010BE RID: 4286
		public int StartLevel;

		// Token: 0x040010BF RID: 4287
		public BuildingLocation BuildingLocation;

		// Token: 0x040010C2 RID: 4290
		private BuildingType.EffectInfo[] _effects;

		// Token: 0x020006A9 RID: 1705
		public struct EffectInfo
		{
			// Token: 0x17001354 RID: 4948
			// (get) Token: 0x060053D6 RID: 21462 RVA: 0x00169DBC File Offset: 0x00167FBC
			public BuildingEffectEnum BuildingEffect { get; }

			// Token: 0x17001355 RID: 4949
			// (get) Token: 0x060053D7 RID: 21463 RVA: 0x00169DC4 File Offset: 0x00167FC4
			public float Level1Effect { get; }

			// Token: 0x17001356 RID: 4950
			// (get) Token: 0x060053D8 RID: 21464 RVA: 0x00169DCC File Offset: 0x00167FCC
			public float Level2Effect { get; }

			// Token: 0x17001357 RID: 4951
			// (get) Token: 0x060053D9 RID: 21465 RVA: 0x00169DD4 File Offset: 0x00167FD4
			public float Level3Effect { get; }

			// Token: 0x060053DA RID: 21466 RVA: 0x00169DDC File Offset: 0x00167FDC
			public float GetEffectValue(int i)
			{
				if (i == 1)
				{
					return this.Level1Effect;
				}
				if (i != 2)
				{
					return this.Level3Effect;
				}
				return this.Level2Effect;
			}

			// Token: 0x060053DB RID: 21467 RVA: 0x00169DFA File Offset: 0x00167FFA
			public EffectInfo(BuildingEffectEnum effect, float[] effectValues)
			{
				this.BuildingEffect = effect;
				this.Level1Effect = effectValues[0];
				this.Level2Effect = effectValues[1];
				this.Level3Effect = effectValues[2];
			}

			// Token: 0x060053DC RID: 21468 RVA: 0x00169E1E File Offset: 0x0016801E
			public EffectInfo(BuildingEffectEnum effect, float effectValue1, float effectValue2, float effectValue3)
			{
				this.BuildingEffect = effect;
				this.Level1Effect = effectValue1;
				this.Level2Effect = effectValue2;
				this.Level3Effect = effectValue3;
			}
		}
	}
}
