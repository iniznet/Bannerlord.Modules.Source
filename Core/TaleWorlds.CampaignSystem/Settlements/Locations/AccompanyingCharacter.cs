using System;
using System.Collections.Generic;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Settlements.Locations
{
	// Token: 0x0200036B RID: 875
	public class AccompanyingCharacter
	{
		// Token: 0x0600331A RID: 13082 RVA: 0x000D30EB File Offset: 0x000D12EB
		internal static void AutoGeneratedStaticCollectObjectsAccompanyingCharacter(object o, List<object> collectedObjects)
		{
			((AccompanyingCharacter)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x0600331B RID: 13083 RVA: 0x000D30F9 File Offset: 0x000D12F9
		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this._disallowedLocations);
		}

		// Token: 0x0600331C RID: 13084 RVA: 0x000D3107 File Offset: 0x000D1307
		internal static object AutoGeneratedGetMemberValueIsFollowingPlayerAtMissionStart(object o)
		{
			return ((AccompanyingCharacter)o).IsFollowingPlayerAtMissionStart;
		}

		// Token: 0x0600331D RID: 13085 RVA: 0x000D3119 File Offset: 0x000D1319
		internal static object AutoGeneratedGetMemberValue_disallowedLocations(object o)
		{
			return ((AccompanyingCharacter)o)._disallowedLocations;
		}

		// Token: 0x17000C7F RID: 3199
		// (get) Token: 0x0600331E RID: 13086 RVA: 0x000D3126 File Offset: 0x000D1326
		// (set) Token: 0x0600331F RID: 13087 RVA: 0x000D312E File Offset: 0x000D132E
		[SaveableProperty(1)]
		public bool IsFollowingPlayerAtMissionStart { get; private set; }

		// Token: 0x06003320 RID: 13088 RVA: 0x000D3137 File Offset: 0x000D1337
		public AccompanyingCharacter(LocationCharacter locationCharacter, bool isFollowingPlayerAtMissionStart)
		{
			this._disallowedLocations = new List<Location>();
			this.LocationCharacter = locationCharacter;
			this.IsFollowingPlayerAtMissionStart = isFollowingPlayerAtMissionStart;
		}

		// Token: 0x06003321 RID: 13089 RVA: 0x000D3158 File Offset: 0x000D1358
		public bool CanEnterLocation(Location location)
		{
			return !this._disallowedLocations.Contains(location);
		}

		// Token: 0x06003322 RID: 13090 RVA: 0x000D316C File Offset: 0x000D136C
		public void AllowEntranceToLocations(Func<Location, bool> predicate)
		{
			foreach (Location location in LocationComplex.Current.GetListOfLocations())
			{
				if (predicate(location) && this._disallowedLocations.Contains(location))
				{
					this._disallowedLocations.Remove(location);
				}
			}
		}

		// Token: 0x06003323 RID: 13091 RVA: 0x000D31DC File Offset: 0x000D13DC
		public void DisallowEntranceToLocations(Func<Location, bool> predicate)
		{
			foreach (Location location in LocationComplex.Current.GetListOfLocations())
			{
				if (predicate(location) && !this._disallowedLocations.Contains(location))
				{
					this._disallowedLocations.Add(location);
				}
			}
		}

		// Token: 0x06003324 RID: 13092 RVA: 0x000D324C File Offset: 0x000D144C
		public void AllowEntranceToAllLocations()
		{
			this._disallowedLocations.Clear();
		}

		// Token: 0x06003325 RID: 13093 RVA: 0x000D3259 File Offset: 0x000D1459
		public void DisallowEntranceToAllLocations()
		{
			this.AllowEntranceToAllLocations();
			this._disallowedLocations.AddRange(LocationComplex.Current.GetListOfLocations());
		}

		// Token: 0x040010A1 RID: 4257
		public LocationCharacter LocationCharacter;

		// Token: 0x040010A3 RID: 4259
		[SaveableField(2)]
		private List<Location> _disallowedLocations;
	}
}
