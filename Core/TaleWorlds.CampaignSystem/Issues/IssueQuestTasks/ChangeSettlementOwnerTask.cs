using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.Actions;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Issues.IssueQuestTasks
{
	// Token: 0x02000326 RID: 806
	public class ChangeSettlementOwnerTask : QuestTaskBase
	{
		// Token: 0x06002DC3 RID: 11715 RVA: 0x000BF3EA File Offset: 0x000BD5EA
		internal static void AutoGeneratedStaticCollectObjectsChangeSettlementOwnerTask(object o, List<object> collectedObjects)
		{
			((ChangeSettlementOwnerTask)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002DC4 RID: 11716 RVA: 0x000BF3F8 File Offset: 0x000BD5F8
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this._settlement);
			collectedObjects.Add(this._newOwner);
		}

		// Token: 0x06002DC5 RID: 11717 RVA: 0x000BF419 File Offset: 0x000BD619
		internal static object AutoGeneratedGetMemberValue_settlement(object o)
		{
			return ((ChangeSettlementOwnerTask)o)._settlement;
		}

		// Token: 0x06002DC6 RID: 11718 RVA: 0x000BF426 File Offset: 0x000BD626
		internal static object AutoGeneratedGetMemberValue_newOwner(object o)
		{
			return ((ChangeSettlementOwnerTask)o)._newOwner;
		}

		// Token: 0x06002DC7 RID: 11719 RVA: 0x000BF433 File Offset: 0x000BD633
		public ChangeSettlementOwnerTask(Settlement settlement, Hero newOwner, Action onSucceededAction, Action onFailedAction, Action onCanceledAction, DialogFlow dialogFlow = null)
			: base(dialogFlow, onSucceededAction, onFailedAction, onCanceledAction)
		{
			this._settlement = settlement;
			this._newOwner = newOwner;
		}

		// Token: 0x06002DC8 RID: 11720 RVA: 0x000BF450 File Offset: 0x000BD650
		public void OnSettlementOwnerChanged(Settlement settlement, bool openToClaim, Hero newOwner, Hero oldOwner, Hero capturerHero, ChangeOwnerOfSettlementAction.ChangeOwnerOfSettlementDetail detail)
		{
			if (this._settlement == settlement && this._newOwner == newOwner)
			{
				base.Finish(QuestTaskBase.FinishStates.Success);
			}
		}

		// Token: 0x06002DC9 RID: 11721 RVA: 0x000BF46B File Offset: 0x000BD66B
		public override void SetReferences()
		{
			CampaignEvents.OnSettlementOwnerChangedEvent.AddNonSerializedListener(this, new Action<Settlement, bool, Hero, Hero, Hero, ChangeOwnerOfSettlementAction.ChangeOwnerOfSettlementDetail>(this.OnSettlementOwnerChanged));
		}

		// Token: 0x04000DC9 RID: 3529
		[SaveableField(30)]
		private readonly Settlement _settlement;

		// Token: 0x04000DCA RID: 3530
		[SaveableField(31)]
		private readonly Hero _newOwner;
	}
}
