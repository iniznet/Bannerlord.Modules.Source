using System;
using System.Collections.Generic;
using System.Linq;
using Helpers;
using TaleWorlds.CampaignSystem.Actions;
using TaleWorlds.CampaignSystem.CharacterDevelopment;
using TaleWorlds.CampaignSystem.Conversation;
using TaleWorlds.CampaignSystem.Extensions;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.CampaignSystem.Roster;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Issues
{
	// Token: 0x02000302 RID: 770
	public class ArtisanOverpricedGoodsIssueBehavior : CampaignBehaviorBase
	{
		// Token: 0x17000ACD RID: 2765
		// (get) Token: 0x06002C85 RID: 11397 RVA: 0x000BA274 File Offset: 0x000B8474
		private static IEnumerable<ItemObject> PossibleRequestedItems
		{
			get
			{
				yield return MBObjectManager.Instance.GetObject<ItemObject>("cow");
				yield return MBObjectManager.Instance.GetObject<ItemObject>("sheep");
				yield return MBObjectManager.Instance.GetObject<ItemObject>("wool");
				yield return MBObjectManager.Instance.GetObject<ItemObject>("iron");
				yield return MBObjectManager.Instance.GetObject<ItemObject>("leather");
				yield return MBObjectManager.Instance.GetObject<ItemObject>("hardwood");
				yield break;
			}
		}

		// Token: 0x06002C86 RID: 11398 RVA: 0x000BA27D File Offset: 0x000B847D
		public override void RegisterEvents()
		{
			CampaignEvents.OnCheckForIssueEvent.AddNonSerializedListener(this, new Action<Hero>(this.OnCheckForIssue));
		}

		// Token: 0x06002C87 RID: 11399 RVA: 0x000BA296 File Offset: 0x000B8496
		public override void SyncData(IDataStore dataStore)
		{
		}

		// Token: 0x06002C88 RID: 11400 RVA: 0x000BA298 File Offset: 0x000B8498
		public void OnCheckForIssue(Hero hero)
		{
			Hero hero2;
			ItemObject itemObject;
			if (this.ConditionsHold(hero, out hero2, out itemObject))
			{
				KeyValuePair<Hero, ItemObject> keyValuePair = new KeyValuePair<Hero, ItemObject>(hero2, itemObject);
				Campaign.Current.IssueManager.AddPotentialIssueData(hero, new PotentialIssueData(new PotentialIssueData.StartIssueDelegate(this.OnStartIssue), typeof(ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssue), IssueBase.IssueFrequency.Common, keyValuePair));
				return;
			}
			Campaign.Current.IssueManager.AddPotentialIssueData(hero, new PotentialIssueData(typeof(ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssue), IssueBase.IssueFrequency.Common));
		}

		// Token: 0x06002C89 RID: 11401 RVA: 0x000BA310 File Offset: 0x000B8510
		private Hero GetAntagonistMerchant(Hero issueOwner)
		{
			return issueOwner.CurrentSettlement.Notables.GetRandomElementWithPredicate((Hero x) => x != issueOwner && x.IsMerchant && x.GetTraitLevel(DefaultTraits.Mercy) <= 0 && x.CanHaveQuestsOrIssues());
		}

		// Token: 0x06002C8A RID: 11402 RVA: 0x000BA34C File Offset: 0x000B854C
		private bool ConditionsHold(Hero IssueOwner, out Hero antagonistMerchant, out ItemObject requestedItem)
		{
			antagonistMerchant = null;
			requestedItem = null;
			if (IssueOwner.CurrentSettlement != null && IssueOwner.CurrentSettlement.IsTown && IssueOwner.IsArtisan)
			{
				antagonistMerchant = this.GetAntagonistMerchant(IssueOwner);
				if (antagonistMerchant != null)
				{
					foreach (ItemObject itemObject in ArtisanOverpricedGoodsIssueBehavior.PossibleRequestedItems)
					{
						if (IssueOwner.CurrentSettlement.Town.GetItemCategoryPriceIndex(itemObject.ItemCategory) > 1.4f)
						{
							requestedItem = itemObject;
							return true;
						}
					}
					return false;
				}
				return false;
			}
			return false;
		}

		// Token: 0x06002C8B RID: 11403 RVA: 0x000BA3EC File Offset: 0x000B85EC
		private IssueBase OnStartIssue(in PotentialIssueData pid, Hero issueOwner)
		{
			PotentialIssueData potentialIssueData = pid;
			KeyValuePair<Hero, ItemObject> keyValuePair = (KeyValuePair<Hero, ItemObject>)potentialIssueData.RelatedObject;
			return new ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssue(issueOwner, keyValuePair.Key, keyValuePair.Value);
		}

		// Token: 0x04000D70 RID: 3440
		private const IssueBase.IssueFrequency ArtisanOverpricedGoodsIssueFrequency = IssueBase.IssueFrequency.Common;

		// Token: 0x04000D71 RID: 3441
		private const float HighestPriceIndexAtTown = 1.4f;

		// Token: 0x02000600 RID: 1536
		public class ArtisanOverpricedGoodsIssue : IssueBase
		{
			// Token: 0x06004703 RID: 18179 RVA: 0x0013F41A File Offset: 0x0013D61A
			internal static void AutoGeneratedStaticCollectObjectsArtisanOverpricedGoodsIssue(object o, List<object> collectedObjects)
			{
				((ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssue)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
			}

			// Token: 0x06004704 RID: 18180 RVA: 0x0013F428 File Offset: 0x0013D628
			protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
			{
				base.AutoGeneratedInstanceCollectObjects(collectedObjects);
				collectedObjects.Add(this._requestedTradeGood);
				collectedObjects.Add(this.CounterOfferHero);
			}

			// Token: 0x06004705 RID: 18181 RVA: 0x0013F449 File Offset: 0x0013D649
			internal static object AutoGeneratedGetMemberValueRequestedTradeGoodAmount(object o)
			{
				return ((ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssue)o).RequestedTradeGoodAmount;
			}

			// Token: 0x06004706 RID: 18182 RVA: 0x0013F45B File Offset: 0x0013D65B
			internal static object AutoGeneratedGetMemberValueCounterOfferHero(object o)
			{
				return ((ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssue)o).CounterOfferHero;
			}

			// Token: 0x06004707 RID: 18183 RVA: 0x0013F468 File Offset: 0x0013D668
			internal static object AutoGeneratedGetMemberValue_goldReward(object o)
			{
				return ((ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssue)o)._goldReward;
			}

			// Token: 0x06004708 RID: 18184 RVA: 0x0013F47A File Offset: 0x0013D67A
			internal static object AutoGeneratedGetMemberValue_requestedTradeGood(object o)
			{
				return ((ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssue)o)._requestedTradeGood;
			}

			// Token: 0x17000E3C RID: 3644
			// (get) Token: 0x06004709 RID: 18185 RVA: 0x0013F487 File Offset: 0x0013D687
			public override int AlternativeSolutionBaseNeededMenCount
			{
				get
				{
					return 4 + MathF.Ceiling(6f * base.IssueDifficultyMultiplier);
				}
			}

			// Token: 0x17000E3D RID: 3645
			// (get) Token: 0x0600470A RID: 18186 RVA: 0x0013F49C File Offset: 0x0013D69C
			protected override int AlternativeSolutionBaseDurationInDaysInternal
			{
				get
				{
					return 3 + MathF.Ceiling(5f * base.IssueDifficultyMultiplier);
				}
			}

			// Token: 0x17000E3E RID: 3646
			// (get) Token: 0x0600470B RID: 18187 RVA: 0x0013F4B1 File Offset: 0x0013D6B1
			public override IssueBase.AlternativeSolutionScaleFlag AlternativeSolutionScaleFlags
			{
				get
				{
					return IssueBase.AlternativeSolutionScaleFlag.Duration;
				}
			}

			// Token: 0x17000E3F RID: 3647
			// (get) Token: 0x0600470C RID: 18188 RVA: 0x0013F4B4 File Offset: 0x0013D6B4
			protected override int RewardGold
			{
				get
				{
					return this._goldReward;
				}
			}

			// Token: 0x17000E40 RID: 3648
			// (get) Token: 0x0600470D RID: 18189 RVA: 0x0013F4BC File Offset: 0x0013D6BC
			// (set) Token: 0x0600470E RID: 18190 RVA: 0x0013F4C4 File Offset: 0x0013D6C4
			[SaveableProperty(12)]
			private int RequestedTradeGoodAmount { get; set; }

			// Token: 0x17000E41 RID: 3649
			// (get) Token: 0x0600470F RID: 18191 RVA: 0x0013F4CD File Offset: 0x0013D6CD
			private int RequiredGoldForAlternativeSolution
			{
				get
				{
					return MathF.Floor((float)(this._requestedTradeGood.Value * this.RequestedTradeGoodAmount) * 0.75f);
				}
			}

			// Token: 0x17000E42 RID: 3650
			// (get) Token: 0x06004710 RID: 18192 RVA: 0x0013F4ED File Offset: 0x0013D6ED
			// (set) Token: 0x06004711 RID: 18193 RVA: 0x0013F4F5 File Offset: 0x0013D6F5
			[SaveableProperty(11)]
			public override Hero CounterOfferHero { get; protected set; }

			// Token: 0x17000E43 RID: 3651
			// (get) Token: 0x06004712 RID: 18194 RVA: 0x0013F4FE File Offset: 0x0013D6FE
			public override int NeededInfluenceForLordSolution
			{
				get
				{
					return 15 + MathF.Ceiling(35f * base.IssueDifficultyMultiplier);
				}
			}

			// Token: 0x17000E44 RID: 3652
			// (get) Token: 0x06004713 RID: 18195 RVA: 0x0013F514 File Offset: 0x0013D714
			public override TextObject IssueBriefByIssueGiver
			{
				get
				{
					return new TextObject("{=FKtkmwtb}I don't know if you know much about the law here... Craftsmen like me are required to buy our raw materials from local merchants. The other side of the bargain is that they offer us reasonable prices. But they're not doing that! They've come together and agreed on a price that's just too high. They don't care if it ruins us - they can always sell the goods elsewhere.", null);
				}
			}

			// Token: 0x17000E45 RID: 3653
			// (get) Token: 0x06004714 RID: 18196 RVA: 0x0013F521 File Offset: 0x0013D721
			public override TextObject IssueAcceptByPlayer
			{
				get
				{
					return new TextObject("{=j4V4fVBd}I see... How can I help?", null);
				}
			}

			// Token: 0x17000E46 RID: 3654
			// (get) Token: 0x06004715 RID: 18197 RVA: 0x0013F52E File Offset: 0x0013D72E
			protected override TextObject LordSolutionStartLog
			{
				get
				{
					return new TextObject("{=p5OHK0Lh}You decided to issue a decree banning the merchants' price-fixing arrangement.", null);
				}
			}

			// Token: 0x17000E47 RID: 3655
			// (get) Token: 0x06004716 RID: 18198 RVA: 0x0013F53B File Offset: 0x0013D73B
			protected override TextObject LordSolutionCounterOfferRefuseLog
			{
				get
				{
					return new TextObject("{=wrliXWLc}You approved the law which prevents price fixing in the markets and rejected the merchants' counter-offer.", null);
				}
			}

			// Token: 0x17000E48 RID: 3656
			// (get) Token: 0x06004717 RID: 18199 RVA: 0x0013F548 File Offset: 0x0013D748
			protected override TextObject LordSolutionCounterOfferAcceptLog
			{
				get
				{
					return new TextObject("{=bSguu34C}After listening to the town merchants, you decided to let the merchants continue price-fixing.", null);
				}
			}

			// Token: 0x17000E49 RID: 3657
			// (get) Token: 0x06004718 RID: 18200 RVA: 0x0013F558 File Offset: 0x0013D758
			public override TextObject IssueQuestSolutionExplanationByIssueGiver
			{
				get
				{
					TextObject textObject = new TextObject("{=epcc2knY}Well, you get around, right? It wouldn't be hard for you to collect the {.%}{SELECTED_GOOD}{.%} we need. If you could bring, say {SELECTED_AMOUNT} {.%}{?SELECTED_AMOUNT > 1}{PLURAL(SELECTED_GOOD)}{?}{SELECTED_GOOD}{\\?}{.%} directly to me instead of selling to the merchants, I would gladly pay {REWARD_AMOUNT}{GOLD_ICON} for them. With this, the merchants would have to lower their prices.", null);
					textObject.SetTextVariable("SELECTED_GOOD", this._requestedTradeGood.Name);
					textObject.SetTextVariable("SELECTED_AMOUNT", this.RequestedTradeGoodAmount);
					textObject.SetTextVariable("REWARD_AMOUNT", this.RewardGold);
					textObject.SetTextVariable("GOLD_ICON", "{=!}<img src=\"General\\Icons\\Coin@2x\" extend=\"8\">");
					return textObject;
				}
			}

			// Token: 0x17000E4A RID: 3658
			// (get) Token: 0x06004719 RID: 18201 RVA: 0x0013F5BC File Offset: 0x0013D7BC
			public override TextObject IssueAlternativeSolutionExplanationByIssueGiver
			{
				get
				{
					TextObject textObject = new TextObject("{=XvC1eLR1}Or, if you will not be able to acquire the goods yourself, you can perhaps assign one of your trusted companions to the task. Somewhat with a good understanding of trade and and around {TROOP_NUMBER} {?TROOP_NUMBER}troops{?}troop{\\?} could do it easily enough, along with {GOLD_COST}{GOLD_ICON} denars to make the purchases.", null);
					textObject.SetTextVariable("TROOP_NUMBER", base.GetTotalAlternativeSolutionNeededMenCount());
					textObject.SetTextVariable("GOLD_COST", this.RequiredGoldForAlternativeSolution);
					textObject.SetTextVariable("GOLD_ICON", "{=!}<img src=\"General\\Icons\\Coin@2x\" extend=\"8\">");
					return textObject;
				}
			}

			// Token: 0x17000E4B RID: 3659
			// (get) Token: 0x0600471A RID: 18202 RVA: 0x0013F60C File Offset: 0x0013D80C
			public override TextObject IssueLordSolutionExplanationByIssueGiver
			{
				get
				{
					TextObject textObject = new TextObject("{=JeL0aUOa}You could stop them with a decree, my {?PLAYER.GENDER}lady{?}lord{\\?}. All the craftsmen here would be very grateful.", null);
					StringHelpers.SetCharacterProperties("PLAYER", CharacterObject.PlayerCharacter, textObject, false);
					return textObject;
				}
			}

			// Token: 0x17000E4C RID: 3660
			// (get) Token: 0x0600471B RID: 18203 RVA: 0x0013F638 File Offset: 0x0013D838
			public override TextObject IssueQuestSolutionAcceptByPlayer
			{
				get
				{
					TextObject textObject = new TextObject("{=mTuIMcLA}All right. I will bring {SELECTED_AMOUNT} {.%}{?SELECTED_AMOUNT > 1}{PLURAL(SELECTED_GOOD)}{?}{SELECTED_GOOD}{\\?}{.%} to you.", null);
					textObject.SetTextVariable("SELECTED_GOOD", this._requestedTradeGood.Name);
					textObject.SetTextVariable("SELECTED_AMOUNT", this.RequestedTradeGoodAmount);
					return textObject;
				}
			}

			// Token: 0x17000E4D RID: 3661
			// (get) Token: 0x0600471C RID: 18204 RVA: 0x0013F66E File Offset: 0x0013D86E
			public override TextObject IssueAlternativeSolutionAcceptByPlayer
			{
				get
				{
					return new TextObject("{=79h7xNeL}I will have one of my companions take care of this.", null);
				}
			}

			// Token: 0x17000E4E RID: 3662
			// (get) Token: 0x0600471D RID: 18205 RVA: 0x0013F67B File Offset: 0x0013D87B
			public override TextObject IssueDiscussAlternativeSolution
			{
				get
				{
					return new TextObject("{=E9GhODyh}I am very grateful to you for sparing your men to help us get what we need for a fair price.", null);
				}
			}

			// Token: 0x17000E4F RID: 3663
			// (get) Token: 0x0600471E RID: 18206 RVA: 0x0013F688 File Offset: 0x0013D888
			public override TextObject IssueAlternativeSolutionResponseByIssueGiver
			{
				get
				{
					TextObject textObject = new TextObject("{=2YiPE05P}Thank you, my {?PLAYER.GENDER}lady{?}lord{\\?}. Your companion will no doubt be very helpful.", null);
					StringHelpers.SetCharacterProperties("PLAYER", CharacterObject.PlayerCharacter, textObject, false);
					return textObject;
				}
			}

			// Token: 0x17000E50 RID: 3664
			// (get) Token: 0x0600471F RID: 18207 RVA: 0x0013F6B4 File Offset: 0x0013D8B4
			public override TextObject IssueLordSolutionAcceptByPlayer
			{
				get
				{
					return new TextObject("{=xTKHO53L}This is outrageous. I declare that from now on that there shall be no price fixing.", null);
				}
			}

			// Token: 0x17000E51 RID: 3665
			// (get) Token: 0x06004720 RID: 18208 RVA: 0x0013F6C4 File Offset: 0x0013D8C4
			public override TextObject IssueLordSolutionResponseByIssueGiver
			{
				get
				{
					TextObject textObject = new TextObject("{=6vPCEaSR}Thank you, my {?PLAYER.GENDER}lady{?}lord{\\?} that would be very good. Merchants will not like this but the hard-working artisans like me will be grateful to you for this.", null);
					StringHelpers.SetCharacterProperties("PLAYER", CharacterObject.PlayerCharacter, textObject, false);
					return textObject;
				}
			}

			// Token: 0x17000E52 RID: 3666
			// (get) Token: 0x06004721 RID: 18209 RVA: 0x0013F6F0 File Offset: 0x0013D8F0
			public override TextObject IssueLordSolutionCounterOfferBriefByOtherNpc
			{
				get
				{
					return new TextObject("{=ojNK5Zem}(One of the merchants in the town comes to talk as you are preparing to depart.)", null);
				}
			}

			// Token: 0x17000E53 RID: 3667
			// (get) Token: 0x06004722 RID: 18210 RVA: 0x0013F6FD File Offset: 0x0013D8FD
			public override TextObject IssueLordSolutionCounterOfferExplanationByOtherNpc
			{
				get
				{
					return new TextObject("{=8Tqv9ezH}We heard you wish to issue a decree changing our longstanding rules on pricing. Of course this is your right, but I'd like to remind you that we merchants pay significantly more taxes than the artisans. I would ask you to think of the finances of the town, and reconsider this.", null);
				}
			}

			// Token: 0x17000E54 RID: 3668
			// (get) Token: 0x06004723 RID: 18211 RVA: 0x0013F70A File Offset: 0x0013D90A
			public override TextObject IssueLordSolutionCounterOfferAcceptByPlayer
			{
				get
				{
					return new TextObject("{=FyTGbvLS}On second thought, I have decided not to interfere with the merchant's business.", null);
				}
			}

			// Token: 0x17000E55 RID: 3669
			// (get) Token: 0x06004724 RID: 18212 RVA: 0x0013F718 File Offset: 0x0013D918
			public override TextObject IssueLordSolutionCounterOfferAcceptResponseByOtherNpc
			{
				get
				{
					TextObject textObject = new TextObject("{=wynCFpsT}This is a wise decision, my {?PLAYER.GENDER}lady{?}lord{\\?}. Thank you.", null);
					StringHelpers.SetCharacterProperties("PLAYER", CharacterObject.PlayerCharacter, textObject, false);
					return textObject;
				}
			}

			// Token: 0x17000E56 RID: 3670
			// (get) Token: 0x06004725 RID: 18213 RVA: 0x0013F744 File Offset: 0x0013D944
			public override TextObject IssueLordSolutionCounterOfferDeclineByPlayer
			{
				get
				{
					return new TextObject("{=IXuaflOe}I stand by my decision.", null);
				}
			}

			// Token: 0x17000E57 RID: 3671
			// (get) Token: 0x06004726 RID: 18214 RVA: 0x0013F751 File Offset: 0x0013D951
			public override TextObject IssueLordSolutionCounterOfferDeclineResponseByOtherNpc
			{
				get
				{
					return new TextObject("{=ypAPaO1J}That's a pity.", null);
				}
			}

			// Token: 0x06004727 RID: 18215 RVA: 0x0013F75E File Offset: 0x0013D95E
			protected override void LordSolutionConsequenceWithRefuseCounterOffer()
			{
				this.ApplySuccessRewards(base.IssueOwner);
			}

			// Token: 0x06004728 RID: 18216 RVA: 0x0013F76C File Offset: 0x0013D96C
			protected override void LordSolutionConsequenceWithAcceptCounterOffer()
			{
				ChangeRelationAction.ApplyPlayerRelation(this.CounterOfferHero, 5, true, true);
				this.RelationshipChangeWithIssueOwner = -5;
				base.IssueSettlement.Prosperity -= 30f;
				TraitLevelingHelper.OnIssueSolvedThroughBetrayal(base.IssueOwner, new Tuple<TraitObject, int>[]
				{
					new Tuple<TraitObject, int>(DefaultTraits.Honor, -50)
				});
				base.IssueOwner.AddPower(-5f);
			}

			// Token: 0x17000E58 RID: 3672
			// (get) Token: 0x06004729 RID: 18217 RVA: 0x0013F7D8 File Offset: 0x0013D9D8
			protected override TextObject AlternativeSolutionStartLog
			{
				get
				{
					TextObject textObject = new TextObject("{=aeKdXKnO}{ISSUE_GIVER.LINK}, an artisan from {SETTLEMENT}, has told you that a local merchant {COUNTER_OFFER.LINK} is asking ridiculous amounts of money for raw materials which {?ISSUE_GIVER.GENDER}she{?}he{\\?} needs to continue {?ISSUE_GIVER.GENDER}her{?}his{\\?} work. {?ISSUE_GIVER.GENDER}She{?}He{\\?} is willing to pay {REWARD_AMOUNT}{GOLD_ICON} for help obtaining the needed goods.{newline}You asked {COMPANION.LINK} to stay with {?ISSUE_GIVER.GENDER}her{?}him{\\?} and try to solve {?ISSUE_GIVER.GENDER}her{?}his{\\?} problems. You expect {COMPANION.LINK} to report back to you in {RETURN_DAYS} days.", null);
					StringHelpers.SetCharacterProperties("ISSUE_GIVER", base.IssueOwner.CharacterObject, textObject, false);
					StringHelpers.SetCharacterProperties("COUNTER_OFFER", this.CounterOfferHero.CharacterObject, textObject, false);
					textObject.SetCharacterProperties("COMPANION", base.AlternativeSolutionHero.CharacterObject, false);
					textObject.SetTextVariable("SETTLEMENT", base.IssueOwner.CurrentSettlement.EncyclopediaLinkWithName);
					textObject.SetTextVariable("REWARD_AMOUNT", this.RewardGold);
					textObject.SetTextVariable("GOLD_ICON", "{=!}<img src=\"General\\Icons\\Coin@2x\" extend=\"8\">");
					textObject.SetTextVariable("RETURN_DAYS", base.GetTotalAlternativeSolutionDurationInDays());
					return textObject;
				}
			}

			// Token: 0x17000E59 RID: 3673
			// (get) Token: 0x0600472A RID: 18218 RVA: 0x0013F88A File Offset: 0x0013DA8A
			public override bool IsThereAlternativeSolution
			{
				get
				{
					return true;
				}
			}

			// Token: 0x17000E5A RID: 3674
			// (get) Token: 0x0600472B RID: 18219 RVA: 0x0013F88D File Offset: 0x0013DA8D
			public override bool IsThereLordSolution
			{
				get
				{
					return true;
				}
			}

			// Token: 0x17000E5B RID: 3675
			// (get) Token: 0x0600472C RID: 18220 RVA: 0x0013F890 File Offset: 0x0013DA90
			public override TextObject Title
			{
				get
				{
					TextObject textObject = new TextObject("{=dt6kKXSL}Overpriced Raw Materials at {SETTLEMENT}", null);
					textObject.SetTextVariable("SETTLEMENT", base.IssueSettlement.Name);
					return textObject;
				}
			}

			// Token: 0x17000E5C RID: 3676
			// (get) Token: 0x0600472D RID: 18221 RVA: 0x0013F8B4 File Offset: 0x0013DAB4
			public override TextObject Description
			{
				get
				{
					TextObject textObject = new TextObject("{=U90asNb9}Artisans in {SETTLEMENT} cannot continue their work because of the overpriced raw materials.", null);
					textObject.SetTextVariable("SETTLEMENT", base.IssueOwner.CurrentSettlement.Name);
					return textObject;
				}
			}

			// Token: 0x17000E5D RID: 3677
			// (get) Token: 0x0600472E RID: 18222 RVA: 0x0013F8E0 File Offset: 0x0013DAE0
			public override TextObject IssueAsRumorInSettlement
			{
				get
				{
					TextObject textObject = new TextObject("{=FPbmUpy7}{QUEST_GIVER.NAME} is in quite a stew over the merchants' monopoly, so I hear.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.IssueOwner.CharacterObject, textObject, false);
					return textObject;
				}
			}

			// Token: 0x17000E5E RID: 3678
			// (get) Token: 0x0600472F RID: 18223 RVA: 0x0013F912 File Offset: 0x0013DB12
			public override TextObject IssueAlternativeSolutionSuccessLog
			{
				get
				{
					TextObject textObject = new TextObject("{=3r2HLPQ1}Your {COMPANION.LINK} has delivered {ISSUE_GIVER.LINK}'s goods as you promised.", null);
					textObject.SetCharacterProperties("COMPANION", base.AlternativeSolutionHero.CharacterObject, false);
					textObject.SetCharacterProperties("ISSUE_GIVER", base.IssueOwner.CharacterObject, false);
					return textObject;
				}
			}

			// Token: 0x06004730 RID: 18224 RVA: 0x0013F94D File Offset: 0x0013DB4D
			public ArtisanOverpricedGoodsIssue(Hero issueOwner, Hero counterOfferHero, ItemObject requestedTradeGood)
				: base(issueOwner, CampaignTime.DaysFromNow(30f))
			{
				this.CounterOfferHero = counterOfferHero;
				this._requestedTradeGood = requestedTradeGood;
				this.CalculateTradeGoodsAmountAndReward();
			}

			// Token: 0x06004731 RID: 18225 RVA: 0x0013F974 File Offset: 0x0013DB74
			protected override float GetIssueEffectAmountInternal(IssueEffect issueEffect)
			{
				if (issueEffect == DefaultIssueEffects.SettlementProsperity)
				{
					return -0.4f;
				}
				return 0f;
			}

			// Token: 0x06004732 RID: 18226 RVA: 0x0013F98C File Offset: 0x0013DB8C
			public override bool IssueStayAliveConditions()
			{
				return base.IssueOwner.CurrentSettlement.Town.GetItemCategoryPriceIndex(this._requestedTradeGood.ItemCategory) > 1.1999999f && this.CounterOfferHero.IsActive && this.CounterOfferHero.CurrentSettlement == base.IssueSettlement;
			}

			// Token: 0x06004733 RID: 18227 RVA: 0x0013F9E2 File Offset: 0x0013DBE2
			protected override void CompleteIssueWithTimedOutConsequences()
			{
			}

			// Token: 0x06004734 RID: 18228 RVA: 0x0013F9E4 File Offset: 0x0013DBE4
			public override ValueTuple<SkillObject, int> GetAlternativeSolutionSkill(Hero hero)
			{
				return new ValueTuple<SkillObject, int>((hero.GetSkillValue(DefaultSkills.Roguery) >= hero.GetSkillValue(DefaultSkills.Trade)) ? DefaultSkills.Roguery : DefaultSkills.Trade, 120);
			}

			// Token: 0x06004735 RID: 18229 RVA: 0x0013FA11 File Offset: 0x0013DC11
			public override bool AlternativeSolutionCondition(out TextObject explanation)
			{
				explanation = TextObject.Empty;
				return QuestHelper.CheckRosterForAlternativeSolution(MobileParty.MainParty.MemberRoster, base.GetTotalAlternativeSolutionNeededMenCount(), ref explanation, 0, false) && QuestHelper.CheckGoldForAlternativeSolution(this.RequiredGoldForAlternativeSolution, ref explanation);
			}

			// Token: 0x06004736 RID: 18230 RVA: 0x0013FA42 File Offset: 0x0013DC42
			public override bool DoTroopsSatisfyAlternativeSolution(TroopRoster troopRoster, out TextObject explanation)
			{
				explanation = TextObject.Empty;
				return QuestHelper.CheckRosterForAlternativeSolution(troopRoster, base.GetTotalAlternativeSolutionNeededMenCount(), ref explanation, 0, false);
			}

			// Token: 0x06004737 RID: 18231 RVA: 0x0013FA5A File Offset: 0x0013DC5A
			public override void AlternativeSolutionStartConsequence()
			{
				GiveGoldAction.ApplyBetweenCharacters(Hero.MainHero, null, this.RequiredGoldForAlternativeSolution, false);
			}

			// Token: 0x06004738 RID: 18232 RVA: 0x0013FA6E File Offset: 0x0013DC6E
			protected override void AlternativeSolutionEndWithSuccessConsequence()
			{
				this.ApplySuccessRewards(base.IssueOwner);
			}

			// Token: 0x06004739 RID: 18233 RVA: 0x0013FA7C File Offset: 0x0013DC7C
			public override bool LordSolutionCondition(out TextObject explanation)
			{
				if (Clan.PlayerClan == Settlement.CurrentSettlement.OwnerClan)
				{
					explanation = TextObject.Empty;
					return true;
				}
				explanation = new TextObject("{=bItEf0WN}You need to be the {?PLAYER.GENDER}lady{?}lord{\\?} of this settlement.", null);
				StringHelpers.SetCharacterProperties("PLAYER", Hero.MainHero.CharacterObject, explanation, false);
				return false;
			}

			// Token: 0x17000E5F RID: 3679
			// (get) Token: 0x0600473A RID: 18234 RVA: 0x0013FAC9 File Offset: 0x0013DCC9
			protected override int CompanionSkillRewardXP
			{
				get
				{
					return (int)(400f + 1700f * base.IssueDifficultyMultiplier);
				}
			}

			// Token: 0x0600473B RID: 18235 RVA: 0x0013FAE0 File Offset: 0x0013DCE0
			private void ApplySuccessRewards(Hero issueGiver)
			{
				issueGiver.AddPower(10f);
				ChangeRelationAction.ApplyPlayerRelation(issueGiver, 5, true, true);
				ChangeRelationAction.ApplyPlayerRelation(this.CounterOfferHero, -10, true, true);
				this.CounterOfferHero.AddPower(-10f);
				issueGiver.CurrentSettlement.Prosperity += 30f;
			}

			// Token: 0x0600473C RID: 18236 RVA: 0x0013FB37 File Offset: 0x0013DD37
			public override IssueBase.IssueFrequency GetFrequency()
			{
				return IssueBase.IssueFrequency.Common;
			}

			// Token: 0x0600473D RID: 18237 RVA: 0x0013FB3A File Offset: 0x0013DD3A
			protected override bool CanPlayerTakeQuestConditions(Hero issueGiver, out IssueBase.PreconditionFlags flag, out Hero relationHero, out SkillObject skill)
			{
				flag = IssueBase.PreconditionFlags.None;
				relationHero = null;
				skill = null;
				if (issueGiver.GetRelationWithPlayer() < -10f)
				{
					flag |= IssueBase.PreconditionFlags.Relation;
					relationHero = issueGiver;
				}
				return flag == IssueBase.PreconditionFlags.None;
			}

			// Token: 0x0600473E RID: 18238 RVA: 0x0013FB64 File Offset: 0x0013DD64
			private void CalculateTradeGoodsAmountAndReward()
			{
				this.RequestedTradeGoodAmount = MathF.Max((int)(2500f / (float)this._requestedTradeGood.Value * base.IssueDifficultyMultiplier), 1);
				this._goldReward = 300 + (int)((float)(base.IssueOwner.CurrentSettlement.Town.GetItemPrice(this._requestedTradeGood, null, false) + this._requestedTradeGood.Value) / 2f) * this.RequestedTradeGoodAmount;
			}

			// Token: 0x0600473F RID: 18239 RVA: 0x0013FBDB File Offset: 0x0013DDDB
			protected override void OnGameLoad()
			{
				if (this.RequestedTradeGoodAmount == 0 || this._goldReward == 0)
				{
					this.CalculateTradeGoodsAmountAndReward();
				}
			}

			// Token: 0x06004740 RID: 18240 RVA: 0x0013FBF3 File Offset: 0x0013DDF3
			protected override QuestBase GenerateIssueQuest(string questId)
			{
				return new ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssueQuest(questId, base.IssueOwner, CampaignTime.DaysFromNow(30f), this._requestedTradeGood, this.RewardGold, this.RequestedTradeGoodAmount, this.CounterOfferHero);
			}

			// Token: 0x040018CF RID: 6351
			private const int RequiredTradeSkillLevelForSendingComp = 120;

			// Token: 0x040018D0 RID: 6352
			private const int BaseRewardGold = 300;

			// Token: 0x040018D1 RID: 6353
			private const int IssueDuration = 30;

			// Token: 0x040018D2 RID: 6354
			private const int QuestTimeLimit = 30;

			// Token: 0x040018D3 RID: 6355
			[SaveableField(13)]
			private int _goldReward;

			// Token: 0x040018D5 RID: 6357
			[SaveableField(10)]
			private ItemObject _requestedTradeGood;
		}

		// Token: 0x02000601 RID: 1537
		public class ArtisanOverpricedGoodsIssueQuest : QuestBase
		{
			// Token: 0x06004741 RID: 18241 RVA: 0x0013FC23 File Offset: 0x0013DE23
			internal static void AutoGeneratedStaticCollectObjectsArtisanOverpricedGoodsIssueQuest(object o, List<object> collectedObjects)
			{
				((ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssueQuest)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
			}

			// Token: 0x06004742 RID: 18242 RVA: 0x0013FC31 File Offset: 0x0013DE31
			protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
			{
				base.AutoGeneratedInstanceCollectObjects(collectedObjects);
				collectedObjects.Add(this._requestedTradeGood);
				collectedObjects.Add(this._playerStartsQuestLog);
			}

			// Token: 0x06004743 RID: 18243 RVA: 0x0013FC52 File Offset: 0x0013DE52
			internal static object AutoGeneratedGetMemberValue_rewardGold(object o)
			{
				return ((ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssueQuest)o)._rewardGold;
			}

			// Token: 0x06004744 RID: 18244 RVA: 0x0013FC64 File Offset: 0x0013DE64
			internal static object AutoGeneratedGetMemberValue_requestedTradeGood(object o)
			{
				return ((ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssueQuest)o)._requestedTradeGood;
			}

			// Token: 0x06004745 RID: 18245 RVA: 0x0013FC71 File Offset: 0x0013DE71
			internal static object AutoGeneratedGetMemberValue_requestedTradeGoodAmount(object o)
			{
				return ((ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssueQuest)o)._requestedTradeGoodAmount;
			}

			// Token: 0x06004746 RID: 18246 RVA: 0x0013FC83 File Offset: 0x0013DE83
			internal static object AutoGeneratedGetMemberValue_givenTradeGoods(object o)
			{
				return ((ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssueQuest)o)._givenTradeGoods;
			}

			// Token: 0x06004747 RID: 18247 RVA: 0x0013FC95 File Offset: 0x0013DE95
			internal static object AutoGeneratedGetMemberValue_playerStartsQuestLog(object o)
			{
				return ((ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssueQuest)o)._playerStartsQuestLog;
			}

			// Token: 0x17000E60 RID: 3680
			// (get) Token: 0x06004748 RID: 18248 RVA: 0x0013FCA2 File Offset: 0x0013DEA2
			public override TextObject Title
			{
				get
				{
					TextObject textObject = new TextObject("{=dt6kKXSL}Overpriced Raw Materials at {SETTLEMENT}", null);
					textObject.SetTextVariable("SETTLEMENT", base.QuestGiver.CurrentSettlement.Name);
					return textObject;
				}
			}

			// Token: 0x17000E61 RID: 3681
			// (get) Token: 0x06004749 RID: 18249 RVA: 0x0013FCCB File Offset: 0x0013DECB
			private Hero AntagonistHero
			{
				get
				{
					return base.QuestGiver.CurrentSettlement.Notables.FirstOrDefault((Hero x) => x != base.QuestGiver && x.IsMerchant && x.GetTraitLevel(DefaultTraits.Mercy) <= 0);
				}
			}

			// Token: 0x17000E62 RID: 3682
			// (get) Token: 0x0600474A RID: 18250 RVA: 0x0013FCEE File Offset: 0x0013DEEE
			public override bool IsRemainingTimeHidden
			{
				get
				{
					return false;
				}
			}

			// Token: 0x17000E63 RID: 3683
			// (get) Token: 0x0600474B RID: 18251 RVA: 0x0013FCF4 File Offset: 0x0013DEF4
			private TextObject _playerStartsQuestLogText
			{
				get
				{
					TextObject textObject = new TextObject("{=IL3QWZ93}{QUEST_GIVER.LINK}, an artisan from {SETTLEMENT}, has told you about local merchant asking ridiculous amounts of money for the raw materials that {?QUEST_GIVER.GENDER}she{?}he{\\?} needs to continue {?QUEST_GIVER.GENDER}her{?}his{\\?} work. You said that you can bring {?QUEST_GIVER.GENDER}her{?}him{\\?} {REQUESTED_AMOUNT} {.%}{?REQUESTED_AMOUNT > 1}{PLURAL(REQUESTED_GOOD)}{?}{REQUESTED_GOOD}{\\?}{.%}. {?QUEST_GIVER.GENDER}She{?}He{\\?} is willing to pay {REWARD_AMOUNT}{GOLD_ICON} for these items.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
					textObject.SetTextVariable("SETTLEMENT", base.QuestGiver.CurrentSettlement.EncyclopediaLinkWithName);
					textObject.SetTextVariable("REQUESTED_AMOUNT", this._requestedTradeGoodAmount);
					textObject.SetTextVariable("REQUESTED_GOOD", this._requestedTradeGood.Name);
					textObject.SetTextVariable("REWARD_AMOUNT", this._rewardGold);
					textObject.SetTextVariable("GOLD_ICON", "{=!}<img src=\"General\\Icons\\Coin@2x\" extend=\"8\">");
					return textObject;
				}
			}

			// Token: 0x17000E64 RID: 3684
			// (get) Token: 0x0600474C RID: 18252 RVA: 0x0013FD90 File Offset: 0x0013DF90
			private TextObject _successQuestLogText
			{
				get
				{
					TextObject textObject = new TextObject("{=6XvszYj2}You brought {REQUESTED_AMOUNT} {.%}{?REQUESTED_AMOUNT > 1}{PLURAL(REQUESTED_GOOD)}{?}{REQUESTED_GOOD}{\\?}{.%} to {?QUEST_GIVER.GENDER}her{?}him{\\?} as promised.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
					textObject.SetTextVariable("REQUESTED_AMOUNT", this._requestedTradeGoodAmount);
					textObject.SetTextVariable("REQUESTED_GOOD", this._requestedTradeGood.Name);
					return textObject;
				}
			}

			// Token: 0x17000E65 RID: 3685
			// (get) Token: 0x0600474D RID: 18253 RVA: 0x0013FDEC File Offset: 0x0013DFEC
			private TextObject _timeoutQuestLogText
			{
				get
				{
					TextObject textObject = new TextObject("{=Ts5dZih4}You couldn't fully bring {.%}{REQUESTED_GOOD}{.%} to {?QUEST_GIVER.GENDER}her{?}him{\\?} in time.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
					textObject.SetTextVariable("REQUESTED_GOOD", this._requestedTradeGood.Name);
					return textObject;
				}
			}

			// Token: 0x0600474E RID: 18254 RVA: 0x0013FE35 File Offset: 0x0013E035
			protected override void InitializeQuestOnGameLoad()
			{
				this.SetDialogs();
				Campaign.Current.ConversationManager.AddDialogFlow(this.GetMerchantDialogFlow(), this);
			}

			// Token: 0x0600474F RID: 18255 RVA: 0x0013FE53 File Offset: 0x0013E053
			public ArtisanOverpricedGoodsIssueQuest(string questId, Hero questGiver, CampaignTime dueTime, ItemObject requestedTradeGood, int rewardGold, int requestedTradeGoodAmount, Hero counterOfferHero)
				: base(questId, questGiver, dueTime, rewardGold)
			{
				this._requestedTradeGood = requestedTradeGood;
				this._requestedTradeGoodAmount = requestedTradeGoodAmount;
				this._rewardGold = rewardGold;
				this.SetDialogs();
				base.InitializeQuestOnCreation();
			}

			// Token: 0x06004750 RID: 18256 RVA: 0x0013FE84 File Offset: 0x0013E084
			protected override void SetDialogs()
			{
				this.OfferDialogFlow = DialogFlow.CreateDialogFlow("issue_classic_quest_start", 100).NpcLine(new TextObject("{=e1sSXEOh}This is excellent news. If you could bring the goods, it would be an immense help, and the merchants would have to lower their prices. Thank you.", null), null, null).Condition(() => Hero.OneToOneConversationHero == base.QuestGiver)
					.Consequence(new ConversationSentence.OnConsequenceDelegate(this.QuestAcceptedConsequences))
					.CloseDialog();
				TextObject textObject = new TextObject("{=fKnkkWH1}Have you brought any {.%}{REQUESTED_GOOD}{.%}? My stocks are running out and I need some very soon.", null);
				textObject.SetTextVariable("REQUESTED_GOOD", this._requestedTradeGood.Name);
				TextObject textObject2 = new TextObject("{=bPbzwMat}I could only deliver {AMOUNT_TO_DELIVER} {.%}{?AMOUNT_TO_DELIVER > 1}{PLURAL(REQUESTED_GOOD)}{?}{REQUESTED_GOOD}{\\?}{.%}.", null);
				textObject2.SetTextVariable("REQUESTED_GOOD", this._requestedTradeGood.Name);
				textObject2.SetTextVariable("AMOUNT_TO_DELIVER", this.GetAvailableRequestedItemCountOnPlayer());
				TextObject textObject3 = new TextObject("{=IfF3OHNT}Thank you. These will be very useful. If you can get your hands on more, please bring them directly to me.", null);
				TextObject textObject4 = new TextObject("{=1LzohiMf}I brought {AMOUNT_TO_DELIVER} {.%}{?AMOUNT_TO_DELIVER > 1}{PLURAL(REQUESTED_GOOD)}{?}{REQUESTED_GOOD}{\\?}{.%} as we agreed.", null);
				textObject4.SetTextVariable("AMOUNT_TO_DELIVER", this._requestedTradeGoodAmount - this._givenTradeGoods);
				textObject4.SetTextVariable("REQUESTED_GOOD", this._requestedTradeGood.Name);
				TextObject textObject5 = new TextObject("{=cxQGUbUD}I'm so grateful! You've kept my workshop running and my family fed. Please take this money and some extra to cover your costs.", null);
				TextObject textObject6 = new TextObject("{=4uKTfTg9}Sorry. I don't have anything for you this time.", null);
				TextObject textObject7 = new TextObject("{=YWorGaI1}Ah... We'll get by. I won't lie. It will be hard. I just hope you can deliver some soon.", null);
				this.DiscussDialogFlow = DialogFlow.CreateDialogFlow("quest_discuss", 100).NpcLine(textObject, null, null).Condition(() => Hero.OneToOneConversationHero == base.QuestGiver)
					.BeginPlayerOptions()
					.PlayerOption(textObject2, null)
					.Condition(delegate
					{
						int availableRequestedItemCountOnPlayer = this.GetAvailableRequestedItemCountOnPlayer();
						Campaign.Current.ConversationManager.GetCurrentDialogLine().SetTextVariable("REQUESTED_GOOD", this._requestedTradeGood.Name);
						Campaign.Current.ConversationManager.GetCurrentDialogLine().SetTextVariable("AMOUNT_TO_DELIVER", availableRequestedItemCountOnPlayer);
						return availableRequestedItemCountOnPlayer > 0 && availableRequestedItemCountOnPlayer < this._requestedTradeGoodAmount - this._givenTradeGoods;
					})
					.Consequence(new ConversationSentence.OnConsequenceDelegate(this.DeliverItemsPartiallyOnConsequence))
					.NpcLine(textObject3, null, null)
					.CloseDialog()
					.PlayerOption(textObject4, null)
					.Condition(delegate
					{
						int availableRequestedItemCountOnPlayer2 = this.GetAvailableRequestedItemCountOnPlayer();
						Campaign.Current.ConversationManager.GetCurrentDialogLine().SetTextVariable("AMOUNT_TO_DELIVER", this._requestedTradeGoodAmount - this._givenTradeGoods);
						Campaign.Current.ConversationManager.GetCurrentDialogLine().SetTextVariable("REQUESTED_GOOD", this._requestedTradeGood.Name);
						return availableRequestedItemCountOnPlayer2 >= this._requestedTradeGoodAmount - this._givenTradeGoods;
					})
					.Consequence(new ConversationSentence.OnConsequenceDelegate(this.DeliverItemsFullyOnConsequence))
					.NpcLine(textObject5, null, null)
					.Consequence(new ConversationSentence.OnConsequenceDelegate(base.CompleteQuestWithSuccess))
					.CloseDialog()
					.PlayerOption(textObject6, null)
					.NpcLine(textObject7, null, null)
					.CloseDialog()
					.EndPlayerOptions()
					.CloseDialog();
			}

			// Token: 0x06004751 RID: 18257 RVA: 0x00140071 File Offset: 0x0013E271
			private int GetAvailableRequestedItemCountOnPlayer()
			{
				return PartyBase.MainParty.ItemRoster.GetItemNumber(this._requestedTradeGood);
			}

			// Token: 0x06004752 RID: 18258 RVA: 0x00140088 File Offset: 0x0013E288
			private void DeliverItemsPartiallyOnConsequence()
			{
				int num = this.GetAvailableRequestedItemCountOnPlayer();
				if (PartyBase.MainParty.ItemRoster.ElementAt(PartyBase.MainParty.ItemRoster.FindIndex((ItemObject x) => x == this._requestedTradeGood)).Amount <= 0)
				{
					num = 0;
				}
				PartyBase.MainParty.ItemRoster.AddToCounts(this._requestedTradeGood, -num);
				this._givenTradeGoods += num;
				base.UpdateQuestTaskStage(this._playerStartsQuestLog, this._givenTradeGoods);
			}

			// Token: 0x06004753 RID: 18259 RVA: 0x0014010C File Offset: 0x0013E30C
			private void DeliverItemsFullyOnConsequence()
			{
				TraitLevelingHelper.OnIssueSolvedThroughQuest(base.QuestGiver, new Tuple<TraitObject, int>[]
				{
					new Tuple<TraitObject, int>(DefaultTraits.Honor, 50)
				});
				ChangeCrimeRatingAction.Apply(base.QuestGiver.MapFaction, 5f, true);
				PartyBase.MainParty.ItemRoster.AddToCounts(this._requestedTradeGood, -(this._requestedTradeGoodAmount - this._givenTradeGoods));
				this._givenTradeGoods = this._requestedTradeGoodAmount;
				base.UpdateQuestTaskStage(this._playerStartsQuestLog, this._givenTradeGoods);
			}

			// Token: 0x06004754 RID: 18260 RVA: 0x00140194 File Offset: 0x0013E394
			private void QuestAcceptedConsequences()
			{
				base.StartQuest();
				this._playerStartsQuestLog = base.AddDiscreteLog(this._playerStartsQuestLogText, new TextObject("{=yw62BLhy}Delivered Goods", null), this._givenTradeGoods, this._requestedTradeGoodAmount, null, true);
				Campaign.Current.ConversationManager.AddDialogFlow(this.GetMerchantDialogFlow(), this);
			}

			// Token: 0x06004755 RID: 18261 RVA: 0x001401E8 File Offset: 0x0013E3E8
			private DialogFlow GetMerchantDialogFlow()
			{
				TextObject textObject = new TextObject("{=YNxGcaJI}I want to talk to you about the outlandish prices you're asking for the goods you sell the artisans.", null);
				TextObject textObject2 = new TextObject("{=UwEbBanm}These are the laws of our town. The artisans don't complain when the laws require us to buy tools from them.", null);
				TextObject textObject3 = new TextObject("{=sPEZq0Yk}What's sauce for the goose is sauce for the gander. We've done business for years like this and we're not just going to change things because one party complains.", null);
				TextObject textObject4 = new TextObject("{=VzzQX4EZ}Maybe you're right. I won't get involved in this.", null);
				TextObject textObject5 = new TextObject("{=KbFJJfl6}I am sorry. I will do what I must.", null);
				TextObject textObject6 = new TextObject("{=yccVH4KD}Thank you for listening to the voice of reason.", null);
				TextObject textObject7 = new TextObject("{=A8dyXgLz}That's a pity.", null);
				return DialogFlow.CreateDialogFlow("hero_main_options", 125).PlayerLine(textObject, null).Condition(new ConversationSentence.OnConditionDelegate(this.IsSuitableToTalk))
					.NpcLine(textObject2, null, null)
					.NpcLine(textObject3, null, null)
					.BeginPlayerOptions()
					.PlayerOption(textObject4, null)
					.NpcLine(textObject6, null, null)
					.Consequence(new ConversationSentence.OnConsequenceDelegate(this.AcceptCounterOffer))
					.CloseDialog()
					.PlayerOption(textObject5, null)
					.NpcLine(textObject7, null, null)
					.CloseDialog();
			}

			// Token: 0x06004756 RID: 18262 RVA: 0x001402C1 File Offset: 0x0013E4C1
			private bool IsSuitableToTalk()
			{
				return Settlement.CurrentSettlement == base.QuestGiver.CurrentSettlement && CharacterObject.OneToOneConversationCharacter.IsHero && CharacterObject.OneToOneConversationCharacter.HeroObject == this.AntagonistHero;
			}

			// Token: 0x06004757 RID: 18263 RVA: 0x001402F8 File Offset: 0x0013E4F8
			private void AcceptCounterOffer()
			{
				Hero antagonistHero = this.AntagonistHero;
				TextObject textObject = new TextObject("{=q4wWEbsa}You decided not to deliver the items after listening to {COUNTER_OFFER_HERO.LINK}.", null);
				StringHelpers.SetCharacterProperties("COUNTER_OFFER_HERO", antagonistHero.CharacterObject, textObject, false);
				ChangeRelationAction.ApplyPlayerRelation(antagonistHero, 5, true, true);
				antagonistHero.AddPower(5f);
				TraitLevelingHelper.OnIssueSolvedThroughBetrayal(base.QuestGiver, new Tuple<TraitObject, int>[]
				{
					new Tuple<TraitObject, int>(DefaultTraits.Honor, -50)
				});
				base.QuestGiver.CurrentSettlement.Prosperity -= 30f;
				base.CompleteQuestWithFail(textObject);
			}

			// Token: 0x06004758 RID: 18264 RVA: 0x00140384 File Offset: 0x0013E584
			protected override void OnCompleteWithSuccess()
			{
				base.QuestGiver.AddPower(10f);
				TraitLevelingHelper.OnIssueSolvedThroughQuest(base.QuestGiver, new Tuple<TraitObject, int>[]
				{
					new Tuple<TraitObject, int>(DefaultTraits.Honor, 50)
				});
				base.QuestGiver.CurrentSettlement.Prosperity += 30f;
				this.RelationshipChangeWithQuestGiver = 5;
				if (this.AntagonistHero != null)
				{
					this.AntagonistHero.AddPower(-10f);
					ChangeRelationAction.ApplyPlayerRelation(this.AntagonistHero, -10, true, true);
				}
				GiveGoldAction.ApplyForQuestBetweenCharacters(base.QuestGiver, Hero.MainHero, this._rewardGold, false);
				base.AddLog(this._successQuestLogText, false);
			}

			// Token: 0x06004759 RID: 18265 RVA: 0x00140430 File Offset: 0x0013E630
			public override void OnFailed()
			{
				base.QuestGiver.AddPower(-10f);
				this.RelationshipChangeWithQuestGiver = -5;
				base.QuestGiver.CurrentSettlement.Prosperity -= 20f;
			}

			// Token: 0x0600475A RID: 18266 RVA: 0x00140468 File Offset: 0x0013E668
			protected override void OnTimedOut()
			{
				base.AddLog(this._timeoutQuestLogText, false);
				base.QuestGiver.AddPower(-20f);
				this.RelationshipChangeWithQuestGiver = -5;
				base.QuestGiver.CurrentSettlement.Prosperity -= 50f;
			}

			// Token: 0x040018D7 RID: 6359
			[SaveableField(20)]
			private int _rewardGold;

			// Token: 0x040018D8 RID: 6360
			[SaveableField(30)]
			private readonly ItemObject _requestedTradeGood;

			// Token: 0x040018D9 RID: 6361
			[SaveableField(60)]
			private readonly int _requestedTradeGoodAmount;

			// Token: 0x040018DA RID: 6362
			[SaveableField(40)]
			private int _givenTradeGoods;

			// Token: 0x040018DB RID: 6363
			[SaveableField(50)]
			private JournalLog _playerStartsQuestLog;
		}

		// Token: 0x02000602 RID: 1538
		public class ArtisanOverpricedGoodsIssueTypeDefiner : SaveableTypeDefiner
		{
			// Token: 0x06004761 RID: 18273 RVA: 0x001405E4 File Offset: 0x0013E7E4
			public ArtisanOverpricedGoodsIssueTypeDefiner()
				: base(470000)
			{
			}

			// Token: 0x06004762 RID: 18274 RVA: 0x001405F1 File Offset: 0x0013E7F1
			protected override void DefineClassTypes()
			{
				base.AddClassDefinition(typeof(ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssue), 1, null);
				base.AddClassDefinition(typeof(ArtisanOverpricedGoodsIssueBehavior.ArtisanOverpricedGoodsIssueQuest), 2, null);
			}
		}
	}
}
