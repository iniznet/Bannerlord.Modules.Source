using System;
using System.Collections.Generic;
using System.Linq;
using Helpers;
using TaleWorlds.CampaignSystem.Actions;
using TaleWorlds.CampaignSystem.CharacterDevelopment;
using TaleWorlds.CampaignSystem.Conversation;
using TaleWorlds.CampaignSystem.GameMenus;
using TaleWorlds.CampaignSystem.GameState;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.CampaignSystem.Roster;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Issues
{
	// Token: 0x02000301 RID: 769
	public class ArtisanCantSellProductsAtAFairPriceIssueBehavior : CampaignBehaviorBase
	{
		// Token: 0x06002C7D RID: 11389 RVA: 0x000BA164 File Offset: 0x000B8364
		public override void RegisterEvents()
		{
			CampaignEvents.OnCheckForIssueEvent.AddNonSerializedListener(this, new Action<Hero>(this.OnCheckForIssue));
		}

		// Token: 0x06002C7E RID: 11390 RVA: 0x000BA180 File Offset: 0x000B8380
		public void OnCheckForIssue(Hero hero)
		{
			if (this.ConditionsHold(hero))
			{
				Campaign.Current.IssueManager.AddPotentialIssueData(hero, new PotentialIssueData(new PotentialIssueData.StartIssueDelegate(this.OnStartIssue), typeof(ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssue), IssueBase.IssueFrequency.Common, null));
				return;
			}
			Campaign.Current.IssueManager.AddPotentialIssueData(hero, new PotentialIssueData(typeof(ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssue), IssueBase.IssueFrequency.Common));
		}

		// Token: 0x06002C7F RID: 11391 RVA: 0x000BA1E4 File Offset: 0x000B83E4
		private bool ConditionsHold(Hero issueGiver)
		{
			return issueGiver.IsArtisan && ArtisanCantSellProductsAtAFairPriceIssueBehavior.SelectCounterOfferHero(issueGiver) != null && ArtisanCantSellProductsAtAFairPriceIssueBehavior.SelectTargetSettlement(issueGiver) != null;
		}

		// Token: 0x06002C80 RID: 11392 RVA: 0x000BA204 File Offset: 0x000B8404
		private static Hero SelectCounterOfferHero(Hero issueGiver)
		{
			return issueGiver.CurrentSettlement.Notables.FirstOrDefault((Hero x) => x.CharacterObject.IsHero && x.CanHaveQuestsOrIssues() && x.CharacterObject.HeroObject != issueGiver && x.CharacterObject.HeroObject.IsMerchant);
		}

		// Token: 0x06002C81 RID: 11393 RVA: 0x000BA23F File Offset: 0x000B843F
		private static Settlement SelectTargetSettlement(Hero issueGiver)
		{
			Settlement issueSettlement = issueGiver.CurrentSettlement;
			return SettlementHelper.FindRandomSettlement(delegate(Settlement x)
			{
				if (x.IsTown && x != issueSettlement)
				{
					if (x.Notables.Any((Hero y) => y.CanHaveQuestsOrIssues()))
					{
						float num;
						return Campaign.Current.Models.MapDistanceModel.GetDistance(x, issueSettlement, 150f, out num);
					}
				}
				return false;
			});
		}

		// Token: 0x06002C82 RID: 11394 RVA: 0x000BA262 File Offset: 0x000B8462
		private IssueBase OnStartIssue(in PotentialIssueData pid, Hero issueOwner)
		{
			return new ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssue(issueOwner);
		}

		// Token: 0x06002C83 RID: 11395 RVA: 0x000BA26A File Offset: 0x000B846A
		public override void SyncData(IDataStore dataStore)
		{
		}

		// Token: 0x04000D6E RID: 3438
		private const float MaxDistanceForSettlementSelection = 150f;

		// Token: 0x04000D6F RID: 3439
		private const IssueBase.IssueFrequency ArtisanCantSellProductsAtAFairPriceIssueFrequency = IssueBase.IssueFrequency.Common;

		// Token: 0x020005FA RID: 1530
		public class ArtisanCantSellProductsAtAFairPriceIssue : IssueBase
		{
			// Token: 0x06004689 RID: 18057 RVA: 0x0013D65F File Offset: 0x0013B85F
			internal static void AutoGeneratedStaticCollectObjectsArtisanCantSellProductsAtAFairPriceIssue(object o, List<object> collectedObjects)
			{
				((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssue)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
			}

			// Token: 0x0600468A RID: 18058 RVA: 0x0013D66D File Offset: 0x0013B86D
			protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
			{
				base.AutoGeneratedInstanceCollectObjects(collectedObjects);
				collectedObjects.Add(this._rawMaterialsToBeDelivered);
				collectedObjects.Add(this._targetSettlement);
				collectedObjects.Add(this._targetHero);
				collectedObjects.Add(this.CounterOfferHero);
			}

			// Token: 0x0600468B RID: 18059 RVA: 0x0013D6A6 File Offset: 0x0013B8A6
			internal static object AutoGeneratedGetMemberValueCounterOfferHero(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssue)o).CounterOfferHero;
			}

			// Token: 0x0600468C RID: 18060 RVA: 0x0013D6B3 File Offset: 0x0013B8B3
			internal static object AutoGeneratedGetMemberValue_rawMaterialsToBeDelivered(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssue)o)._rawMaterialsToBeDelivered;
			}

			// Token: 0x0600468D RID: 18061 RVA: 0x0013D6C0 File Offset: 0x0013B8C0
			internal static object AutoGeneratedGetMemberValue_targetSettlement(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssue)o)._targetSettlement;
			}

			// Token: 0x0600468E RID: 18062 RVA: 0x0013D6CD File Offset: 0x0013B8CD
			internal static object AutoGeneratedGetMemberValue_targetHero(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssue)o)._targetHero;
			}

			// Token: 0x17000E13 RID: 3603
			// (get) Token: 0x0600468F RID: 18063 RVA: 0x0013D6DA File Offset: 0x0013B8DA
			public override IssueBase.AlternativeSolutionScaleFlag AlternativeSolutionScaleFlags
			{
				get
				{
					return IssueBase.AlternativeSolutionScaleFlag.Duration;
				}
			}

			// Token: 0x17000E14 RID: 3604
			// (get) Token: 0x06004690 RID: 18064 RVA: 0x0013D6DD File Offset: 0x0013B8DD
			// (set) Token: 0x06004691 RID: 18065 RVA: 0x0013D6E5 File Offset: 0x0013B8E5
			[SaveableProperty(30)]
			public override Hero CounterOfferHero { get; protected set; }

			// Token: 0x17000E15 RID: 3605
			// (get) Token: 0x06004692 RID: 18066 RVA: 0x0013D6EE File Offset: 0x0013B8EE
			private int RawMaterialCountToBeDelivered
			{
				get
				{
					return (int)(60f * base.IssueDifficultyMultiplier);
				}
			}

			// Token: 0x17000E16 RID: 3606
			// (get) Token: 0x06004693 RID: 18067 RVA: 0x0013D6FD File Offset: 0x0013B8FD
			public override int AlternativeSolutionBaseNeededMenCount
			{
				get
				{
					return 3 + MathF.Ceiling(6f * base.IssueDifficultyMultiplier);
				}
			}

			// Token: 0x17000E17 RID: 3607
			// (get) Token: 0x06004694 RID: 18068 RVA: 0x0013D712 File Offset: 0x0013B912
			protected override int AlternativeSolutionBaseDurationInDaysInternal
			{
				get
				{
					return 3 + MathF.Ceiling(5f * base.IssueDifficultyMultiplier);
				}
			}

			// Token: 0x17000E18 RID: 3608
			// (get) Token: 0x06004695 RID: 18069 RVA: 0x0013D727 File Offset: 0x0013B927
			protected override int RewardGold
			{
				get
				{
					return (int)(500f + 1500f * base.IssueDifficultyMultiplier);
				}
			}

			// Token: 0x17000E19 RID: 3609
			// (get) Token: 0x06004696 RID: 18070 RVA: 0x0013D73C File Offset: 0x0013B93C
			public override int NeededInfluenceForLordSolution
			{
				get
				{
					return 10 + MathF.Round(40f * base.IssueDifficultyMultiplier);
				}
			}

			// Token: 0x17000E1A RID: 3610
			// (get) Token: 0x06004697 RID: 18071 RVA: 0x0013D754 File Offset: 0x0013B954
			protected override TextObject AlternativeSolutionStartLog
			{
				get
				{
					TextObject textObject = new TextObject("{=4M6jlZVa}{ISSUE_GIVER.LINK} an artisan from {ISSUE_GIVER_SETTLEMENT} has complained to you about not being able to sell their goods at the price they want because of local laws. {?ISSUE_GIVER.GENDER}She{?}He{\\?} will pay {REWARD}{GOLD_ICON} for you to take the goods to another town. You have tasked {COMPANION.LINK} and {ALTERNATIVE_SOLUTION_TROOP_COUNT} men to smuggle {?ISSUE_GIVER.GENDER}her{?}his{\\?} goods to a “friend” in {TARGET_TOWN}. They will return to you in {RETURN_DAYS} days with a sizable sum of {REWARD}{GOLD_ICON}.", null);
					StringHelpers.SetCharacterProperties("ISSUE_GIVER", base.IssueOwner.CharacterObject, textObject, false);
					StringHelpers.SetCharacterProperties("COMPANION", base.AlternativeSolutionHero.CharacterObject, textObject, false);
					textObject.SetTextVariable("ISSUE_GIVER_SETTLEMENT", base.IssueOwner.CurrentSettlement.EncyclopediaLinkWithName);
					textObject.SetTextVariable("TARGET_TOWN", this._targetSettlement.EncyclopediaLinkWithName);
					textObject.SetTextVariable("ALTERNATIVE_SOLUTION_TROOP_COUNT", this.AlternativeSolutionSentTroops.TotalManCount - 1);
					textObject.SetTextVariable("RETURN_DAYS", base.GetTotalAlternativeSolutionDurationInDays());
					textObject.SetTextVariable("REWARD", this.RewardGold);
					textObject.SetTextVariable("GOLD_ICON", "{=!}<img src=\"General\\Icons\\Coin@2x\" extend=\"8\">");
					return textObject;
				}
			}

			// Token: 0x17000E1B RID: 3611
			// (get) Token: 0x06004698 RID: 18072 RVA: 0x0013D81F File Offset: 0x0013BA1F
			protected override int CompanionSkillRewardXP
			{
				get
				{
					return (int)(400f + 1700f * base.IssueDifficultyMultiplier);
				}
			}

			// Token: 0x17000E1C RID: 3612
			// (get) Token: 0x06004699 RID: 18073 RVA: 0x0013D834 File Offset: 0x0013BA34
			public override bool IsThereAlternativeSolution
			{
				get
				{
					return true;
				}
			}

			// Token: 0x17000E1D RID: 3613
			// (get) Token: 0x0600469A RID: 18074 RVA: 0x0013D837 File Offset: 0x0013BA37
			public override bool IsThereLordSolution
			{
				get
				{
					return true;
				}
			}

			// Token: 0x17000E1E RID: 3614
			// (get) Token: 0x0600469B RID: 18075 RVA: 0x0013D83A File Offset: 0x0013BA3A
			public override TextObject IssueBriefByIssueGiver
			{
				get
				{
					return new TextObject("{=Vg7Ftrdl}You might say that... I work from dawn to late into the night but even so I can barely put bread on the table. Why's that? Because I can't sell my product at a fair price. The law says that I can only sell to local merchants, and at a fixed rate too, so that even when other prices are high I'm still making the same.", null);
				}
			}

			// Token: 0x17000E1F RID: 3615
			// (get) Token: 0x0600469C RID: 18076 RVA: 0x0013D847 File Offset: 0x0013BA47
			public override TextObject IssueAcceptByPlayer
			{
				get
				{
					return new TextObject("{=ioF9aJBJ}How can I help?", null);
				}
			}

			// Token: 0x17000E20 RID: 3616
			// (get) Token: 0x0600469D RID: 18077 RVA: 0x0013D854 File Offset: 0x0013BA54
			public override TextObject IssueQuestSolutionExplanationByIssueGiver
			{
				get
				{
					TextObject textObject = new TextObject("{=bOyjQ4yr}If you can deliver {REQUESTED_AMOUNT} {.%}{?(REQUESTED_AMOUNT > 1)}{PLURAL(RAW_MATERIALS)}{?}{RAW_MATERIALS}{\\?}{.%} to my contact {TARGET_HERO.LINK}, who you can find in {TARGET_SETTLEMENT}, that would help me survive for a time. The merchants of the town could be furious and lodge legal complaints of course, but hopefully you won't have to deal with that part.", null);
					StringHelpers.SetCharacterProperties("TARGET_HERO", this._targetHero.CharacterObject, textObject, false);
					textObject.SetTextVariable("REQUESTED_AMOUNT", this.RawMaterialCountToBeDelivered);
					textObject.SetTextVariable("RAW_MATERIALS", this._rawMaterialsToBeDelivered.Name);
					textObject.SetTextVariable("TARGET_SETTLEMENT", this._targetSettlement.EncyclopediaLinkWithName);
					return textObject;
				}
			}

			// Token: 0x17000E21 RID: 3617
			// (get) Token: 0x0600469E RID: 18078 RVA: 0x0013D8C8 File Offset: 0x0013BAC8
			public override TextObject IssueAlternativeSolutionExplanationByIssueGiver
			{
				get
				{
					TextObject textObject = new TextObject("{=Gzx35bRY}If you aren't going towards {TARGET_SETTLEMENT}, maybe you could have some of your men take my goods and bring back the profit? It shouldn't take more than {ALTERNATIVE_SOLUTION_MEN_AMOUNT} men and one of your trusted lieutenants with decent grasp of trade. They can go and be back in about {RETURN_DAYS} days.", null);
					textObject.SetTextVariable("TARGET_SETTLEMENT", this._targetSettlement.EncyclopediaLinkWithName);
					textObject.SetTextVariable("ALTERNATIVE_SOLUTION_MEN_AMOUNT", base.GetTotalAlternativeSolutionNeededMenCount());
					textObject.SetTextVariable("RETURN_DAYS", base.GetTotalAlternativeSolutionDurationInDays());
					return textObject;
				}
			}

			// Token: 0x17000E22 RID: 3618
			// (get) Token: 0x0600469F RID: 18079 RVA: 0x0013D91C File Offset: 0x0013BB1C
			public override TextObject IssueLordSolutionExplanationByIssueGiver
			{
				get
				{
					TextObject textObject = new TextObject("{=tgj9BuCL}You could change this law, my {?PLAYER.GENDER}lady{?}lord{\\?}. All of us would be grateful. and we're willing to donate {REWARD}{GOLD_ICON} to show our thanks...", null);
					StringHelpers.SetCharacterProperties("PLAYER", CharacterObject.PlayerCharacter, textObject, false);
					textObject.SetTextVariable("GOLD_ICON", "{=!}<img src=\"General\\Icons\\Coin@2x\" extend=\"8\">");
					textObject.SetTextVariable("REWARD", this.RewardGold);
					return textObject;
				}
			}

			// Token: 0x17000E23 RID: 3619
			// (get) Token: 0x060046A0 RID: 18080 RVA: 0x0013D96B File Offset: 0x0013BB6B
			public override TextObject IssueLordSolutionAcceptByPlayer
			{
				get
				{
					return new TextObject("{=azHy8uwl}I will issue a decree to remove the restrictions on the sale of goods.", null);
				}
			}

			// Token: 0x17000E24 RID: 3620
			// (get) Token: 0x060046A1 RID: 18081 RVA: 0x0013D978 File Offset: 0x0013BB78
			public override TextObject IssueLordSolutionResponseByIssueGiver
			{
				get
				{
					return new TextObject("{=hAyFpmxq}My {?PLAYER.GENDER}lady{?}lord{\\?}, that would be very good. The merchants won't like it but hard-working artisans like me will be grateful to you.", null);
				}
			}

			// Token: 0x17000E25 RID: 3621
			// (get) Token: 0x060046A2 RID: 18082 RVA: 0x0013D985 File Offset: 0x0013BB85
			public override TextObject IssueLordSolutionCounterOfferExplanationByOtherNpc
			{
				get
				{
					return new TextObject("{=nbeCbTH6}My {?PLAYER.GENDER}lady{?}lord{\\?}, we heard that you wish to issue a decree permitting artisans to behave like merchants. This will undo an arrangement here that's worked for generations. Please reconsider this.", null);
				}
			}

			// Token: 0x17000E26 RID: 3622
			// (get) Token: 0x060046A3 RID: 18083 RVA: 0x0013D992 File Offset: 0x0013BB92
			public override TextObject IssueLordSolutionCounterOfferBriefByOtherNpc
			{
				get
				{
					return new TextObject("{=KSeIOHDh}(One of the merchants in the town comes to talk as you are preparing to depart.)", null);
				}
			}

			// Token: 0x17000E27 RID: 3623
			// (get) Token: 0x060046A4 RID: 18084 RVA: 0x0013D99F File Offset: 0x0013BB9F
			public override TextObject IssueLordSolutionCounterOfferAcceptByPlayer
			{
				get
				{
					return new TextObject("{=dpFFo2U2}I understand. I'll hold off on the decree, then.", null);
				}
			}

			// Token: 0x17000E28 RID: 3624
			// (get) Token: 0x060046A5 RID: 18085 RVA: 0x0013D9AC File Offset: 0x0013BBAC
			public override TextObject IssueLordSolutionCounterOfferAcceptResponseByOtherNpc
			{
				get
				{
					return new TextObject("{=6ZTNuF30}That's the right call. Thank you for listening to the voice of reason.", null);
				}
			}

			// Token: 0x17000E29 RID: 3625
			// (get) Token: 0x060046A6 RID: 18086 RVA: 0x0013D9B9 File Offset: 0x0013BBB9
			public override TextObject IssueLordSolutionCounterOfferDeclineByPlayer
			{
				get
				{
					return new TextObject("{=K1J6Xqht}Sorry, I have to do it.", null);
				}
			}

			// Token: 0x17000E2A RID: 3626
			// (get) Token: 0x060046A7 RID: 18087 RVA: 0x0013D9C6 File Offset: 0x0013BBC6
			public override TextObject IssueLordSolutionCounterOfferDeclineResponseByOtherNpc
			{
				get
				{
					return new TextObject("{=YjsRb88D}That's your right, my {?PLAYER.GENDER}lady{?}lord{\\?}. But if you can't get the support of the merchants here when you next need it, well, don't say no one said anything.", null);
				}
			}

			// Token: 0x17000E2B RID: 3627
			// (get) Token: 0x060046A8 RID: 18088 RVA: 0x0013D9D3 File Offset: 0x0013BBD3
			protected override TextObject LordSolutionStartLog
			{
				get
				{
					return new TextObject("{=FT9V47bd}You issued a decree to remove the restrictions on the sale of goods, as the artisans had requested.", null);
				}
			}

			// Token: 0x17000E2C RID: 3628
			// (get) Token: 0x060046A9 RID: 18089 RVA: 0x0013D9E0 File Offset: 0x0013BBE0
			protected override TextObject LordSolutionCounterOfferAcceptLog
			{
				get
				{
					TextObject textObject = new TextObject("{=SpIn5pr4}After listening to the town merchants, you decided to keep the restrictions on the sale of goods. Your decision made the merchants happy but disappointed the {QUEST_GIVER.LINK}.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.IssueOwner.CharacterObject, textObject, false);
					return textObject;
				}
			}

			// Token: 0x17000E2D RID: 3629
			// (get) Token: 0x060046AA RID: 18090 RVA: 0x0013DA14 File Offset: 0x0013BC14
			public override TextObject IssueQuestSolutionAcceptByPlayer
			{
				get
				{
					TextObject textObject = new TextObject("{=ueUsg9OL}I can take your goods to {TARGET_HERO.LINK} in {TARGET_SETTLEMENT} myself.", null);
					textObject.SetTextVariable("TARGET_SETTLEMENT", this._targetSettlement.EncyclopediaLinkWithName);
					StringHelpers.SetCharacterProperties("TARGET_HERO", this._targetHero.CharacterObject, textObject, false);
					return textObject;
				}
			}

			// Token: 0x17000E2E RID: 3630
			// (get) Token: 0x060046AB RID: 18091 RVA: 0x0013DA5D File Offset: 0x0013BC5D
			public override TextObject Title
			{
				get
				{
					TextObject textObject = new TextObject("{=qfClYYjK}Artisans can't sell their products in {ISSUE_GIVER_SETTLEMENT}", null);
					textObject.SetTextVariable("ISSUE_GIVER_SETTLEMENT", base.IssueSettlement.Name);
					return textObject;
				}
			}

			// Token: 0x17000E2F RID: 3631
			// (get) Token: 0x060046AC RID: 18092 RVA: 0x0013DA81 File Offset: 0x0013BC81
			public override TextObject Description
			{
				get
				{
					TextObject textObject = new TextObject("{=3KpgHPlo}The laws of {ISSUE_GIVER_SETTLEMENT} dictate that artisans sell their goods at a fixed rate to the merchants in town. And now they complain the price set by the merchants is not fair.", null);
					textObject.SetTextVariable("ISSUE_GIVER_SETTLEMENT", base.IssueOwner.CurrentSettlement.Name);
					return textObject;
				}
			}

			// Token: 0x17000E30 RID: 3632
			// (get) Token: 0x060046AD RID: 18093 RVA: 0x0013DAAC File Offset: 0x0013BCAC
			public override TextObject IssueAsRumorInSettlement
			{
				get
				{
					TextObject textObject = new TextObject("{=TuIyqMWG}The artisans and the merchants are at each other's throats right now. I bet {QUEST_GIVER.NAME} is planning something.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.IssueOwner.CharacterObject, textObject, false);
					return textObject;
				}
			}

			// Token: 0x17000E31 RID: 3633
			// (get) Token: 0x060046AE RID: 18094 RVA: 0x0013DADE File Offset: 0x0013BCDE
			public override TextObject IssueAlternativeSolutionAcceptByPlayer
			{
				get
				{
					TextObject textObject = new TextObject("{=srbMyPXl}You can have one of my companions and {REQUIRED_TROOP_AMOUNT} of my men to take your goods to {TARGET_TOWN}", null);
					textObject.SetTextVariable("REQUIRED_TROOP_AMOUNT", base.GetTotalAlternativeSolutionNeededMenCount());
					textObject.SetTextVariable("TARGET_TOWN", this._targetSettlement.EncyclopediaLinkWithName);
					return textObject;
				}
			}

			// Token: 0x17000E32 RID: 3634
			// (get) Token: 0x060046AF RID: 18095 RVA: 0x0013DB14 File Offset: 0x0013BD14
			public override TextObject IssueDiscussAlternativeSolution
			{
				get
				{
					TextObject textObject = new TextObject("{=GE4DqFyl}I am still waiting for news from {TARGET_SETTLEMENT}. Thanks again for sparing your men.", null);
					textObject.SetTextVariable("TARGET_SETTLEMENT", this._targetSettlement.EncyclopediaLinkWithName);
					return textObject;
				}
			}

			// Token: 0x17000E33 RID: 3635
			// (get) Token: 0x060046B0 RID: 18096 RVA: 0x0013DB38 File Offset: 0x0013BD38
			public override TextObject IssueAlternativeSolutionResponseByIssueGiver
			{
				get
				{
					TextObject textObject = new TextObject("{=EnS6NwaH}Thank you my {?PLAYER.GENDER}lady{?}lord{\\?}. I am sure your men will take care of the problem.", null);
					StringHelpers.SetCharacterProperties("PLAYER", CharacterObject.PlayerCharacter, textObject, false);
					return textObject;
				}
			}

			// Token: 0x060046B1 RID: 18097 RVA: 0x0013DB64 File Offset: 0x0013BD64
			public ArtisanCantSellProductsAtAFairPriceIssue(Hero issueOwner)
				: base(issueOwner, CampaignTime.DaysFromNow(30f))
			{
				this._targetSettlement = ArtisanCantSellProductsAtAFairPriceIssueBehavior.SelectTargetSettlement(issueOwner);
				this._targetHero = this._targetSettlement.Notables.GetRandomElementWithPredicate((Hero x) => x.CanHaveQuestsOrIssues());
				this._rawMaterialsToBeDelivered = Campaign.Current.ObjectManager.GetObject<ItemObject>(this._possibleDeliveryItems.GetRandomElement<string>());
				this.CounterOfferHero = ArtisanCantSellProductsAtAFairPriceIssueBehavior.SelectCounterOfferHero(issueOwner);
			}

			// Token: 0x060046B2 RID: 18098 RVA: 0x0013DC47 File Offset: 0x0013BE47
			protected override float GetIssueEffectAmountInternal(IssueEffect issueEffect)
			{
				if (issueEffect == DefaultIssueEffects.SettlementProsperity)
				{
					return -0.2f;
				}
				if (issueEffect == DefaultIssueEffects.IssueOwnerPower)
				{
					return -0.2f;
				}
				return 0f;
			}

			// Token: 0x060046B3 RID: 18099 RVA: 0x0013DC6A File Offset: 0x0013BE6A
			public override ValueTuple<SkillObject, int> GetAlternativeSolutionSkill(Hero hero)
			{
				return new ValueTuple<SkillObject, int>((hero.GetSkillValue(DefaultSkills.Charm) >= hero.GetSkillValue(DefaultSkills.Trade)) ? DefaultSkills.Charm : DefaultSkills.Trade, 120);
			}

			// Token: 0x060046B4 RID: 18100 RVA: 0x0013DC98 File Offset: 0x0013BE98
			protected override void LordSolutionConsequenceWithAcceptCounterOffer()
			{
				foreach (Hero hero in base.IssueOwner.CurrentSettlement.Notables)
				{
					if (hero.IsMerchant)
					{
						ChangeRelationAction.ApplyPlayerRelation(hero, (int)(2f * base.IssueDifficultyMultiplier), true, true);
					}
				}
				this.RelationshipChangeWithIssueOwner = (int)(-5f * base.IssueDifficultyMultiplier);
				TraitLevelingHelper.OnIssueSolvedThroughBetrayal(base.IssueOwner, new Tuple<TraitObject, int>[]
				{
					new Tuple<TraitObject, int>(DefaultTraits.Honor, MathF.Round(-50f * base.IssueDifficultyMultiplier))
				});
				this.ApplyFailureEffects();
			}

			// Token: 0x060046B5 RID: 18101 RVA: 0x0013DD54 File Offset: 0x0013BF54
			protected override void LordSolutionConsequenceWithRefuseCounterOffer()
			{
				this.ApplyLordSolutionSuccessRewards();
			}

			// Token: 0x060046B6 RID: 18102 RVA: 0x0013DD5C File Offset: 0x0013BF5C
			public override bool LordSolutionCondition(out TextObject explanation)
			{
				if (base.IssueOwner.CurrentSettlement.OwnerClan == Clan.PlayerClan)
				{
					explanation = TextObject.Empty;
					return true;
				}
				explanation = new TextObject("{=9y0zpKUF}You need to be the owner of this settlement!", null);
				return false;
			}

			// Token: 0x060046B7 RID: 18103 RVA: 0x0013DD8C File Offset: 0x0013BF8C
			public override bool AlternativeSolutionCondition(out TextObject explanation)
			{
				explanation = TextObject.Empty;
				return QuestHelper.CheckRosterForAlternativeSolution(MobileParty.MainParty.MemberRoster, base.GetTotalAlternativeSolutionNeededMenCount(), ref explanation, 0, false);
			}

			// Token: 0x060046B8 RID: 18104 RVA: 0x0013DDAD File Offset: 0x0013BFAD
			public override bool DoTroopsSatisfyAlternativeSolution(TroopRoster troopRoster, out TextObject explanation)
			{
				explanation = TextObject.Empty;
				return QuestHelper.CheckRosterForAlternativeSolution(troopRoster, base.GetTotalAlternativeSolutionNeededMenCount(), ref explanation, 0, false);
			}

			// Token: 0x060046B9 RID: 18105 RVA: 0x0013DDC5 File Offset: 0x0013BFC5
			protected override void AlternativeSolutionEndWithSuccessConsequence()
			{
				this.ApplySuccessRewards();
			}

			// Token: 0x060046BA RID: 18106 RVA: 0x0013DDD0 File Offset: 0x0013BFD0
			private void ApplySuccessRewards()
			{
				base.IssueOwner.AddPower(10f);
				this.RelationshipChangeWithIssueOwner = 5;
				foreach (Hero hero in base.IssueOwner.CurrentSettlement.Notables.Where((Hero x) => x.IsMerchant))
				{
					hero.AddPower((float)((int)(-10f * base.IssueDifficultyMultiplier)));
					ChangeRelationAction.ApplyPlayerRelation(hero, -10, true, true);
				}
				base.IssueOwner.CurrentSettlement.Prosperity += 30f;
			}

			// Token: 0x060046BB RID: 18107 RVA: 0x0013DE94 File Offset: 0x0013C094
			private void ApplyLordSolutionSuccessRewards()
			{
				base.IssueOwner.AddPower(10f);
				this.RelationshipChangeWithIssueOwner = 10;
				this.CounterOfferHero.AddPower(-10f);
				foreach (Hero hero in base.IssueOwner.CurrentSettlement.Notables)
				{
					if (hero.IsMerchant)
					{
						if (hero != this.CounterOfferHero)
						{
							ChangeRelationAction.ApplyPlayerRelation(hero, -5, true, true);
						}
						else
						{
							ChangeRelationAction.ApplyPlayerRelation(hero, -10, true, true);
						}
					}
				}
				base.IssueOwner.CurrentSettlement.Prosperity += 3f;
			}

			// Token: 0x060046BC RID: 18108 RVA: 0x0013DF58 File Offset: 0x0013C158
			private void ApplyFailureEffects()
			{
				base.IssueOwner.AddPower(-10f);
				foreach (Hero hero in base.IssueOwner.CurrentSettlement.Notables.Where((Hero x) => x.IsMerchant))
				{
					hero.AddPower(3f);
				}
				base.IssueOwner.CurrentSettlement.Prosperity -= 20f;
			}

			// Token: 0x060046BD RID: 18109 RVA: 0x0013E004 File Offset: 0x0013C204
			protected override void AfterIssueCreation()
			{
			}

			// Token: 0x060046BE RID: 18110 RVA: 0x0013E006 File Offset: 0x0013C206
			protected override void OnGameLoad()
			{
			}

			// Token: 0x060046BF RID: 18111 RVA: 0x0013E008 File Offset: 0x0013C208
			protected override QuestBase GenerateIssueQuest(string questId)
			{
				return new ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest(questId, base.IssueOwner, CampaignTime.DaysFromNow(18f), this._targetSettlement, this._rawMaterialsToBeDelivered, this.RawMaterialCountToBeDelivered, this.RewardGold, this._targetHero, this.CounterOfferHero);
			}

			// Token: 0x060046C0 RID: 18112 RVA: 0x0013E04F File Offset: 0x0013C24F
			public override IssueBase.IssueFrequency GetFrequency()
			{
				return IssueBase.IssueFrequency.Common;
			}

			// Token: 0x060046C1 RID: 18113 RVA: 0x0013E052 File Offset: 0x0013C252
			protected override bool CanPlayerTakeQuestConditions(Hero issueGiver, out IssueBase.PreconditionFlags flags, out Hero relationHero, out SkillObject skill)
			{
				relationHero = null;
				flags = IssueBase.PreconditionFlags.None;
				if (issueGiver.GetRelationWithPlayer() < -10f)
				{
					flags |= IssueBase.PreconditionFlags.Relation;
					relationHero = issueGiver;
				}
				relationHero = issueGiver;
				skill = null;
				return flags == IssueBase.PreconditionFlags.None;
			}

			// Token: 0x060046C2 RID: 18114 RVA: 0x0013E07C File Offset: 0x0013C27C
			public override bool IssueStayAliveConditions()
			{
				return this.CounterOfferHero != null && this._targetHero.IsActive && this.CounterOfferHero.IsActive && this.CounterOfferHero.CurrentSettlement == base.IssueSettlement;
			}

			// Token: 0x060046C3 RID: 18115 RVA: 0x0013E0B5 File Offset: 0x0013C2B5
			protected override void CompleteIssueWithTimedOutConsequences()
			{
			}

			// Token: 0x040018B8 RID: 6328
			private const int BaseRewardGold = 500;

			// Token: 0x040018B9 RID: 6329
			private const int IssueDuration = 30;

			// Token: 0x040018BA RID: 6330
			private const int QuestTimeLimit = 18;

			// Token: 0x040018BB RID: 6331
			private const int RequiredSkillLevelForCompanion = 120;

			// Token: 0x040018BC RID: 6332
			[CachedData]
			private readonly MBList<string> _possibleDeliveryItems = new MBList<string> { "olives", "clay", "flax", "grape", "wool", "hardwood", "hides" };

			// Token: 0x040018BD RID: 6333
			[SaveableField(10)]
			private ItemObject _rawMaterialsToBeDelivered;

			// Token: 0x040018BE RID: 6334
			[SaveableField(20)]
			private Settlement _targetSettlement;

			// Token: 0x040018C0 RID: 6336
			[SaveableField(40)]
			private Hero _targetHero;
		}

		// Token: 0x020005FB RID: 1531
		public class ArtisanCantSellProductsAtAFairPriceIssueQuest : QuestBase
		{
			// Token: 0x060046C4 RID: 18116 RVA: 0x0013E0B7 File Offset: 0x0013C2B7
			internal static void AutoGeneratedStaticCollectObjectsArtisanCantSellProductsAtAFairPriceIssueQuest(object o, List<object> collectedObjects)
			{
				((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
			}

			// Token: 0x060046C5 RID: 18117 RVA: 0x0013E0C8 File Offset: 0x0013C2C8
			protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
			{
				base.AutoGeneratedInstanceCollectObjects(collectedObjects);
				collectedObjects.Add(this._rawMaterialsToBeDelivered);
				collectedObjects.Add(this._targetSettlement);
				collectedObjects.Add(this._counterOfferHero);
				collectedObjects.Add(this._targetHero);
				collectedObjects.Add(this._playerStartsQuestLog);
			}

			// Token: 0x060046C6 RID: 18118 RVA: 0x0013E118 File Offset: 0x0013C318
			internal static object AutoGeneratedGetMemberValue_rawMaterialsToBeDelivered(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest)o)._rawMaterialsToBeDelivered;
			}

			// Token: 0x060046C7 RID: 18119 RVA: 0x0013E125 File Offset: 0x0013C325
			internal static object AutoGeneratedGetMemberValue_amountOfRawGoodsToBeDelivered(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest)o)._amountOfRawGoodsToBeDelivered;
			}

			// Token: 0x060046C8 RID: 18120 RVA: 0x0013E137 File Offset: 0x0013C337
			internal static object AutoGeneratedGetMemberValue_targetSettlement(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest)o)._targetSettlement;
			}

			// Token: 0x060046C9 RID: 18121 RVA: 0x0013E144 File Offset: 0x0013C344
			internal static object AutoGeneratedGetMemberValue_deliveredRawGoods(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest)o)._deliveredRawGoods;
			}

			// Token: 0x060046CA RID: 18122 RVA: 0x0013E156 File Offset: 0x0013C356
			internal static object AutoGeneratedGetMemberValue_counterOfferHero(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest)o)._counterOfferHero;
			}

			// Token: 0x060046CB RID: 18123 RVA: 0x0013E163 File Offset: 0x0013C363
			internal static object AutoGeneratedGetMemberValue_targetHero(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest)o)._targetHero;
			}

			// Token: 0x060046CC RID: 18124 RVA: 0x0013E170 File Offset: 0x0013C370
			internal static object AutoGeneratedGetMemberValue_counterOfferGiven(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest)o)._counterOfferGiven;
			}

			// Token: 0x060046CD RID: 18125 RVA: 0x0013E182 File Offset: 0x0013C382
			internal static object AutoGeneratedGetMemberValue_counterOfferRefused(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest)o)._counterOfferRefused;
			}

			// Token: 0x060046CE RID: 18126 RVA: 0x0013E194 File Offset: 0x0013C394
			internal static object AutoGeneratedGetMemberValue_rewardGold(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest)o)._rewardGold;
			}

			// Token: 0x060046CF RID: 18127 RVA: 0x0013E1A6 File Offset: 0x0013C3A6
			internal static object AutoGeneratedGetMemberValue_playerStartsQuestLog(object o)
			{
				return ((ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest)o)._playerStartsQuestLog;
			}

			// Token: 0x17000E34 RID: 3636
			// (get) Token: 0x060046D0 RID: 18128 RVA: 0x0013E1B3 File Offset: 0x0013C3B3
			public override bool IsRemainingTimeHidden
			{
				get
				{
					return false;
				}
			}

			// Token: 0x17000E35 RID: 3637
			// (get) Token: 0x060046D1 RID: 18129 RVA: 0x0013E1B6 File Offset: 0x0013C3B6
			public override TextObject Title
			{
				get
				{
					return new TextObject("{=sfW7oT9e}Artisan can't sell products", null);
				}
			}

			// Token: 0x17000E36 RID: 3638
			// (get) Token: 0x060046D2 RID: 18130 RVA: 0x0013E1C4 File Offset: 0x0013C3C4
			private TextObject _playerStartsQuestLogText
			{
				get
				{
					TextObject textObject = new TextObject("{=N0E8gd5H}{QUEST_GIVER.LINK} an artisan from {QUEST_GIVER_SETTLEMENT} has complained to you about not being able to sell their goods at the price they want because of the unfair local laws. {?QUEST_GIVER.GENDER}She{?}He{\\?} will pay {REWARD_AMOUNT}{GOLD_ICON} for you to take the goods to another town. You agreed to take {?QUEST_GIVER.GENDER}her{?}his{\\?} goods to {TARGET_HERO.LINK} in {TARGET_SETTLEMENT}.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
					StringHelpers.SetCharacterProperties("TARGET_HERO", this._targetHero.CharacterObject, textObject, false);
					textObject.SetTextVariable("QUEST_GIVER_SETTLEMENT", base.QuestGiver.CurrentSettlement.Name);
					textObject.SetTextVariable("TARGET_SETTLEMENT", this._targetSettlement.EncyclopediaLinkWithName);
					textObject.SetTextVariable("REWARD_AMOUNT", this.RewardGold);
					textObject.SetTextVariable("GOLD_ICON", "{=!}<img src=\"General\\Icons\\Coin@2x\" extend=\"8\">");
					return textObject;
				}
			}

			// Token: 0x17000E37 RID: 3639
			// (get) Token: 0x060046D3 RID: 18131 RVA: 0x0013E264 File Offset: 0x0013C464
			private TextObject _successQuestLogText
			{
				get
				{
					TextObject textObject = new TextObject("{=7fr8QDYi}{QUEST_GIVER.LINK} sends {?QUEST_GIVER.GENDER}her{?}his{\\?} regards for a fine job done with the {REWARD}{GOLD_ICON} {?QUEST_GIVER.GENDER}she{?}he{\\?} promised.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
					textObject.SetTextVariable("REWARD", this._rewardGold);
					textObject.SetTextVariable("GOLD_ICON", "{=!}<img src=\"General\\Icons\\Coin@2x\" extend=\"8\">");
					return textObject;
				}
			}

			// Token: 0x17000E38 RID: 3640
			// (get) Token: 0x060046D4 RID: 18132 RVA: 0x0013E2BC File Offset: 0x0013C4BC
			private TextObject _failQuestLogText
			{
				get
				{
					TextObject textObject = new TextObject("{=um4UaneZ}You have failed to deliver {REQUESTED_AMOUNT} {.%}{?(REQUESTED_AMOUNT > 1)}{PLURAL(RAW_MATERIALS)}{?}{RAW_MATERIALS}{\\?}{.%} to {TARGET_SETTLEMENT} in time as {QUEST_GIVER.LINK} asked you.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
					textObject.SetTextVariable("REMAINING_AMOUNT", this._amountOfRawGoodsToBeDelivered - this._deliveredRawGoods);
					textObject.SetTextVariable("REQUESTED_AMOUNT", this._amountOfRawGoodsToBeDelivered);
					textObject.SetTextVariable("TARGET_SETTLEMENT", this._targetSettlement.EncyclopediaLinkWithName);
					textObject.SetTextVariable("RAW_MATERIALS", this._rawMaterialsToBeDelivered.Name);
					return textObject;
				}
			}

			// Token: 0x17000E39 RID: 3641
			// (get) Token: 0x060046D5 RID: 18133 RVA: 0x0013E348 File Offset: 0x0013C548
			private TextObject _failQuestLogCounterOfferText
			{
				get
				{
					TextObject textObject = new TextObject("{=pskiLikd}After listening to the town merchants, you decided to keep the restrictions on the sale of goods. Your decision made the merchants happy but disappointed {QUEST_GIVER.LINK}.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
					return textObject;
				}
			}

			// Token: 0x17000E3A RID: 3642
			// (get) Token: 0x060046D6 RID: 18134 RVA: 0x0013E37C File Offset: 0x0013C57C
			private TextObject _onQuestCancelledDueToWarLogText
			{
				get
				{
					TextObject textObject = new TextObject("{=vaUlAZba}Your clan is now at war with {QUEST_GIVER.LINK}. Your agreement with {QUEST_GIVER.LINK} was canceled.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
					return textObject;
				}
			}

			// Token: 0x17000E3B RID: 3643
			// (get) Token: 0x060046D7 RID: 18135 RVA: 0x0013E3B0 File Offset: 0x0013C5B0
			private TextObject _playerDeclaredWarQuestLogText
			{
				get
				{
					TextObject textObject = new TextObject("{=bqeWVVEE}Your actions have started a war with {QUEST_GIVER.LINK}'s faction. {?QUEST_GIVER.GENDER}She{?}He{\\?} cancels your agreement and the quest is a failure.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
					return textObject;
				}
			}

			// Token: 0x060046D8 RID: 18136 RVA: 0x0013E3E4 File Offset: 0x0013C5E4
			public ArtisanCantSellProductsAtAFairPriceIssueQuest(string questId, Hero questGiver, CampaignTime duration, Settlement targetSettlement, ItemObject rawGoodsToBeDelivered, int amountOfRawGoodsToBeDelivered, int rewardGold, Hero targetHero, Hero counterOfferHero)
				: base(questId, questGiver, duration, rewardGold)
			{
				this._targetSettlement = targetSettlement;
				this._rawMaterialsToBeDelivered = rawGoodsToBeDelivered;
				this._amountOfRawGoodsToBeDelivered = amountOfRawGoodsToBeDelivered;
				this._deliveredRawGoods = 0;
				this._counterOfferHero = counterOfferHero;
				this._targetHero = targetHero;
				this._rewardGold = rewardGold;
				this.SetDialogs();
				base.InitializeQuestOnCreation();
			}

			// Token: 0x060046D9 RID: 18137 RVA: 0x0013E43F File Offset: 0x0013C63F
			protected override void InitializeQuestOnGameLoad()
			{
				this.SetDialogs();
				Campaign.Current.ConversationManager.AddDialogFlow(this.GetCounterOfferDialogFlow(), this);
				Campaign.Current.ConversationManager.AddDialogFlow(this.GetDeliveryDialogFlow(), this);
			}

			// Token: 0x060046DA RID: 18138 RVA: 0x0013E474 File Offset: 0x0013C674
			protected override void SetDialogs()
			{
				this.OfferDialogFlow = DialogFlow.CreateDialogFlow("issue_classic_quest_start", 100).NpcLine(new TextObject("{=7KshRCtM}Excellent. I'll have the goods delivered to you right away.", null), null, null).Condition(() => Hero.OneToOneConversationHero == base.QuestGiver)
					.Consequence(new ConversationSentence.OnConsequenceDelegate(this.QuestAcceptedConsequences))
					.CloseDialog();
				this.DiscussDialogFlow = DialogFlow.CreateDialogFlow("quest_discuss", 100).NpcLine(new TextObject("{=6qKJ6Uzr}I believe the goods have been delivered to you.", null), null, null).Condition(() => Hero.OneToOneConversationHero == base.QuestGiver)
					.BeginPlayerOptions()
					.PlayerOption(new TextObject("{=6ZCAQ1S9}Great. I will be heading out soon.", null), null)
					.NpcLine(new TextObject("{=3SBDbPjD}Good to hear that! Safe journeys.", null), null, null)
					.CloseDialog()
					.PlayerOption(new TextObject("{=JOaD2BlP}In due time. Let's not be too hasty here.", null), null)
					.NpcLine(new TextObject("{=ppi6eVos}As you wish.", null), null, null)
					.CloseDialog()
					.EndPlayerOptions()
					.CloseDialog();
			}

			// Token: 0x060046DB RID: 18139 RVA: 0x0013E560 File Offset: 0x0013C760
			private void QuestAcceptedConsequences()
			{
				base.StartQuest();
				TextObject textObject = new TextObject("{=L700FNht}Delivered {RAW_MATERIAL}", null);
				textObject.SetTextVariable("RAW_MATERIAL", this._rawMaterialsToBeDelivered.Name);
				this._playerStartsQuestLog = base.AddDiscreteLog(this._playerStartsQuestLogText, textObject, this._deliveredRawGoods, this._amountOfRawGoodsToBeDelivered, null, true);
				PartyBase.MainParty.ItemRoster.AddToCounts(this._rawMaterialsToBeDelivered, this._amountOfRawGoodsToBeDelivered);
				base.AddTrackedObject(this._targetSettlement);
				base.AddTrackedObject(this._targetHero);
				Campaign.Current.ConversationManager.AddDialogFlow(this.GetCounterOfferDialogFlow(), this);
				Campaign.Current.ConversationManager.AddDialogFlow(this.GetDeliveryDialogFlow(), this);
			}

			// Token: 0x060046DC RID: 18140 RVA: 0x0013E617 File Offset: 0x0013C817
			private int GetAvailableRequestedItemCountOnPlayer(ItemObject item)
			{
				return PartyBase.MainParty.ItemRoster.GetItemNumber(item);
			}

			// Token: 0x060046DD RID: 18141 RVA: 0x0013E62C File Offset: 0x0013C82C
			private void BeforeGameMenuOpened(MenuCallbackArgs args)
			{
				if (!this._counterOfferGiven && this._counterOfferHero != null && Campaign.Current.GameMenuManager.NextLocation == null && GameStateManager.Current.ActiveState is MapState)
				{
					CampaignMapConversation.OpenConversation(new ConversationCharacterData(CharacterObject.PlayerCharacter, null, false, false, false, false, false, false), new ConversationCharacterData(this._counterOfferHero.CharacterObject, null, false, false, false, false, false, false));
					this._counterOfferGiven = true;
				}
			}

			// Token: 0x060046DE RID: 18142 RVA: 0x0013E6A0 File Offset: 0x0013C8A0
			private DialogFlow GetCounterOfferDialogFlow()
			{
				if (base.QuestGiver.CurrentSettlement.Owner != Hero.MainHero)
				{
					TextObject textObject = new TextObject("{=riYecgOn}We have heard rumors that you have purchased goods from {QUEST_GIVER.NAME}. Well, our laws require that only merchants resident in the city can buy goods directly from the artisans.", null);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
					TextObject textObject2 = new TextObject("{=5AvvGkk4}I'm sure what you did was an honest mistake, but there are laws. Hand over the contraband to me, and this will be the end of it.", null);
					if (this._counterOfferHero.CharacterObject.GetPersona() == DefaultTraits.PersonaCurt)
					{
						textObject2 = new TextObject("{=PyjCZGlG}This town has laws about unauthorized trade. Turn over the goods to me now.", null);
					}
					return DialogFlow.CreateDialogFlow("start", 125).NpcLine(new TextObject("{=KSeIOHDh}(One of the merchants in the town comes to talk as you are preparing to depart.)", null), null, null).Condition(() => this._counterOfferHero == Hero.OneToOneConversationHero && !this._counterOfferRefused)
						.NpcLine(textObject, null, null)
						.NpcLine(textObject2, null, null)
						.BeginPlayerOptions()
						.PlayerOption(new TextObject("{=mWLA9sfT}I don't want to break the law. You can take the goods.", null), null)
						.NpcLine(new TextObject("{=xeboujso}That's the right call. You seem a responsible type.", null), null, null)
						.Consequence(delegate
						{
							Campaign.Current.ConversationManager.ConversationEndOneShot += this.QuestFailedWithRefusal;
						})
						.CloseDialog()
						.PlayerOption(new TextObject("{=fe0uGUZb}That's just robbery under the cover of law. I'm not giving you anything.", null), null)
						.NpcLine(new TextObject("{=U9z7rvX5}Respectfully, you're making a big mistake and I think you're going to regret it.", null), null, null)
						.Consequence(delegate
						{
							Campaign.Current.ConversationManager.ConversationEndOneShot += this.RefuseCounterOfferConsequences;
						})
						.CloseDialog()
						.EndPlayerOptions();
				}
				TextObject textObject3 = new TextObject("{=DidANRmb}My {?PLAYER.GENDER}lady{?}lord{\\?}, we have heard rumors that you have purchased goods from {QUEST_GIVER.NAME}. Surely this cannot be true. Our laws require that only merchants resident in the city can buy goods directly from the artisans.", null);
				StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject3, false);
				TextObject textObject4 = new TextObject("{=bbz2eyAO}Perhaps, my {?PLAYER.GENDER}lady{?}lord{\\?}, it was a mistake? If you were to relinquish the goods, it would avoid a situation that might appear, well, a bit unseemly.", null);
				return DialogFlow.CreateDialogFlow("start", 125).NpcLine(new TextObject("{=KSeIOHDh}(One of the merchants in the town comes to talk as you are preparing to depart.)", null), null, null).Condition(() => this._counterOfferHero == Hero.OneToOneConversationHero && !this._counterOfferRefused)
					.NpcLine(textObject3, null, null)
					.NpcLine(textObject4, null, null)
					.BeginPlayerOptions()
					.PlayerOption(new TextObject("{=EKvwhGtE}I suppose the laws of this town bind me as well. You can take the goods.", null), null)
					.NpcLine(new TextObject("{=dSy9Hawq}A just decision, my {?PLAYER.GENDER}lady{?}lord{\\?}.", null), null, null)
					.Consequence(delegate
					{
						Campaign.Current.ConversationManager.ConversationEndOneShot += this.QuestFailedWithRefusal;
					})
					.CloseDialog()
					.PlayerOption(new TextObject("{=IUCkbHkT}I decide how the law here is applied, merchant.", null), null)
					.NpcLine(new TextObject("{=RYOuDxdu}Respectfully, my {?PLAYER.GENDER}lady{?}lord{\\?}, I must protest this. But of course you are free to do what you will.", null), null, null)
					.Consequence(delegate
					{
						Campaign.Current.ConversationManager.ConversationEndOneShot += this.RefuseCounterOfferConsequences;
					})
					.CloseDialog()
					.EndPlayerOptions();
			}

			// Token: 0x060046DF RID: 18143 RVA: 0x0013E8C4 File Offset: 0x0013CAC4
			private DialogFlow GetDeliveryDialogFlow()
			{
				TextObject textObject = new TextObject("{=8nwZXNTk}About the task {QUEST_GIVER.LINK} gave me...", null);
				StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
				TextObject textObject2 = new TextObject("{=mr7SgjAq}Yes... {QUEST_GIVER.LINK} sent word to us. We are expecting the {.%}{RAW_MATERIALS}{.%} that {?QUEST_GIVER.GENDER}she{?}he{\\?} had.", null);
				StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject2, false);
				StringHelpers.SetCharacterProperties("PLAYER", CharacterObject.PlayerCharacter, textObject2, false);
				textObject2.SetTextVariable("RAW_MATERIALS", this._rawMaterialsToBeDelivered.Name);
				TextObject npcSecondLine = new TextObject("{=g7hZw8LI}Have you brought {REQUESTED_AMOUNT} {.%}{?(REQUESTED_AMOUNT > 1)}{PLURAL(RAW_MATERIALS)}{?}{RAW_MATERIALS}{\\?}{.%}? I have a fat purse of {REWARD}{GOLD_ICON} for you as promised.", null);
				npcSecondLine.SetTextVariable("GOLD_ICON", "{=!}<img src=\"General\\Icons\\Coin@2x\" extend=\"8\">");
				npcSecondLine.SetTextVariable("REWARD", this._rewardGold);
				npcSecondLine.SetTextVariable("REQUESTED_AMOUNT", this._amountOfRawGoodsToBeDelivered - this._deliveredRawGoods);
				npcSecondLine.SetTextVariable("RAW_MATERIALS", this._rawMaterialsToBeDelivered.Name);
				TextObject textObject3 = new TextObject("{=jidYZW2s}Most of the goods are here, but I lost some of them along the way. I have {AVAILABLE_AMOUNT} with me.", null);
				TextObject textObject4 = new TextObject("{=bPcO3Km2}Yes, things come up, but my agreement with {QUEST_GIVER.LINK} was for a fixed amount of goods. I don't want to negotiate a new deal. Please come back when you can get the full amount.", null);
				StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject4, false);
				TextObject playerDeliverItemsFully = new TextObject("{=yKz5e5H4}Yes. I have the goods right here. I brought {REQUESTED_AMOUNT} {.%}{?(REQUESTED_AMOUNT > 1)}{PLURAL(RAW_MATERIALS)}{?}{RAW_MATERIALS}{\\?}{.%} as we agreed.", null);
				playerDeliverItemsFully.SetTextVariable("REQUESTED_AMOUNT", this._amountOfRawGoodsToBeDelivered - this._deliveredRawGoods);
				playerDeliverItemsFully.SetTextVariable("RAW_MATERIALS", this._rawMaterialsToBeDelivered.Name);
				TextObject textObject5 = new TextObject("{=S60sDU3j}Very good! Here is your money. Thank you.", null);
				StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject5, false);
				TextObject textObject6 = new TextObject("{=4uKTfTg9}Sorry. I don't have anything for you this time.", null);
				TextObject textObject7 = new TextObject("{=JTfaqKyX}Well, try to bring it soon.", null);
				TextObject textObject8 = new TextObject("{=GVJS9ewr}You know, these goods are worth more to me than what you'll paying. I will keep them.", null);
				TextObject textObject9 = new TextObject("{=kWZ3cskl}What? That's a breach of contract. {QUEST_GIVER.LINK} will certainly hear about this...", null);
				StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject9, false);
				return DialogFlow.CreateDialogFlow("hero_main_options", 125).PlayerLine(textObject, null).Condition(delegate
				{
					if (this._deliveredRawGoods > 0)
					{
						npcSecondLine.SetTextVariable("REQUESTED_AMOUNT", this._amountOfRawGoodsToBeDelivered - this._deliveredRawGoods);
						playerDeliverItemsFully.SetTextVariable("REQUESTED_AMOUNT", this._amountOfRawGoodsToBeDelivered - this._deliveredRawGoods);
					}
					return Settlement.CurrentSettlement == this._targetSettlement && CharacterObject.OneToOneConversationCharacter.IsHero && CharacterObject.OneToOneConversationCharacter.HeroObject == this._targetHero;
				})
					.NpcLine(textObject2, null, null)
					.NpcLine(npcSecondLine, null, null)
					.BeginPlayerOptions()
					.PlayerOption(textObject3, null)
					.Condition(delegate
					{
						int availableRequestedItemCountOnPlayer = this.GetAvailableRequestedItemCountOnPlayer(this._rawMaterialsToBeDelivered);
						int num = this._amountOfRawGoodsToBeDelivered - this._deliveredRawGoods;
						Campaign.Current.ConversationManager.GetCurrentDialogLine().SetTextVariable("AVAILABLE_AMOUNT", availableRequestedItemCountOnPlayer);
						return availableRequestedItemCountOnPlayer < num && availableRequestedItemCountOnPlayer != 0;
					})
					.NpcLine(textObject4, null, null)
					.Consequence(new ConversationSentence.OnConsequenceDelegate(this.DeliverItemsPartiallyOnConsequence))
					.CloseDialog()
					.PlayerOption(playerDeliverItemsFully, null)
					.Condition(delegate
					{
						int availableRequestedItemCountOnPlayer2 = this.GetAvailableRequestedItemCountOnPlayer(this._rawMaterialsToBeDelivered);
						int num2 = this._amountOfRawGoodsToBeDelivered - this._deliveredRawGoods;
						Campaign.Current.ConversationManager.GetCurrentDialogLine().SetTextVariable("REQUESTED_AMOUNT", this._amountOfRawGoodsToBeDelivered - this._deliveredRawGoods);
						Campaign.Current.ConversationManager.GetCurrentDialogLine().SetTextVariable("AVAILABLE_AMOUNT", num2);
						return availableRequestedItemCountOnPlayer2 >= num2 && availableRequestedItemCountOnPlayer2 != 0;
					})
					.NpcLine(textObject5, null, null)
					.Consequence(new ConversationSentence.OnConsequenceDelegate(this.DeliverItemsFullyOnConsequence))
					.CloseDialog()
					.PlayerOption(textObject8, null)
					.NpcLine(textObject9, null, null)
					.Consequence(new ConversationSentence.OnConsequenceDelegate(this.DeliverItemsRejectOnConsequence))
					.CloseDialog()
					.PlayerOption(textObject6, null)
					.NpcLine(textObject7, null, null)
					.CloseDialog()
					.EndPlayerOptions()
					.CloseDialog();
			}

			// Token: 0x060046E0 RID: 18144 RVA: 0x0013EBB0 File Offset: 0x0013CDB0
			private void DeliverItemsRejectOnConsequence()
			{
				TextObject textObject = new TextObject("{=yoiOIuI9}You refused to hand over the items. {QUEST_GIVER.LINK} must be furious.", null);
				StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
				this.RelationshipChangeWithQuestGiver = -20;
				base.CompleteQuestWithFail(textObject);
				ChangeRelationAction.ApplyPlayerRelation(this._targetHero, -15, true, true);
			}

			// Token: 0x060046E1 RID: 18145 RVA: 0x0013EC00 File Offset: 0x0013CE00
			private void DeliverItemsPartiallyOnConsequence()
			{
				int availableRequestedItemCountOnPlayer = this.GetAvailableRequestedItemCountOnPlayer(this._rawMaterialsToBeDelivered);
				this._deliveredRawGoods += availableRequestedItemCountOnPlayer;
				PartyBase.MainParty.ItemRoster.AddToCounts(this._rawMaterialsToBeDelivered, -availableRequestedItemCountOnPlayer);
				base.UpdateQuestTaskStage(this._playerStartsQuestLog, this._deliveredRawGoods);
				int num = this._amountOfRawGoodsToBeDelivered - this._deliveredRawGoods;
				TextObject textObject = new TextObject("{=ffoqz6yP}You have delivered {DELIVERED_ITEM_COUNT} units of goods from {QUEST_GIVER.NAME}.", null);
				textObject.SetTextVariable("DELIVERED_ITEM_COUNT", availableRequestedItemCountOnPlayer);
				StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
				MBInformationManager.AddQuickInformation(textObject, 0, null, "");
				TextObject textObject2 = new TextObject("{=3zdK4sm2}You have to bring in amount {REQUIRED_AMOUNT} more to fulfill your end of the deal.", null);
				textObject2.SetTextVariable("REQUIRED_AMOUNT", num);
				MBInformationManager.AddQuickInformation(textObject2, 0, null, "");
			}

			// Token: 0x060046E2 RID: 18146 RVA: 0x0013ECC4 File Offset: 0x0013CEC4
			private void DeliverItemsFullyOnConsequence()
			{
				int num = this._amountOfRawGoodsToBeDelivered - this._deliveredRawGoods;
				this._deliveredRawGoods = this._amountOfRawGoodsToBeDelivered;
				PartyBase.MainParty.ItemRoster.AddToCounts(this._rawMaterialsToBeDelivered, -num);
				base.UpdateQuestTaskStage(this._playerStartsQuestLog, this._deliveredRawGoods);
				TextObject textObject = new TextObject("{=WSLHfiwg}You have delivered the goods from {QUEST_GIVER.NAME}.", null);
				StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
				MBInformationManager.AddQuickInformation(textObject, 0, null, "");
				base.CompleteQuestWithSuccess();
			}

			// Token: 0x060046E3 RID: 18147 RVA: 0x0013ED4C File Offset: 0x0013CF4C
			private void QuestFailedWithRefusal()
			{
				foreach (Hero hero in base.QuestGiver.CurrentSettlement.Notables.Where((Hero x) => x.IsMerchant))
				{
					ChangeRelationAction.ApplyPlayerRelation(hero, 2, true, true);
					hero.AddPower(10f);
				}
				this.RelationshipChangeWithQuestGiver = -5;
				TraitLevelingHelper.OnIssueFailed(base.QuestGiver, new Tuple<TraitObject, int>[]
				{
					new Tuple<TraitObject, int>(DefaultTraits.Honor, -50)
				});
				base.CompleteQuestWithFail(this._failQuestLogCounterOfferText);
				this.RemoveRequestedItemsFromPlayer();
			}

			// Token: 0x060046E4 RID: 18148 RVA: 0x0013EE0C File Offset: 0x0013D00C
			private void RefuseCounterOfferConsequences()
			{
				if (base.QuestGiver.CurrentSettlement.Owner != Hero.MainHero)
				{
					ChangeCrimeRatingAction.Apply(base.QuestGiver.CurrentSettlement.MapFaction, 5f, true);
				}
				foreach (Hero hero in base.QuestGiver.CurrentSettlement.Notables.Where((Hero x) => x.IsMerchant && x != this._counterOfferHero))
				{
					ChangeRelationAction.ApplyPlayerRelation(hero, -5, true, true);
				}
				ChangeRelationAction.ApplyPlayerRelation(this._counterOfferHero, -10, true, true);
				this._counterOfferHero.AddPower(-10f);
				this._counterOfferRefused = true;
			}

			// Token: 0x060046E5 RID: 18149 RVA: 0x0013EED0 File Offset: 0x0013D0D0
			protected override void RegisterEvents()
			{
				CampaignEvents.BeforeGameMenuOpenedEvent.AddNonSerializedListener(this, new Action<MenuCallbackArgs>(this.BeforeGameMenuOpened));
				CampaignEvents.HeroKilledEvent.AddNonSerializedListener(this, new Action<Hero, Hero, KillCharacterAction.KillCharacterActionDetail, bool>(this.OnHeroKilled));
				CampaignEvents.ClanChangedKingdom.AddNonSerializedListener(this, new Action<Clan, Kingdom, Kingdom, ChangeKingdomAction.ChangeKingdomActionDetail, bool>(this.OnClanChangedKingdom));
				CampaignEvents.WarDeclared.AddNonSerializedListener(this, new Action<IFaction, IFaction, DeclareWarAction.DeclareWarDetail>(this.OnWarDeclared));
			}

			// Token: 0x060046E6 RID: 18150 RVA: 0x0013EF39 File Offset: 0x0013D139
			public override void OnHeroCanHaveQuestOrIssueInfoIsRequested(Hero hero, ref bool result)
			{
				if (hero == this._targetHero)
				{
					result = false;
				}
			}

			// Token: 0x060046E7 RID: 18151 RVA: 0x0013EF47 File Offset: 0x0013D147
			private void OnClanChangedKingdom(Clan clan, Kingdom oldKingdom, Kingdom newKingdom, ChangeKingdomAction.ChangeKingdomActionDetail detail, bool showNotification = true)
			{
				if (base.QuestGiver.CurrentSettlement.MapFaction.IsAtWarWith(Hero.MainHero.MapFaction))
				{
					base.CompleteQuestWithCancel(this._onQuestCancelledDueToWarLogText);
				}
			}

			// Token: 0x060046E8 RID: 18152 RVA: 0x0013EF76 File Offset: 0x0013D176
			private void OnWarDeclared(IFaction faction1, IFaction faction2, DeclareWarAction.DeclareWarDetail detail)
			{
				QuestHelper.CheckWarDeclarationAndFailOrCancelTheQuest(this, faction1, faction2, detail, this._playerDeclaredWarQuestLogText, this._onQuestCancelledDueToWarLogText);
			}

			// Token: 0x060046E9 RID: 18153 RVA: 0x0013EF90 File Offset: 0x0013D190
			private void OnHeroKilled(Hero victim, Hero killer, KillCharacterAction.KillCharacterActionDetail detail, bool showNotification)
			{
				if (victim == this._targetHero)
				{
					TextObject textObject = ((detail == KillCharacterAction.KillCharacterActionDetail.Lost) ? this.TargetHeroDisappearedLogText : this.TargetHeroDiedLogText);
					StringHelpers.SetCharacterProperties("QUEST_TARGET", this._targetHero.CharacterObject, textObject, false);
					StringHelpers.SetCharacterProperties("QUEST_GIVER", base.QuestGiver.CharacterObject, textObject, false);
					base.AddLog(textObject, false);
					base.CompleteQuestWithCancel(null);
					return;
				}
				if (victim == this._counterOfferHero)
				{
					base.CompleteQuestWithCancel(null);
				}
			}

			// Token: 0x060046EA RID: 18154 RVA: 0x0013F00C File Offset: 0x0013D20C
			private void RemoveRequestedItemsFromPlayer()
			{
				int availableRequestedItemCountOnPlayer = this.GetAvailableRequestedItemCountOnPlayer(this._rawMaterialsToBeDelivered);
				int num = this._amountOfRawGoodsToBeDelivered - this._deliveredRawGoods;
				PartyBase.MainParty.ItemRoster.AddToCounts(this._rawMaterialsToBeDelivered, (availableRequestedItemCountOnPlayer < num) ? (-availableRequestedItemCountOnPlayer) : (-num));
			}

			// Token: 0x060046EB RID: 18155 RVA: 0x0013F054 File Offset: 0x0013D254
			public override void OnFailed()
			{
				base.QuestGiver.AddPower(-10f);
				base.QuestGiver.CurrentSettlement.Prosperity -= 20f;
				foreach (Hero hero in base.QuestGiver.CurrentSettlement.Notables.Where((Hero x) => x.IsMerchant))
				{
					hero.AddPower(5f);
				}
			}

			// Token: 0x060046EC RID: 18156 RVA: 0x0013F100 File Offset: 0x0013D300
			protected override void OnFinalize()
			{
			}

			// Token: 0x060046ED RID: 18157 RVA: 0x0013F102 File Offset: 0x0013D302
			protected override void AfterLoad()
			{
			}

			// Token: 0x060046EE RID: 18158 RVA: 0x0013F104 File Offset: 0x0013D304
			protected override void OnCompleteWithSuccess()
			{
				base.QuestGiver.AddPower(15f);
				this.RelationshipChangeWithQuestGiver = 10;
				TraitLevelingHelper.OnIssueSolvedThroughQuest(base.QuestGiver, new Tuple<TraitObject, int>[]
				{
					new Tuple<TraitObject, int>(DefaultTraits.Honor, 50)
				});
				foreach (Hero hero in base.QuestGiver.CurrentSettlement.Notables.Where((Hero x) => x.IsMerchant))
				{
					hero.AddPower(-5f);
					ChangeRelationAction.ApplyPlayerRelation(hero, -5, true, true);
				}
				base.QuestGiver.CurrentSettlement.Prosperity += 20f;
				base.AddLog(this._successQuestLogText, false);
				base.RemoveTrackedObject(this._targetSettlement);
				base.RemoveTrackedObject(this._targetHero);
				GiveGoldAction.ApplyBetweenCharacters(null, Hero.MainHero, this._rewardGold, false);
			}

			// Token: 0x060046EF RID: 18159 RVA: 0x0013F218 File Offset: 0x0013D418
			protected override void OnTimedOut()
			{
				this.OnFailed();
				base.AddLog(this._failQuestLogText, false);
			}

			// Token: 0x060046F0 RID: 18160 RVA: 0x0013F22E File Offset: 0x0013D42E
			public override void OnCanceled()
			{
			}

			// Token: 0x040018C1 RID: 6337
			[SaveableField(10)]
			private readonly ItemObject _rawMaterialsToBeDelivered;

			// Token: 0x040018C2 RID: 6338
			[SaveableField(20)]
			private readonly int _amountOfRawGoodsToBeDelivered;

			// Token: 0x040018C3 RID: 6339
			[SaveableField(30)]
			private readonly Settlement _targetSettlement;

			// Token: 0x040018C4 RID: 6340
			[SaveableField(40)]
			private int _deliveredRawGoods;

			// Token: 0x040018C5 RID: 6341
			[SaveableField(100)]
			private Hero _counterOfferHero;

			// Token: 0x040018C6 RID: 6342
			[SaveableField(60)]
			private Hero _targetHero;

			// Token: 0x040018C7 RID: 6343
			[SaveableField(70)]
			private bool _counterOfferGiven;

			// Token: 0x040018C8 RID: 6344
			[SaveableField(80)]
			private bool _counterOfferRefused;

			// Token: 0x040018C9 RID: 6345
			[SaveableField(90)]
			private int _rewardGold;

			// Token: 0x040018CA RID: 6346
			[SaveableField(212)]
			private JournalLog _playerStartsQuestLog;
		}

		// Token: 0x020005FC RID: 1532
		public class ArtisanCantSellProductsAtAFairPriceIssueTypeDefiner : SaveableTypeDefiner
		{
			// Token: 0x060046FA RID: 18170 RVA: 0x0013F30E File Offset: 0x0013D50E
			public ArtisanCantSellProductsAtAFairPriceIssueTypeDefiner()
				: base(480000)
			{
			}

			// Token: 0x060046FB RID: 18171 RVA: 0x0013F31B File Offset: 0x0013D51B
			protected override void DefineClassTypes()
			{
				base.AddClassDefinition(typeof(ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssue), 1, null);
				base.AddClassDefinition(typeof(ArtisanCantSellProductsAtAFairPriceIssueBehavior.ArtisanCantSellProductsAtAFairPriceIssueQuest), 2, null);
			}
		}
	}
}
