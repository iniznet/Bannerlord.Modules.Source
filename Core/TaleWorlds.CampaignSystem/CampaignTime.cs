using System;
using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem
{
	// Token: 0x0200006D RID: 109
	public struct CampaignTime : IComparable<CampaignTime>
	{
		// Token: 0x06000E47 RID: 3655 RVA: 0x00042930 File Offset: 0x00040B30
		public static void AutoGeneratedStaticCollectObjectsCampaignTime(object o, List<object> collectedObjects)
		{
			((CampaignTime)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06000E48 RID: 3656 RVA: 0x0004294C File Offset: 0x00040B4C
		private void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
		}

		// Token: 0x06000E49 RID: 3657 RVA: 0x0004294E File Offset: 0x00040B4E
		internal static object AutoGeneratedGetMemberValue_numTicks(object o)
		{
			return ((CampaignTime)o)._numTicks;
		}

		// Token: 0x17000376 RID: 886
		// (get) Token: 0x06000E4A RID: 3658 RVA: 0x00042960 File Offset: 0x00040B60
		internal long NumTicks
		{
			get
			{
				return this._numTicks;
			}
		}

		// Token: 0x06000E4B RID: 3659 RVA: 0x00042968 File Offset: 0x00040B68
		internal CampaignTime(long numTicks)
		{
			this._numTicks = numTicks;
		}

		// Token: 0x17000377 RID: 887
		// (get) Token: 0x06000E4C RID: 3660 RVA: 0x00042971 File Offset: 0x00040B71
		private static long CurrentTicks
		{
			get
			{
				return Campaign.Current.MapTimeTracker.NumTicks;
			}
		}

		// Token: 0x17000378 RID: 888
		// (get) Token: 0x06000E4D RID: 3661 RVA: 0x00042982 File Offset: 0x00040B82
		public static CampaignTime DeltaTime
		{
			get
			{
				return new CampaignTime(Campaign.Current.MapTimeTracker.DeltaTimeInTicks);
			}
		}

		// Token: 0x17000379 RID: 889
		// (get) Token: 0x06000E4E RID: 3662 RVA: 0x00042998 File Offset: 0x00040B98
		private static long DeltaTimeInTicks
		{
			get
			{
				return Campaign.Current.MapTimeTracker.DeltaTimeInTicks;
			}
		}

		// Token: 0x1700037A RID: 890
		// (get) Token: 0x06000E4F RID: 3663 RVA: 0x000429A9 File Offset: 0x00040BA9
		public static CampaignTime Now
		{
			get
			{
				return Campaign.Current.MapTimeTracker.Now;
			}
		}

		// Token: 0x1700037B RID: 891
		// (get) Token: 0x06000E50 RID: 3664 RVA: 0x000429BA File Offset: 0x00040BBA
		public static CampaignTime Never
		{
			get
			{
				return new CampaignTime(long.MaxValue);
			}
		}

		// Token: 0x06000E51 RID: 3665 RVA: 0x000429CA File Offset: 0x00040BCA
		public bool Equals(CampaignTime other)
		{
			return this._numTicks == other._numTicks;
		}

		// Token: 0x06000E52 RID: 3666 RVA: 0x000429DA File Offset: 0x00040BDA
		public override bool Equals(object obj)
		{
			return obj != null && obj is CampaignTime && this.Equals((CampaignTime)obj);
		}

		// Token: 0x06000E53 RID: 3667 RVA: 0x000429F8 File Offset: 0x00040BF8
		public override int GetHashCode()
		{
			return this._numTicks.GetHashCode();
		}

		// Token: 0x06000E54 RID: 3668 RVA: 0x00042A13 File Offset: 0x00040C13
		public int CompareTo(CampaignTime other)
		{
			if (this._numTicks == other._numTicks)
			{
				return 0;
			}
			if (this._numTicks > other._numTicks)
			{
				return 1;
			}
			return -1;
		}

		// Token: 0x06000E55 RID: 3669 RVA: 0x00042A36 File Offset: 0x00040C36
		public static bool operator <(CampaignTime x, CampaignTime y)
		{
			return x._numTicks < y._numTicks;
		}

		// Token: 0x06000E56 RID: 3670 RVA: 0x00042A46 File Offset: 0x00040C46
		public static bool operator >(CampaignTime x, CampaignTime y)
		{
			return x._numTicks > y._numTicks;
		}

		// Token: 0x06000E57 RID: 3671 RVA: 0x00042A56 File Offset: 0x00040C56
		public static bool operator ==(CampaignTime x, CampaignTime y)
		{
			return x._numTicks == y._numTicks;
		}

		// Token: 0x06000E58 RID: 3672 RVA: 0x00042A66 File Offset: 0x00040C66
		public static bool operator !=(CampaignTime x, CampaignTime y)
		{
			return !(x == y);
		}

		// Token: 0x06000E59 RID: 3673 RVA: 0x00042A72 File Offset: 0x00040C72
		public static bool operator <=(CampaignTime x, CampaignTime y)
		{
			return x._numTicks <= y._numTicks;
		}

		// Token: 0x06000E5A RID: 3674 RVA: 0x00042A85 File Offset: 0x00040C85
		public static bool operator >=(CampaignTime x, CampaignTime y)
		{
			return x._numTicks >= y._numTicks;
		}

		// Token: 0x1700037C RID: 892
		// (get) Token: 0x06000E5B RID: 3675 RVA: 0x00042A98 File Offset: 0x00040C98
		public bool IsFuture
		{
			get
			{
				return CampaignTime.CurrentTicks < this._numTicks;
			}
		}

		// Token: 0x1700037D RID: 893
		// (get) Token: 0x06000E5C RID: 3676 RVA: 0x00042AA7 File Offset: 0x00040CA7
		public bool IsPast
		{
			get
			{
				return CampaignTime.CurrentTicks > this._numTicks;
			}
		}

		// Token: 0x1700037E RID: 894
		// (get) Token: 0x06000E5D RID: 3677 RVA: 0x00042AB6 File Offset: 0x00040CB6
		public bool IsNow
		{
			get
			{
				return CampaignTime.CurrentTicks == this._numTicks;
			}
		}

		// Token: 0x1700037F RID: 895
		// (get) Token: 0x06000E5E RID: 3678 RVA: 0x00042AC8 File Offset: 0x00040CC8
		public bool IsDayTime
		{
			get
			{
				int num = MathF.Floor(this.CurrentHourInDay);
				return num >= 2 && num < 22;
			}
		}

		// Token: 0x17000380 RID: 896
		// (get) Token: 0x06000E5F RID: 3679 RVA: 0x00042AEC File Offset: 0x00040CEC
		public float CurrentHourInDay
		{
			get
			{
				return (float)(this._numTicks % 864000000L / 10000L) / 3600f;
			}
		}

		// Token: 0x17000381 RID: 897
		// (get) Token: 0x06000E60 RID: 3680 RVA: 0x00042B09 File Offset: 0x00040D09
		public bool IsNightTime
		{
			get
			{
				return !this.IsDayTime;
			}
		}

		// Token: 0x17000382 RID: 898
		// (get) Token: 0x06000E61 RID: 3681 RVA: 0x00042B14 File Offset: 0x00040D14
		public float ElapsedMillisecondsUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 10f;
			}
		}

		// Token: 0x17000383 RID: 899
		// (get) Token: 0x06000E62 RID: 3682 RVA: 0x00042B29 File Offset: 0x00040D29
		public float ElapsedSecondsUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 10000f;
			}
		}

		// Token: 0x17000384 RID: 900
		// (get) Token: 0x06000E63 RID: 3683 RVA: 0x00042B3E File Offset: 0x00040D3E
		public float ElapsedHoursUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 36000000f;
			}
		}

		// Token: 0x17000385 RID: 901
		// (get) Token: 0x06000E64 RID: 3684 RVA: 0x00042B53 File Offset: 0x00040D53
		public float ElapsedDaysUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 864000000f;
			}
		}

		// Token: 0x17000386 RID: 902
		// (get) Token: 0x06000E65 RID: 3685 RVA: 0x00042B68 File Offset: 0x00040D68
		public float ElapsedWeeksUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 6.048E+09f;
			}
		}

		// Token: 0x17000387 RID: 903
		// (get) Token: 0x06000E66 RID: 3686 RVA: 0x00042B7D File Offset: 0x00040D7D
		public float ElapsedSeasonsUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 1.8144E+10f;
			}
		}

		// Token: 0x17000388 RID: 904
		// (get) Token: 0x06000E67 RID: 3687 RVA: 0x00042B92 File Offset: 0x00040D92
		public float ElapsedYearsUntilNow
		{
			get
			{
				return (float)(CampaignTime.CurrentTicks - this._numTicks) / 7.2576E+10f;
			}
		}

		// Token: 0x17000389 RID: 905
		// (get) Token: 0x06000E68 RID: 3688 RVA: 0x00042BA7 File Offset: 0x00040DA7
		public float RemainingMillisecondsFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 10f;
			}
		}

		// Token: 0x1700038A RID: 906
		// (get) Token: 0x06000E69 RID: 3689 RVA: 0x00042BBC File Offset: 0x00040DBC
		public float RemainingSecondsFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 10000f;
			}
		}

		// Token: 0x1700038B RID: 907
		// (get) Token: 0x06000E6A RID: 3690 RVA: 0x00042BD1 File Offset: 0x00040DD1
		public float RemainingHoursFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 36000000f;
			}
		}

		// Token: 0x1700038C RID: 908
		// (get) Token: 0x06000E6B RID: 3691 RVA: 0x00042BE6 File Offset: 0x00040DE6
		public float RemainingDaysFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 864000000f;
			}
		}

		// Token: 0x1700038D RID: 909
		// (get) Token: 0x06000E6C RID: 3692 RVA: 0x00042BFB File Offset: 0x00040DFB
		public float RemainingWeeksFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 6.048E+09f;
			}
		}

		// Token: 0x1700038E RID: 910
		// (get) Token: 0x06000E6D RID: 3693 RVA: 0x00042C10 File Offset: 0x00040E10
		public float RemainingSeasonsFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 1.8144E+10f;
			}
		}

		// Token: 0x1700038F RID: 911
		// (get) Token: 0x06000E6E RID: 3694 RVA: 0x00042C25 File Offset: 0x00040E25
		public float RemainingYearsFromNow
		{
			get
			{
				return (float)(this._numTicks - CampaignTime.CurrentTicks) / 7.2576E+10f;
			}
		}

		// Token: 0x17000390 RID: 912
		// (get) Token: 0x06000E6F RID: 3695 RVA: 0x00042C3A File Offset: 0x00040E3A
		public double ToMilliseconds
		{
			get
			{
				return (double)this._numTicks / 10.0;
			}
		}

		// Token: 0x17000391 RID: 913
		// (get) Token: 0x06000E70 RID: 3696 RVA: 0x00042C4D File Offset: 0x00040E4D
		public double ToSeconds
		{
			get
			{
				return (double)this._numTicks / 10000.0;
			}
		}

		// Token: 0x17000392 RID: 914
		// (get) Token: 0x06000E71 RID: 3697 RVA: 0x00042C60 File Offset: 0x00040E60
		public double ToMinutes
		{
			get
			{
				return (double)this._numTicks / 600000.0;
			}
		}

		// Token: 0x17000393 RID: 915
		// (get) Token: 0x06000E72 RID: 3698 RVA: 0x00042C73 File Offset: 0x00040E73
		public double ToHours
		{
			get
			{
				return (double)this._numTicks / 36000000.0;
			}
		}

		// Token: 0x17000394 RID: 916
		// (get) Token: 0x06000E73 RID: 3699 RVA: 0x00042C86 File Offset: 0x00040E86
		public double ToDays
		{
			get
			{
				return (double)this._numTicks / 864000000.0;
			}
		}

		// Token: 0x17000395 RID: 917
		// (get) Token: 0x06000E74 RID: 3700 RVA: 0x00042C99 File Offset: 0x00040E99
		public double ToWeeks
		{
			get
			{
				return (double)this._numTicks / 6048000000.0;
			}
		}

		// Token: 0x17000396 RID: 918
		// (get) Token: 0x06000E75 RID: 3701 RVA: 0x00042CAC File Offset: 0x00040EAC
		public double ToSeasons
		{
			get
			{
				return (double)this._numTicks / 18144000000.0;
			}
		}

		// Token: 0x17000397 RID: 919
		// (get) Token: 0x06000E76 RID: 3702 RVA: 0x00042CBF File Offset: 0x00040EBF
		public double ToYears
		{
			get
			{
				return (double)this._numTicks / 72576000000.0;
			}
		}

		// Token: 0x17000398 RID: 920
		// (get) Token: 0x06000E77 RID: 3703 RVA: 0x00042CD2 File Offset: 0x00040ED2
		public int GetHourOfDay
		{
			get
			{
				return (int)(this._numTicks / 36000000L % 24L);
			}
		}

		// Token: 0x17000399 RID: 921
		// (get) Token: 0x06000E78 RID: 3704 RVA: 0x00042CE6 File Offset: 0x00040EE6
		public int GetDayOfWeek
		{
			get
			{
				return (int)(this._numTicks / 864000000L % 7L);
			}
		}

		// Token: 0x1700039A RID: 922
		// (get) Token: 0x06000E79 RID: 3705 RVA: 0x00042CF9 File Offset: 0x00040EF9
		public int GetDayOfSeason
		{
			get
			{
				return (int)(this._numTicks / 864000000L % 21L);
			}
		}

		// Token: 0x1700039B RID: 923
		// (get) Token: 0x06000E7A RID: 3706 RVA: 0x00042D0D File Offset: 0x00040F0D
		public int GetDayOfYear
		{
			get
			{
				return (int)(this._numTicks / 864000000L % 84L);
			}
		}

		// Token: 0x1700039C RID: 924
		// (get) Token: 0x06000E7B RID: 3707 RVA: 0x00042D21 File Offset: 0x00040F21
		public int GetWeekOfSeason
		{
			get
			{
				return (int)(this._numTicks / 6048000000L % 3L);
			}
		}

		// Token: 0x1700039D RID: 925
		// (get) Token: 0x06000E7C RID: 3708 RVA: 0x00042D37 File Offset: 0x00040F37
		public int GetSeasonOfYear
		{
			get
			{
				return (int)(this._numTicks / 18144000000L % 4L);
			}
		}

		// Token: 0x1700039E RID: 926
		// (get) Token: 0x06000E7D RID: 3709 RVA: 0x00042D4D File Offset: 0x00040F4D
		public int GetYear
		{
			get
			{
				return (int)(this._numTicks / 72576000000L);
			}
		}

		// Token: 0x06000E7E RID: 3710 RVA: 0x00042D60 File Offset: 0x00040F60
		public static CampaignTime Milliseconds(long valueInMilliseconds)
		{
			return new CampaignTime(valueInMilliseconds * 10L);
		}

		// Token: 0x06000E7F RID: 3711 RVA: 0x00042D6C File Offset: 0x00040F6C
		public static CampaignTime MillisecondsFromNow(long valueInMilliseconds)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + valueInMilliseconds * 10L);
		}

		// Token: 0x06000E80 RID: 3712 RVA: 0x00042D7E File Offset: 0x00040F7E
		public static CampaignTime Seconds(long valueInSeconds)
		{
			return new CampaignTime(valueInSeconds * 10000L);
		}

		// Token: 0x06000E81 RID: 3713 RVA: 0x00042D8D File Offset: 0x00040F8D
		public static CampaignTime SecondsFromNow(long valueInSeconds)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + valueInSeconds * 10000L);
		}

		// Token: 0x06000E82 RID: 3714 RVA: 0x00042DA2 File Offset: 0x00040FA2
		public static CampaignTime Minutes(long valueInMinutes)
		{
			return new CampaignTime(valueInMinutes * 600000L);
		}

		// Token: 0x06000E83 RID: 3715 RVA: 0x00042DB1 File Offset: 0x00040FB1
		public static CampaignTime MinutesFromNow(long valueInMinutes)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + valueInMinutes * 600000L);
		}

		// Token: 0x06000E84 RID: 3716 RVA: 0x00042DC6 File Offset: 0x00040FC6
		public static CampaignTime Hours(float valueInHours)
		{
			return new CampaignTime((long)(valueInHours * 36000000f));
		}

		// Token: 0x06000E85 RID: 3717 RVA: 0x00042DD5 File Offset: 0x00040FD5
		public static CampaignTime HoursFromNow(float valueInHours)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + (long)(valueInHours * 36000000f));
		}

		// Token: 0x06000E86 RID: 3718 RVA: 0x00042DEA File Offset: 0x00040FEA
		public static CampaignTime Days(float valueInDays)
		{
			return new CampaignTime((long)(valueInDays * 864000000f));
		}

		// Token: 0x06000E87 RID: 3719 RVA: 0x00042DF9 File Offset: 0x00040FF9
		public static CampaignTime DaysFromNow(float valueInDays)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + (long)(valueInDays * 864000000f));
		}

		// Token: 0x06000E88 RID: 3720 RVA: 0x00042E0E File Offset: 0x0004100E
		public static CampaignTime Weeks(float valueInWeeeks)
		{
			return new CampaignTime((long)(valueInWeeeks * 6.048E+09f));
		}

		// Token: 0x06000E89 RID: 3721 RVA: 0x00042E1D File Offset: 0x0004101D
		public static CampaignTime WeeksFromNow(float valueInWeeks)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + (long)(valueInWeeks * 6.048E+09f));
		}

		// Token: 0x06000E8A RID: 3722 RVA: 0x00042E32 File Offset: 0x00041032
		public static CampaignTime Seasons(float valueInSeasons)
		{
			return new CampaignTime((long)(valueInSeasons * 1.8144E+10f));
		}

		// Token: 0x06000E8B RID: 3723 RVA: 0x00042E41 File Offset: 0x00041041
		public static CampaignTime Years(float valueInYears)
		{
			return new CampaignTime((long)(valueInYears * 7.2576E+10f));
		}

		// Token: 0x06000E8C RID: 3724 RVA: 0x00042E50 File Offset: 0x00041050
		public static CampaignTime YearsFromNow(float valueInYears)
		{
			return new CampaignTime(CampaignTime.CurrentTicks + (long)(valueInYears * 7.2576E+10f));
		}

		// Token: 0x1700039F RID: 927
		// (get) Token: 0x06000E8D RID: 3725 RVA: 0x00042E65 File Offset: 0x00041065
		public static CampaignTime Zero
		{
			get
			{
				return new CampaignTime(0L);
			}
		}

		// Token: 0x06000E8E RID: 3726 RVA: 0x00042E6E File Offset: 0x0004106E
		public static CampaignTime operator +(CampaignTime g1, CampaignTime g2)
		{
			return new CampaignTime(g1._numTicks + g2._numTicks);
		}

		// Token: 0x06000E8F RID: 3727 RVA: 0x00042E82 File Offset: 0x00041082
		public static CampaignTime operator -(CampaignTime g1, CampaignTime g2)
		{
			return new CampaignTime(g1._numTicks - g2._numTicks);
		}

		// Token: 0x06000E90 RID: 3728 RVA: 0x00042E96 File Offset: 0x00041096
		public bool StringSameAs(CampaignTime otherTime)
		{
			return this._numTicks / 864000000L == otherTime.NumTicks / 864000000L;
		}

		// Token: 0x06000E91 RID: 3729 RVA: 0x00042EB8 File Offset: 0x000410B8
		public override string ToString()
		{
			int getYear = this.GetYear;
			int getSeasonOfYear = this.GetSeasonOfYear;
			int num = this.GetDayOfSeason + 1;
			TextObject textObject = GameTexts.FindText("str_date_format", null);
			textObject.SetTextVariable("SEASON", GameTexts.FindText("str_season_" + getSeasonOfYear, null));
			textObject.SetTextVariable("YEAR", getYear.ToString());
			textObject.SetTextVariable("DAY", num.ToString());
			return textObject.ToString();
		}

		// Token: 0x0400042B RID: 1067
		public const int SunRise = 2;

		// Token: 0x0400042C RID: 1068
		public const int SunSet = 22;

		// Token: 0x0400042D RID: 1069
		public const int MinutesInHour = 60;

		// Token: 0x0400042E RID: 1070
		public const int HoursInDay = 24;

		// Token: 0x0400042F RID: 1071
		public const int DaysInWeek = 7;

		// Token: 0x04000430 RID: 1072
		public const int WeeksInSeason = 3;

		// Token: 0x04000431 RID: 1073
		public const int SeasonsInYear = 4;

		// Token: 0x04000432 RID: 1074
		public const int DaysInSeason = 21;

		// Token: 0x04000433 RID: 1075
		public const int DaysInYear = 84;

		// Token: 0x04000434 RID: 1076
		internal const long TimeTicksPerMillisecond = 10L;

		// Token: 0x04000435 RID: 1077
		internal const long TimeTicksPerSecond = 10000L;

		// Token: 0x04000436 RID: 1078
		internal const long TimeTicksPerMinute = 600000L;

		// Token: 0x04000437 RID: 1079
		internal const long TimeTicksPerHour = 36000000L;

		// Token: 0x04000438 RID: 1080
		internal const long TimeTicksPerDay = 864000000L;

		// Token: 0x04000439 RID: 1081
		internal const long TimeTicksPerWeek = 6048000000L;

		// Token: 0x0400043A RID: 1082
		internal const long TimeTicksPerSeason = 18144000000L;

		// Token: 0x0400043B RID: 1083
		internal const long TimeTicksPerYear = 72576000000L;

		// Token: 0x0400043C RID: 1084
		[SaveableField(2)]
		private readonly long _numTicks;
	}
}
