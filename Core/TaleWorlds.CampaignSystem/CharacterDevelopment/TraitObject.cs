using System;
using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;

namespace TaleWorlds.CampaignSystem.CharacterDevelopment
{
	public sealed class TraitObject : PropertyObject
	{
		internal static void AutoGeneratedStaticCollectObjectsTraitObject(object o, List<object> collectedObjects)
		{
			((TraitObject)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		public static MBReadOnlyList<TraitObject> All
		{
			get
			{
				return Campaign.Current.AllTraits;
			}
		}

		public int MinValue { get; private set; }

		public int MaxValue { get; private set; }

		public bool IsHidden { get; private set; }

		public TraitObject(string stringId)
			: base(stringId)
		{
		}

		public void Initialize(TextObject name, TextObject description, bool isHidden, int minValue, int maxValue)
		{
			base.Initialize(name, description);
			this.MinValue = minValue;
			this.MaxValue = maxValue;
			this.IsHidden = isHidden;
			base.AfterInitialized();
		}
	}
}
