using System;
using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;

namespace TaleWorlds.CampaignSystem.CharacterDevelopment
{
	// Token: 0x0200034C RID: 844
	public sealed class PerkObject : PropertyObject
	{
		// Token: 0x06002F21 RID: 12065 RVA: 0x000C19D1 File Offset: 0x000BFBD1
		internal static void AutoGeneratedStaticCollectObjectsPerkObject(object o, List<object> collectedObjects)
		{
			((PerkObject)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002F22 RID: 12066 RVA: 0x000C19DF File Offset: 0x000BFBDF
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x17000B2D RID: 2861
		// (get) Token: 0x06002F23 RID: 12067 RVA: 0x000C19E8 File Offset: 0x000BFBE8
		public static MBReadOnlyList<PerkObject> All
		{
			get
			{
				return Campaign.Current.AllPerks;
			}
		}

		// Token: 0x17000B2E RID: 2862
		// (get) Token: 0x06002F24 RID: 12068 RVA: 0x000C19F4 File Offset: 0x000BFBF4
		// (set) Token: 0x06002F25 RID: 12069 RVA: 0x000C19FC File Offset: 0x000BFBFC
		public SkillObject Skill { get; private set; }

		// Token: 0x17000B2F RID: 2863
		// (get) Token: 0x06002F26 RID: 12070 RVA: 0x000C1A05 File Offset: 0x000BFC05
		// (set) Token: 0x06002F27 RID: 12071 RVA: 0x000C1A0D File Offset: 0x000BFC0D
		public float RequiredSkillValue { get; private set; }

		// Token: 0x17000B30 RID: 2864
		// (get) Token: 0x06002F28 RID: 12072 RVA: 0x000C1A16 File Offset: 0x000BFC16
		// (set) Token: 0x06002F29 RID: 12073 RVA: 0x000C1A1E File Offset: 0x000BFC1E
		public PerkObject AlternativePerk { get; private set; }

		// Token: 0x17000B31 RID: 2865
		// (get) Token: 0x06002F2A RID: 12074 RVA: 0x000C1A27 File Offset: 0x000BFC27
		// (set) Token: 0x06002F2B RID: 12075 RVA: 0x000C1A2F File Offset: 0x000BFC2F
		public SkillEffect.PerkRole PrimaryRole { get; private set; }

		// Token: 0x17000B32 RID: 2866
		// (get) Token: 0x06002F2C RID: 12076 RVA: 0x000C1A38 File Offset: 0x000BFC38
		// (set) Token: 0x06002F2D RID: 12077 RVA: 0x000C1A40 File Offset: 0x000BFC40
		public SkillEffect.PerkRole SecondaryRole { get; private set; }

		// Token: 0x17000B33 RID: 2867
		// (get) Token: 0x06002F2E RID: 12078 RVA: 0x000C1A49 File Offset: 0x000BFC49
		// (set) Token: 0x06002F2F RID: 12079 RVA: 0x000C1A51 File Offset: 0x000BFC51
		public float PrimaryBonus { get; private set; }

		// Token: 0x17000B34 RID: 2868
		// (get) Token: 0x06002F30 RID: 12080 RVA: 0x000C1A5A File Offset: 0x000BFC5A
		// (set) Token: 0x06002F31 RID: 12081 RVA: 0x000C1A62 File Offset: 0x000BFC62
		public float SecondaryBonus { get; private set; }

		// Token: 0x17000B35 RID: 2869
		// (get) Token: 0x06002F32 RID: 12082 RVA: 0x000C1A6B File Offset: 0x000BFC6B
		// (set) Token: 0x06002F33 RID: 12083 RVA: 0x000C1A73 File Offset: 0x000BFC73
		public SkillEffect.EffectIncrementType PrimaryIncrementType { get; private set; }

		// Token: 0x17000B36 RID: 2870
		// (get) Token: 0x06002F34 RID: 12084 RVA: 0x000C1A7C File Offset: 0x000BFC7C
		// (set) Token: 0x06002F35 RID: 12085 RVA: 0x000C1A84 File Offset: 0x000BFC84
		public SkillEffect.EffectIncrementType SecondaryIncrementType { get; private set; }

		// Token: 0x17000B37 RID: 2871
		// (get) Token: 0x06002F36 RID: 12086 RVA: 0x000C1A8D File Offset: 0x000BFC8D
		// (set) Token: 0x06002F37 RID: 12087 RVA: 0x000C1A95 File Offset: 0x000BFC95
		public TroopClassFlag PrimaryTroopClassMask { get; private set; }

		// Token: 0x17000B38 RID: 2872
		// (get) Token: 0x06002F38 RID: 12088 RVA: 0x000C1A9E File Offset: 0x000BFC9E
		// (set) Token: 0x06002F39 RID: 12089 RVA: 0x000C1AA6 File Offset: 0x000BFCA6
		public TroopClassFlag SecondaryTroopClassMask { get; private set; }

		// Token: 0x17000B39 RID: 2873
		// (get) Token: 0x06002F3A RID: 12090 RVA: 0x000C1AAF File Offset: 0x000BFCAF
		// (set) Token: 0x06002F3B RID: 12091 RVA: 0x000C1AB7 File Offset: 0x000BFCB7
		public TextObject PrimaryDescription { get; private set; }

		// Token: 0x17000B3A RID: 2874
		// (get) Token: 0x06002F3C RID: 12092 RVA: 0x000C1AC0 File Offset: 0x000BFCC0
		// (set) Token: 0x06002F3D RID: 12093 RVA: 0x000C1AC8 File Offset: 0x000BFCC8
		public TextObject SecondaryDescription { get; private set; }

		// Token: 0x17000B3B RID: 2875
		// (get) Token: 0x06002F3E RID: 12094 RVA: 0x000C1AD1 File Offset: 0x000BFCD1
		public bool IsTrash
		{
			get
			{
				return base.Name == null || base.Description == null || this.Skill == null;
			}
		}

		// Token: 0x06002F3F RID: 12095 RVA: 0x000C1AEE File Offset: 0x000BFCEE
		public PerkObject(string stringId)
			: base(stringId)
		{
		}

		// Token: 0x06002F40 RID: 12096 RVA: 0x000C1AF8 File Offset: 0x000BFCF8
		public void Initialize(string name, SkillObject skill, int requiredSkillValue, PerkObject alternativePerk, string primaryDescription, SkillEffect.PerkRole primaryRole, float primaryBonus, SkillEffect.EffectIncrementType incrementType, string secondaryDescription = "", SkillEffect.PerkRole secondaryRole = SkillEffect.PerkRole.None, float secondaryBonus = 0f, SkillEffect.EffectIncrementType secondaryIncrementType = SkillEffect.EffectIncrementType.Invalid, TroopClassFlag primaryTroopClassMask = TroopClassFlag.None, TroopClassFlag secondaryTroopClassMask = TroopClassFlag.None)
		{
			this.PrimaryDescription = new TextObject(primaryDescription, null);
			this.SecondaryDescription = new TextObject(secondaryDescription, null);
			this.SetDescriptionTextVariable(this.PrimaryDescription, primaryBonus, incrementType);
			TextObject textObject;
			if (secondaryDescription != "")
			{
				this.SetDescriptionTextVariable(this.SecondaryDescription, secondaryBonus, secondaryIncrementType);
				textObject = GameTexts.FindText("str_string_newline_newline_string", null);
				textObject.SetTextVariable("STR1", this.PrimaryDescription);
				textObject.SetTextVariable("STR2", this.SecondaryDescription);
			}
			else
			{
				textObject = this.PrimaryDescription.CopyTextObject();
			}
			textObject.SetTextVariable("newline", "\n");
			base.Initialize(new TextObject(name, null), textObject);
			this.Skill = skill;
			this.RequiredSkillValue = (float)requiredSkillValue;
			this.AlternativePerk = alternativePerk;
			if (alternativePerk != null)
			{
				alternativePerk.AlternativePerk = this;
			}
			this.PrimaryRole = primaryRole;
			this.SecondaryRole = secondaryRole;
			this.PrimaryBonus = primaryBonus;
			this.SecondaryBonus = secondaryBonus;
			this.PrimaryIncrementType = incrementType;
			this.SecondaryIncrementType = ((secondaryIncrementType == SkillEffect.EffectIncrementType.Invalid) ? this.PrimaryIncrementType : secondaryIncrementType);
			this.PrimaryTroopClassMask = primaryTroopClassMask;
			this.SecondaryTroopClassMask = secondaryTroopClassMask;
			base.AfterInitialized();
		}

		// Token: 0x06002F41 RID: 12097 RVA: 0x000C1C22 File Offset: 0x000BFE22
		public override string ToString()
		{
			return base.Name.ToString();
		}

		// Token: 0x06002F42 RID: 12098 RVA: 0x000C1C30 File Offset: 0x000BFE30
		private void SetDescriptionTextVariable(TextObject description, float bonus, SkillEffect.EffectIncrementType effectIncrementType)
		{
			float num = ((effectIncrementType == SkillEffect.EffectIncrementType.AddFactor) ? (bonus * 100f) : bonus);
			if (bonus > 0f)
			{
				description.SetTextVariable("VALUE", "+" + num);
				return;
			}
			description.SetTextVariable("VALUE", string.Concat(num));
		}
	}
}
