using System;
using System.Collections.Generic;
using System.Linq;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem
{
	// Token: 0x02000066 RID: 102
	public class Romance
	{
		// Token: 0x06000DA8 RID: 3496 RVA: 0x00041A92 File Offset: 0x0003FC92
		internal static void AutoGeneratedStaticCollectObjectsRomance(object o, List<object> collectedObjects)
		{
			((Romance)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06000DA9 RID: 3497 RVA: 0x00041AA0 File Offset: 0x0003FCA0
		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this._romanticStateList);
		}

		// Token: 0x06000DAA RID: 3498 RVA: 0x00041AAE File Offset: 0x0003FCAE
		internal static object AutoGeneratedGetMemberValue_romanticStateList(object o)
		{
			return ((Romance)o)._romanticStateList;
		}

		// Token: 0x17000352 RID: 850
		// (get) Token: 0x06000DAB RID: 3499 RVA: 0x00041ABB File Offset: 0x0003FCBB
		public static List<Romance.RomanticState> RomanticStateList
		{
			get
			{
				return Campaign.Current.Romance._romanticStateList;
			}
		}

		// Token: 0x06000DAC RID: 3500 RVA: 0x00041ACC File Offset: 0x0003FCCC
		public Romance()
		{
			this._romanticStateList = new List<Romance.RomanticState>();
		}

		// Token: 0x06000DAD RID: 3501 RVA: 0x00041AE0 File Offset: 0x0003FCE0
		public static Hero GetCourtedHeroInOtherClan(Hero person1, Hero person2)
		{
			foreach (Hero hero in person2.Clan.Lords.Where((Hero x) => x != person2))
			{
				if (Romance.GetRomanticLevel(person1, hero) >= Romance.RomanceLevelEnum.MatchMadeByFamily)
				{
					return person2;
				}
			}
			return null;
		}

		// Token: 0x06000DAE RID: 3502 RVA: 0x00041B64 File Offset: 0x0003FD64
		public static Romance.RomanceLevelEnum GetRomanticLevel(Hero person1, Hero person2)
		{
			Romance.RomanticState romanticState = Romance.GetRomanticState(person1, person2);
			if (romanticState == null)
			{
				return Romance.RomanceLevelEnum.Untested;
			}
			return romanticState.Level;
		}

		// Token: 0x06000DAF RID: 3503 RVA: 0x00041B84 File Offset: 0x0003FD84
		public static Romance.RomanticState GetRomanticState(Hero person1, Hero person2)
		{
			if (Romance.RomanticStateList == null)
			{
				return null;
			}
			foreach (Romance.RomanticState romanticState in Romance.RomanticStateList)
			{
				if (romanticState != null && ((romanticState.Person1 == person1 && romanticState.Person2 == person2) || (romanticState.Person1 == person2 && romanticState.Person2 == person1)))
				{
					return romanticState;
				}
			}
			return null;
		}

		// Token: 0x06000DB0 RID: 3504 RVA: 0x00041C08 File Offset: 0x0003FE08
		internal static void EndAllCourtships(Hero forHero)
		{
			foreach (Romance.RomanticState romanticState in Romance.RomanticStateList)
			{
				if (romanticState.Person1 == forHero || romanticState.Person2 == forHero)
				{
					romanticState.Level = Romance.RomanceLevelEnum.Ended;
				}
			}
		}

		// Token: 0x06000DB1 RID: 3505 RVA: 0x00041C70 File Offset: 0x0003FE70
		internal static void SetRomanticState(Hero person1, Hero person2, Romance.RomanceLevelEnum romanceLevelEnum)
		{
			Romance.RomanticState romanticState = Romance.GetRomanticState(person1, person2);
			if (romanticState != null)
			{
				romanticState.Level = romanceLevelEnum;
				return;
			}
			Romance.RomanticState romanticState2 = new Romance.RomanticState();
			romanticState2.Person1 = person1;
			romanticState2.Person2 = person2;
			romanticState2.Level = romanceLevelEnum;
			romanticState2.ProgressToNextLevel = 0;
			Romance.RomanticStateList.Add(romanticState2);
		}

		// Token: 0x040003FD RID: 1021
		[SaveableField(7)]
		private readonly List<Romance.RomanticState> _romanticStateList;

		// Token: 0x020004BA RID: 1210
		public class RomanticState
		{
			// Token: 0x06004124 RID: 16676 RVA: 0x00133107 File Offset: 0x00131307
			internal static void AutoGeneratedStaticCollectObjectsRomanticState(object o, List<object> collectedObjects)
			{
				((Romance.RomanticState)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
			}

			// Token: 0x06004125 RID: 16677 RVA: 0x00133115 File Offset: 0x00131315
			protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
			{
				collectedObjects.Add(this.Person1);
				collectedObjects.Add(this.Person2);
			}

			// Token: 0x06004126 RID: 16678 RVA: 0x0013312F File Offset: 0x0013132F
			internal static object AutoGeneratedGetMemberValuePerson1(object o)
			{
				return ((Romance.RomanticState)o).Person1;
			}

			// Token: 0x06004127 RID: 16679 RVA: 0x0013313C File Offset: 0x0013133C
			internal static object AutoGeneratedGetMemberValuePerson2(object o)
			{
				return ((Romance.RomanticState)o).Person2;
			}

			// Token: 0x06004128 RID: 16680 RVA: 0x00133149 File Offset: 0x00131349
			internal static object AutoGeneratedGetMemberValueLevel(object o)
			{
				return ((Romance.RomanticState)o).Level;
			}

			// Token: 0x06004129 RID: 16681 RVA: 0x0013315B File Offset: 0x0013135B
			internal static object AutoGeneratedGetMemberValueProgressToNextLevel(object o)
			{
				return ((Romance.RomanticState)o).ProgressToNextLevel;
			}

			// Token: 0x0600412A RID: 16682 RVA: 0x0013316D File Offset: 0x0013136D
			internal static object AutoGeneratedGetMemberValueLastVisit(object o)
			{
				return ((Romance.RomanticState)o).LastVisit;
			}

			// Token: 0x0600412B RID: 16683 RVA: 0x0013317F File Offset: 0x0013137F
			internal static object AutoGeneratedGetMemberValueScoreFromPersuasion(object o)
			{
				return ((Romance.RomanticState)o).ScoreFromPersuasion;
			}

			// Token: 0x0600412C RID: 16684 RVA: 0x00133191 File Offset: 0x00131391
			public Hero Partner(Hero hero)
			{
				if (this.Person1 == hero)
				{
					return this.Person2;
				}
				if (this.Person2 == hero)
				{
					return this.Person1;
				}
				return null;
			}

			// Token: 0x04001471 RID: 5233
			[SaveableField(0)]
			public Hero Person1;

			// Token: 0x04001472 RID: 5234
			[SaveableField(1)]
			public Hero Person2;

			// Token: 0x04001473 RID: 5235
			[SaveableField(2)]
			public Romance.RomanceLevelEnum Level;

			// Token: 0x04001474 RID: 5236
			[SaveableField(3)]
			public int ProgressToNextLevel;

			// Token: 0x04001475 RID: 5237
			[SaveableField(5)]
			public float LastVisit;

			// Token: 0x04001476 RID: 5238
			[SaveableField(6)]
			public float ScoreFromPersuasion;
		}

		// Token: 0x020004BB RID: 1211
		public enum RomanceLevelEnum
		{
			// Token: 0x04001478 RID: 5240
			Ended = -2,
			// Token: 0x04001479 RID: 5241
			Rejection,
			// Token: 0x0400147A RID: 5242
			Untested,
			// Token: 0x0400147B RID: 5243
			FailedInCompatibility,
			// Token: 0x0400147C RID: 5244
			FailedInPracticalities,
			// Token: 0x0400147D RID: 5245
			MatchMadeByFamily,
			// Token: 0x0400147E RID: 5246
			CourtshipStarted,
			// Token: 0x0400147F RID: 5247
			CoupleDecidedThatTheyAreCompatible,
			// Token: 0x04001480 RID: 5248
			CoupleAgreedOnMarriage,
			// Token: 0x04001481 RID: 5249
			Marriage
		}
	}
}
