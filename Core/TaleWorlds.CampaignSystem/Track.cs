using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.Map;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem
{
	public sealed class Track : ILocatable<Track>
	{
		internal static void AutoGeneratedStaticCollectObjectsTrack(object o, List<object> collectedObjects)
		{
			((Track)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		private void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this.PartyName);
			collectedObjects.Add(this.Culture);
			CampaignTime.AutoGeneratedStaticCollectObjectsCampaignTime(this.CreationTime, collectedObjects);
			collectedObjects.Add(this._nextLocatable);
		}

		internal static object AutoGeneratedGetMemberValueIsDetected(object o)
		{
			return ((Track)o).IsDetected;
		}

		internal static object AutoGeneratedGetMemberValueIsPointer(object o)
		{
			return ((Track)o).IsPointer;
		}

		internal static object AutoGeneratedGetMemberValueIsEnemy(object o)
		{
			return ((Track)o).IsEnemy;
		}

		internal static object AutoGeneratedGetMemberValuePosition(object o)
		{
			return ((Track)o).Position;
		}

		internal static object AutoGeneratedGetMemberValueDirection(object o)
		{
			return ((Track)o).Direction;
		}

		internal static object AutoGeneratedGetMemberValuePartyName(object o)
		{
			return ((Track)o).PartyName;
		}

		internal static object AutoGeneratedGetMemberValueCulture(object o)
		{
			return ((Track)o).Culture;
		}

		internal static object AutoGeneratedGetMemberValueSpeed(object o)
		{
			return ((Track)o).Speed;
		}

		internal static object AutoGeneratedGetMemberValueNumberOfAllMembers(object o)
		{
			return ((Track)o).NumberOfAllMembers;
		}

		internal static object AutoGeneratedGetMemberValueNumberOfHealthyMembers(object o)
		{
			return ((Track)o).NumberOfHealthyMembers;
		}

		internal static object AutoGeneratedGetMemberValueNumberOfMenWithHorse(object o)
		{
			return ((Track)o).NumberOfMenWithHorse;
		}

		internal static object AutoGeneratedGetMemberValueNumberOfMenWithoutHorse(object o)
		{
			return ((Track)o).NumberOfMenWithoutHorse;
		}

		internal static object AutoGeneratedGetMemberValueNumberOfPackAnimals(object o)
		{
			return ((Track)o).NumberOfPackAnimals;
		}

		internal static object AutoGeneratedGetMemberValueNumberOfPrisoners(object o)
		{
			return ((Track)o).NumberOfPrisoners;
		}

		internal static object AutoGeneratedGetMemberValueCreationTime(object o)
		{
			return ((Track)o).CreationTime;
		}

		internal static object AutoGeneratedGetMemberValueLife(object o)
		{
			return ((Track)o).Life;
		}

		internal static object AutoGeneratedGetMemberValuePartyType(object o)
		{
			return ((Track)o).PartyType;
		}

		internal static object AutoGeneratedGetMemberValue_nextLocatable(object o)
		{
			return ((Track)o)._nextLocatable;
		}

		public Vec2 GetPosition2D
		{
			get
			{
				return this.Position;
			}
		}

		int ILocatable<Track>.LocatorNodeIndex
		{
			get
			{
				return this._locatorNodeIndex;
			}
			set
			{
				this._locatorNodeIndex = value;
			}
		}

		Track ILocatable<Track>.NextLocatable
		{
			get
			{
				return this._nextLocatable;
			}
			set
			{
				this._nextLocatable = value;
			}
		}

		public static Track.PartyTypeEnum GetPartyTypeEnum(MobileParty party)
		{
			if (party.IsBandit)
			{
				return Track.PartyTypeEnum.Bandit;
			}
			if (party.IsVillager)
			{
				return Track.PartyTypeEnum.Villager;
			}
			if (party.IsCaravan)
			{
				return Track.PartyTypeEnum.Caravan;
			}
			if (party.IsLordParty)
			{
				return Track.PartyTypeEnum.Lord;
			}
			return Track.PartyTypeEnum.Default;
		}

		public int Size
		{
			get
			{
				return this.NumberOfAllMembers + this.NumberOfPrisoners;
			}
		}

		[SaveableProperty(110)]
		public bool IsDetected { get; set; }

		[SaveableProperty(120)]
		public bool IsPointer { get; set; }

		[SaveableProperty(130)]
		public bool IsEnemy { get; set; }

		public bool IsExpired
		{
			get
			{
				return this.CreationTime.ElapsedHoursUntilNow > this.Life;
			}
		}

		public bool IsAlive
		{
			get
			{
				return !this.IsExpired;
			}
		}

		public float Scale
		{
			get
			{
				return Campaign.Current.Models.MapTrackModel.GetTrackScale(this);
			}
		}

		public Track()
		{
			this.Reset();
		}

		public void Reset()
		{
			this.PartyName = TextObject.Empty;
			this.Culture = null;
			this._locatorNodeIndex = -1;
			this._nextLocatable = null;
		}

		[LoadInitializationCallback]
		private void OnLoad()
		{
			this._locatorNodeIndex = -1;
		}

		[CachedData]
		private int _locatorNodeIndex;

		[SaveableField(117)]
		private Track _nextLocatable;

		[SaveableField(0)]
		public Vec2 Position;

		[SaveableField(1)]
		public float Direction;

		[SaveableField(10)]
		public TextObject PartyName;

		[SaveableField(20)]
		public CultureObject Culture;

		[SaveableField(30)]
		public float Speed;

		[SaveableField(40)]
		public int NumberOfAllMembers;

		[SaveableField(50)]
		public int NumberOfHealthyMembers;

		[SaveableField(60)]
		public int NumberOfMenWithHorse;

		[SaveableField(70)]
		public int NumberOfMenWithoutHorse;

		[SaveableField(80)]
		public int NumberOfPackAnimals;

		[SaveableField(90)]
		public int NumberOfPrisoners;

		[SaveableField(100)]
		public CampaignTime CreationTime;

		[SaveableField(140)]
		public float Life;

		[SaveableField(150)]
		public Track.PartyTypeEnum PartyType;

		public enum PartyTypeEnum
		{
			Default,
			Lord,
			Bandit,
			Villager,
			GarrisonParty,
			PartyTypesCount,
			Caravan
		}
	}
}
