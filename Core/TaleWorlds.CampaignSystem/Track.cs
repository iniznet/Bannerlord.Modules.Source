using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.Map;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem
{
	// Token: 0x02000067 RID: 103
	public sealed class Track : ILocatable<Track>
	{
		// Token: 0x06000DB2 RID: 3506 RVA: 0x00041CBD File Offset: 0x0003FEBD
		internal static void AutoGeneratedStaticCollectObjectsTrack(object o, List<object> collectedObjects)
		{
			((Track)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06000DB3 RID: 3507 RVA: 0x00041CCB File Offset: 0x0003FECB
		private void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this.PartyName);
			collectedObjects.Add(this.Culture);
			CampaignTime.AutoGeneratedStaticCollectObjectsCampaignTime(this.CreationTime, collectedObjects);
			collectedObjects.Add(this._nextLocatable);
		}

		// Token: 0x06000DB4 RID: 3508 RVA: 0x00041D02 File Offset: 0x0003FF02
		internal static object AutoGeneratedGetMemberValueIsDetected(object o)
		{
			return ((Track)o).IsDetected;
		}

		// Token: 0x06000DB5 RID: 3509 RVA: 0x00041D14 File Offset: 0x0003FF14
		internal static object AutoGeneratedGetMemberValueIsPointer(object o)
		{
			return ((Track)o).IsPointer;
		}

		// Token: 0x06000DB6 RID: 3510 RVA: 0x00041D26 File Offset: 0x0003FF26
		internal static object AutoGeneratedGetMemberValueIsEnemy(object o)
		{
			return ((Track)o).IsEnemy;
		}

		// Token: 0x06000DB7 RID: 3511 RVA: 0x00041D38 File Offset: 0x0003FF38
		internal static object AutoGeneratedGetMemberValuePosition(object o)
		{
			return ((Track)o).Position;
		}

		// Token: 0x06000DB8 RID: 3512 RVA: 0x00041D4A File Offset: 0x0003FF4A
		internal static object AutoGeneratedGetMemberValueDirection(object o)
		{
			return ((Track)o).Direction;
		}

		// Token: 0x06000DB9 RID: 3513 RVA: 0x00041D5C File Offset: 0x0003FF5C
		internal static object AutoGeneratedGetMemberValuePartyName(object o)
		{
			return ((Track)o).PartyName;
		}

		// Token: 0x06000DBA RID: 3514 RVA: 0x00041D69 File Offset: 0x0003FF69
		internal static object AutoGeneratedGetMemberValueCulture(object o)
		{
			return ((Track)o).Culture;
		}

		// Token: 0x06000DBB RID: 3515 RVA: 0x00041D76 File Offset: 0x0003FF76
		internal static object AutoGeneratedGetMemberValueSpeed(object o)
		{
			return ((Track)o).Speed;
		}

		// Token: 0x06000DBC RID: 3516 RVA: 0x00041D88 File Offset: 0x0003FF88
		internal static object AutoGeneratedGetMemberValueNumberOfAllMembers(object o)
		{
			return ((Track)o).NumberOfAllMembers;
		}

		// Token: 0x06000DBD RID: 3517 RVA: 0x00041D9A File Offset: 0x0003FF9A
		internal static object AutoGeneratedGetMemberValueNumberOfHealthyMembers(object o)
		{
			return ((Track)o).NumberOfHealthyMembers;
		}

		// Token: 0x06000DBE RID: 3518 RVA: 0x00041DAC File Offset: 0x0003FFAC
		internal static object AutoGeneratedGetMemberValueNumberOfMenWithHorse(object o)
		{
			return ((Track)o).NumberOfMenWithHorse;
		}

		// Token: 0x06000DBF RID: 3519 RVA: 0x00041DBE File Offset: 0x0003FFBE
		internal static object AutoGeneratedGetMemberValueNumberOfMenWithoutHorse(object o)
		{
			return ((Track)o).NumberOfMenWithoutHorse;
		}

		// Token: 0x06000DC0 RID: 3520 RVA: 0x00041DD0 File Offset: 0x0003FFD0
		internal static object AutoGeneratedGetMemberValueNumberOfPackAnimals(object o)
		{
			return ((Track)o).NumberOfPackAnimals;
		}

		// Token: 0x06000DC1 RID: 3521 RVA: 0x00041DE2 File Offset: 0x0003FFE2
		internal static object AutoGeneratedGetMemberValueNumberOfPrisoners(object o)
		{
			return ((Track)o).NumberOfPrisoners;
		}

		// Token: 0x06000DC2 RID: 3522 RVA: 0x00041DF4 File Offset: 0x0003FFF4
		internal static object AutoGeneratedGetMemberValueCreationTime(object o)
		{
			return ((Track)o).CreationTime;
		}

		// Token: 0x06000DC3 RID: 3523 RVA: 0x00041E06 File Offset: 0x00040006
		internal static object AutoGeneratedGetMemberValueLife(object o)
		{
			return ((Track)o).Life;
		}

		// Token: 0x06000DC4 RID: 3524 RVA: 0x00041E18 File Offset: 0x00040018
		internal static object AutoGeneratedGetMemberValuePartyType(object o)
		{
			return ((Track)o).PartyType;
		}

		// Token: 0x06000DC5 RID: 3525 RVA: 0x00041E2A File Offset: 0x0004002A
		internal static object AutoGeneratedGetMemberValue_nextLocatable(object o)
		{
			return ((Track)o)._nextLocatable;
		}

		// Token: 0x17000353 RID: 851
		// (get) Token: 0x06000DC6 RID: 3526 RVA: 0x00041E37 File Offset: 0x00040037
		public Vec2 GetPosition2D
		{
			get
			{
				return this.Position;
			}
		}

		// Token: 0x17000354 RID: 852
		// (get) Token: 0x06000DC7 RID: 3527 RVA: 0x00041E3F File Offset: 0x0004003F
		// (set) Token: 0x06000DC8 RID: 3528 RVA: 0x00041E47 File Offset: 0x00040047
		int ILocatable<Track>.LocatorNodeIndex
		{
			get
			{
				return this._locatorNodeIndex;
			}
			set
			{
				this._locatorNodeIndex = value;
			}
		}

		// Token: 0x17000355 RID: 853
		// (get) Token: 0x06000DC9 RID: 3529 RVA: 0x00041E50 File Offset: 0x00040050
		// (set) Token: 0x06000DCA RID: 3530 RVA: 0x00041E58 File Offset: 0x00040058
		Track ILocatable<Track>.NextLocatable
		{
			get
			{
				return this._nextLocatable;
			}
			set
			{
				this._nextLocatable = value;
			}
		}

		// Token: 0x06000DCB RID: 3531 RVA: 0x00041E61 File Offset: 0x00040061
		public static Track.PartyTypeEnum GetPartyTypeEnum(MobileParty party)
		{
			if (party.IsBandit)
			{
				return Track.PartyTypeEnum.Bandit;
			}
			if (party.IsVillager)
			{
				return Track.PartyTypeEnum.Villager;
			}
			if (party.IsCaravan)
			{
				return Track.PartyTypeEnum.Caravan;
			}
			if (party.IsLordParty)
			{
				return Track.PartyTypeEnum.Lord;
			}
			return Track.PartyTypeEnum.Default;
		}

		// Token: 0x17000356 RID: 854
		// (get) Token: 0x06000DCC RID: 3532 RVA: 0x00041E8C File Offset: 0x0004008C
		public int Size
		{
			get
			{
				return this.NumberOfAllMembers + this.NumberOfPrisoners;
			}
		}

		// Token: 0x17000357 RID: 855
		// (get) Token: 0x06000DCD RID: 3533 RVA: 0x00041E9B File Offset: 0x0004009B
		// (set) Token: 0x06000DCE RID: 3534 RVA: 0x00041EA3 File Offset: 0x000400A3
		[SaveableProperty(110)]
		public bool IsDetected { get; set; }

		// Token: 0x17000358 RID: 856
		// (get) Token: 0x06000DCF RID: 3535 RVA: 0x00041EAC File Offset: 0x000400AC
		// (set) Token: 0x06000DD0 RID: 3536 RVA: 0x00041EB4 File Offset: 0x000400B4
		[SaveableProperty(120)]
		public bool IsPointer { get; set; }

		// Token: 0x17000359 RID: 857
		// (get) Token: 0x06000DD1 RID: 3537 RVA: 0x00041EBD File Offset: 0x000400BD
		// (set) Token: 0x06000DD2 RID: 3538 RVA: 0x00041EC5 File Offset: 0x000400C5
		[SaveableProperty(130)]
		public bool IsEnemy { get; set; }

		// Token: 0x1700035A RID: 858
		// (get) Token: 0x06000DD3 RID: 3539 RVA: 0x00041ECE File Offset: 0x000400CE
		public bool IsExpired
		{
			get
			{
				return this.CreationTime.ElapsedHoursUntilNow > this.Life;
			}
		}

		// Token: 0x1700035B RID: 859
		// (get) Token: 0x06000DD4 RID: 3540 RVA: 0x00041EE3 File Offset: 0x000400E3
		public bool IsAlive
		{
			get
			{
				return !this.IsExpired;
			}
		}

		// Token: 0x1700035C RID: 860
		// (get) Token: 0x06000DD5 RID: 3541 RVA: 0x00041EEE File Offset: 0x000400EE
		public float Scale
		{
			get
			{
				return Campaign.Current.Models.MapTrackModel.GetTrackScale(this);
			}
		}

		// Token: 0x06000DD6 RID: 3542 RVA: 0x00041F05 File Offset: 0x00040105
		public Track()
		{
			this.Reset();
		}

		// Token: 0x06000DD7 RID: 3543 RVA: 0x00041F13 File Offset: 0x00040113
		public void Reset()
		{
			this.PartyName = TextObject.Empty;
			this.Culture = null;
			this._locatorNodeIndex = -1;
			this._nextLocatable = null;
		}

		// Token: 0x06000DD8 RID: 3544 RVA: 0x00041F35 File Offset: 0x00040135
		[LoadInitializationCallback]
		private void OnLoad()
		{
			this._locatorNodeIndex = -1;
		}

		// Token: 0x040003FE RID: 1022
		[CachedData]
		private int _locatorNodeIndex;

		// Token: 0x040003FF RID: 1023
		[SaveableField(117)]
		private Track _nextLocatable;

		// Token: 0x04000400 RID: 1024
		[SaveableField(0)]
		public Vec2 Position;

		// Token: 0x04000401 RID: 1025
		[SaveableField(1)]
		public float Direction;

		// Token: 0x04000402 RID: 1026
		[SaveableField(10)]
		public TextObject PartyName;

		// Token: 0x04000403 RID: 1027
		[SaveableField(20)]
		public CultureObject Culture;

		// Token: 0x04000404 RID: 1028
		[SaveableField(30)]
		public float Speed;

		// Token: 0x04000405 RID: 1029
		[SaveableField(40)]
		public int NumberOfAllMembers;

		// Token: 0x04000406 RID: 1030
		[SaveableField(50)]
		public int NumberOfHealthyMembers;

		// Token: 0x04000407 RID: 1031
		[SaveableField(60)]
		public int NumberOfMenWithHorse;

		// Token: 0x04000408 RID: 1032
		[SaveableField(70)]
		public int NumberOfMenWithoutHorse;

		// Token: 0x04000409 RID: 1033
		[SaveableField(80)]
		public int NumberOfPackAnimals;

		// Token: 0x0400040A RID: 1034
		[SaveableField(90)]
		public int NumberOfPrisoners;

		// Token: 0x0400040B RID: 1035
		[SaveableField(100)]
		public CampaignTime CreationTime;

		// Token: 0x0400040F RID: 1039
		[SaveableField(140)]
		public float Life;

		// Token: 0x04000410 RID: 1040
		[SaveableField(150)]
		public Track.PartyTypeEnum PartyType;

		// Token: 0x020004BD RID: 1213
		public enum PartyTypeEnum
		{
			// Token: 0x04001484 RID: 5252
			Default,
			// Token: 0x04001485 RID: 5253
			Lord,
			// Token: 0x04001486 RID: 5254
			Bandit,
			// Token: 0x04001487 RID: 5255
			Villager,
			// Token: 0x04001488 RID: 5256
			GarrisonParty,
			// Token: 0x04001489 RID: 5257
			PartyTypesCount,
			// Token: 0x0400148A RID: 5258
			Caravan
		}
	}
}
