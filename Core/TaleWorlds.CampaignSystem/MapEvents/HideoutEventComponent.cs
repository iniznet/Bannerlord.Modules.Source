using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.Core;

namespace TaleWorlds.CampaignSystem.MapEvents
{
	public class HideoutEventComponent : MapEventComponent
	{
		internal static void AutoGeneratedStaticCollectObjectsHideoutEventComponent(object o, List<object> collectedObjects)
		{
			((HideoutEventComponent)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected HideoutEventComponent(MapEvent mapEvent)
			: base(mapEvent)
		{
		}

		public static HideoutEventComponent CreateHideoutEvent(PartyBase attackerParty, PartyBase defenderParty)
		{
			MapEvent mapEvent = new MapEvent();
			HideoutEventComponent hideoutEventComponent = new HideoutEventComponent(mapEvent);
			mapEvent.Initialize(attackerParty, defenderParty, hideoutEventComponent, MapEvent.BattleTypes.Hideout);
			Campaign.Current.MapEventManager.OnMapEventCreated(mapEvent);
			return hideoutEventComponent;
		}

		public static HideoutEventComponent CreateComponentForOldSaves(MapEvent mapEvent)
		{
			return new HideoutEventComponent(mapEvent);
		}

		protected override void OnFinalize()
		{
			BattleSideEnum battleSideEnum = ((base.MapEvent.BattleState == BattleState.AttackerVictory) ? BattleSideEnum.Attacker : BattleSideEnum.Defender);
			CampaignEventDispatcher.Instance.OnHideoutBattleCompleted(battleSideEnum, this);
		}
	}
}
