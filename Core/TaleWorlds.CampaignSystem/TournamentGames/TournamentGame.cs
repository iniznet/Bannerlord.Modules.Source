using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.TournamentGames
{
	// Token: 0x0200027C RID: 636
	public abstract class TournamentGame
	{
		// Token: 0x0600213A RID: 8506 RVA: 0x0008D4FA File Offset: 0x0008B6FA
		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this.Town);
			CampaignTime.AutoGeneratedStaticCollectObjectsCampaignTime(this.CreationTime, collectedObjects);
			collectedObjects.Add(this.Prize);
		}

		// Token: 0x0600213B RID: 8507 RVA: 0x0008D525 File Offset: 0x0008B725
		internal static object AutoGeneratedGetMemberValueTown(object o)
		{
			return ((TournamentGame)o).Town;
		}

		// Token: 0x0600213C RID: 8508 RVA: 0x0008D532 File Offset: 0x0008B732
		internal static object AutoGeneratedGetMemberValueCreationTime(object o)
		{
			return ((TournamentGame)o).CreationTime;
		}

		// Token: 0x0600213D RID: 8509 RVA: 0x0008D544 File Offset: 0x0008B744
		internal static object AutoGeneratedGetMemberValueMode(object o)
		{
			return ((TournamentGame)o).Mode;
		}

		// Token: 0x0600213E RID: 8510 RVA: 0x0008D556 File Offset: 0x0008B756
		internal static object AutoGeneratedGetMemberValuePrize(object o)
		{
			return ((TournamentGame)o).Prize;
		}

		// Token: 0x0600213F RID: 8511 RVA: 0x0008D563 File Offset: 0x0008B763
		internal static object AutoGeneratedGetMemberValue_lastRecordedLordCountForTournamentPrize(object o)
		{
			return ((TournamentGame)o)._lastRecordedLordCountForTournamentPrize;
		}

		// Token: 0x17000848 RID: 2120
		// (get) Token: 0x06002140 RID: 8512 RVA: 0x0008D575 File Offset: 0x0008B775
		// (set) Token: 0x06002141 RID: 8513 RVA: 0x0008D57D File Offset: 0x0008B77D
		[SaveableProperty(10)]
		public Town Town { get; private set; }

		// Token: 0x17000849 RID: 2121
		// (get) Token: 0x06002142 RID: 8514 RVA: 0x0008D586 File Offset: 0x0008B786
		// (set) Token: 0x06002143 RID: 8515 RVA: 0x0008D58E File Offset: 0x0008B78E
		[SaveableProperty(20)]
		public CampaignTime CreationTime { get; private set; }

		// Token: 0x1700084A RID: 2122
		// (get) Token: 0x06002144 RID: 8516 RVA: 0x0008D597 File Offset: 0x0008B797
		// (set) Token: 0x06002145 RID: 8517 RVA: 0x0008D59F File Offset: 0x0008B79F
		[SaveableProperty(30)]
		public TournamentGame.QualificationMode Mode { get; protected set; }

		// Token: 0x1700084B RID: 2123
		// (get) Token: 0x06002146 RID: 8518 RVA: 0x0008D5A8 File Offset: 0x0008B7A8
		public virtual int MaxTeamSize
		{
			get
			{
				return 1;
			}
		}

		// Token: 0x1700084C RID: 2124
		// (get) Token: 0x06002147 RID: 8519 RVA: 0x0008D5AB File Offset: 0x0008B7AB
		public virtual int MaxTeamNumberPerMatch
		{
			get
			{
				return 2;
			}
		}

		// Token: 0x1700084D RID: 2125
		// (get) Token: 0x06002148 RID: 8520 RVA: 0x0008D5AE File Offset: 0x0008B7AE
		// (set) Token: 0x06002149 RID: 8521 RVA: 0x0008D5B6 File Offset: 0x0008B7B6
		[SaveableProperty(40)]
		public ItemObject Prize { get; private set; }

		// Token: 0x1700084E RID: 2126
		// (get) Token: 0x0600214A RID: 8522 RVA: 0x0008D5BF File Offset: 0x0008B7BF
		public virtual float TournamentWinRenown
		{
			get
			{
				return (float)Campaign.Current.Models.TournamentModel.GetRenownReward(Hero.MainHero, this.Town);
			}
		}

		// Token: 0x1700084F RID: 2127
		// (get) Token: 0x0600214B RID: 8523 RVA: 0x0008D5E1 File Offset: 0x0008B7E1
		public virtual float TournamentWinInfluence
		{
			get
			{
				return (float)Campaign.Current.Models.TournamentModel.GetInfluenceReward(Hero.MainHero, this.Town);
			}
		}

		// Token: 0x17000850 RID: 2128
		// (get) Token: 0x0600214C RID: 8524
		public abstract int RemoveTournamentAfterDays { get; }

		// Token: 0x17000851 RID: 2129
		// (get) Token: 0x0600214D RID: 8525
		public abstract int MaximumParticipantCount { get; }

		// Token: 0x0600214E RID: 8526
		public abstract TextObject GetMenuText();

		// Token: 0x0600214F RID: 8527
		public abstract void OpenMission(Settlement settlement, bool isPlayerParticipating);

		// Token: 0x06002150 RID: 8528
		public abstract MBList<CharacterObject> GetParticipantCharacters(Settlement settlement, bool includePlayer = true);

		// Token: 0x06002151 RID: 8529
		protected abstract ItemObject GetTournamentPrize(bool includePlayer, int lastRecordedLordCountForTournamentPrize);

		// Token: 0x06002152 RID: 8530 RVA: 0x0008D603 File Offset: 0x0008B803
		protected TournamentGame(Town town, ItemObject prize = null)
		{
			this.Town = town;
			this.Prize = prize ?? this.GetTournamentPrize(false, this._lastRecordedLordCountForTournamentPrize);
			this.CreationTime = CampaignTime.Now;
			this._lastRecordedLordCountForTournamentPrize = 0;
		}

		// Token: 0x06002153 RID: 8531 RVA: 0x0008D63C File Offset: 0x0008B83C
		public virtual bool CanBeAParticipant(CharacterObject character, bool considerSkills)
		{
			return true;
		}

		// Token: 0x06002154 RID: 8532 RVA: 0x0008D63F File Offset: 0x0008B83F
		public void PrepareForTournamentGame(bool isPlayerParticipating)
		{
			this.OpenMission(Settlement.CurrentSettlement, isPlayerParticipating);
		}

		// Token: 0x06002155 RID: 8533 RVA: 0x0008D64D File Offset: 0x0008B84D
		public void UpdateTournamentPrize(bool includePlayer, bool removeCurrentPrize = false)
		{
			if (removeCurrentPrize)
			{
				this.Prize = null;
			}
			this.Prize = this.GetTournamentPrize(includePlayer, this._lastRecordedLordCountForTournamentPrize);
		}

		// Token: 0x04000A65 RID: 2661
		[SaveableField(60)]
		protected int _lastRecordedLordCountForTournamentPrize;

		// Token: 0x02000590 RID: 1424
		public enum QualificationMode
		{
			// Token: 0x0400173A RID: 5946
			IndividualScore,
			// Token: 0x0400173B RID: 5947
			TeamScore
		}
	}
}
