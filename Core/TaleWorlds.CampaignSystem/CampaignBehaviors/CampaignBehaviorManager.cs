using System;
using System.Collections.Generic;
using System.Linq;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.CampaignBehaviors
{
	public class CampaignBehaviorManager : ICampaignBehaviorManager
	{
		public CampaignBehaviorManager(IEnumerable<CampaignBehaviorBase> inputComponents)
		{
			this.SetBehaviors(inputComponents);
			this._campaignBehaviorDataStore = new CampaignBehaviorDataStore();
			CampaignEvents.OnBeforeSaveEvent.AddNonSerializedListener(this, new Action(this.OnBeforeSave));
		}

		public void InitializeCampaignBehaviors(IEnumerable<CampaignBehaviorBase> inputComponents)
		{
			this.SetBehaviors(inputComponents);
			CampaignEvents.OnBeforeSaveEvent.AddNonSerializedListener(this, new Action(this.OnBeforeSave));
		}

		private void SetBehaviors(IEnumerable<CampaignBehaviorBase> inputComponents)
		{
			this._campaignBehaviors = inputComponents.ToList<CampaignBehaviorBase>();
		}

		public void RegisterEvents()
		{
			foreach (CampaignBehaviorBase campaignBehaviorBase in this._campaignBehaviors)
			{
				campaignBehaviorBase.RegisterEvents();
			}
		}

		private void OnBeforeSave()
		{
			this._campaignBehaviorDataStore.ClearBehaviorData();
			foreach (CampaignBehaviorBase campaignBehaviorBase in this._campaignBehaviors)
			{
				this._campaignBehaviorDataStore.SaveBehaviorData(campaignBehaviorBase);
			}
		}

		public void LoadBehaviorData()
		{
			foreach (CampaignBehaviorBase campaignBehaviorBase in this._campaignBehaviors)
			{
				this._campaignBehaviorDataStore.LoadBehaviorData(campaignBehaviorBase);
			}
			this._campaignBehaviorDataStore.ClearBehaviorData();
		}

		public T GetBehavior<T>()
		{
			return this._campaignBehaviors.OfType<T>().FirstOrDefault<T>();
		}

		public IEnumerable<T> GetBehaviors<T>()
		{
			return this._campaignBehaviors.OfType<T>();
		}

		public void AddBehavior(CampaignBehaviorBase campaignBehavior)
		{
			this._campaignBehaviors.Add(campaignBehavior);
			campaignBehavior.RegisterEvents();
		}

		public void RemoveBehavior<T>() where T : CampaignBehaviorBase
		{
			for (int i = this._campaignBehaviors.Count - 1; i >= 0; i--)
			{
				T t;
				if ((t = this._campaignBehaviors[i] as T) != null)
				{
					this._campaignBehaviors.Remove(t);
					CampaignEventDispatcher.Instance.RemoveListeners(t);
					return;
				}
			}
		}

		public void ClearBehaviors()
		{
			this._campaignBehaviors.Clear();
		}

		internal static void AutoGeneratedStaticCollectObjectsCampaignBehaviorManager(object o, List<object> collectedObjects)
		{
			((CampaignBehaviorManager)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this._campaignBehaviorDataStore);
		}

		internal static object AutoGeneratedGetMemberValue_campaignBehaviorDataStore(object o)
		{
			return ((CampaignBehaviorManager)o)._campaignBehaviorDataStore;
		}

		private List<CampaignBehaviorBase> _campaignBehaviors;

		[SaveableField(1)]
		private readonly CampaignBehaviorDataStore _campaignBehaviorDataStore;
	}
}
