using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.CampaignSystem.Actions;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.BarterSystem.Barterables
{
	// Token: 0x0200041D RID: 1053
	public class SetPrisonerFreeBarterable : Barterable
	{
		// Token: 0x17000D2B RID: 3371
		// (get) Token: 0x06003E30 RID: 15920 RVA: 0x001297CE File Offset: 0x001279CE
		public override string StringID
		{
			get
			{
				return "set_prisoner_free_barterable";
			}
		}

		// Token: 0x06003E31 RID: 15921 RVA: 0x001297D5 File Offset: 0x001279D5
		public SetPrisonerFreeBarterable(Hero prisonerCharacter, Hero captor, PartyBase ownerParty, Hero ransompayer)
			: base(captor, ownerParty)
		{
			this._prisonerCharacter = prisonerCharacter;
			this._ransompayer = ransompayer;
		}

		// Token: 0x17000D2C RID: 3372
		// (get) Token: 0x06003E32 RID: 15922 RVA: 0x001297EE File Offset: 0x001279EE
		public override TextObject Name
		{
			get
			{
				StringHelpers.SetCharacterProperties("PRISONER", this._prisonerCharacter.CharacterObject, null, false);
				return new TextObject("{=RwOzeGc3}Release {PRISONER.NAME}", null);
			}
		}

		// Token: 0x06003E33 RID: 15923 RVA: 0x00129814 File Offset: 0x00127A14
		public override int GetUnitValueForFaction(IFaction faction)
		{
			float num = (float)Campaign.Current.Models.RansomValueCalculationModel.PrisonerRansomValue(this._prisonerCharacter.CharacterObject, null) * (1f + MBMath.ClampFloat(this._prisonerCharacter.CaptivityStartTime.ElapsedWeeksUntilNow, 0f, 8f) * 0.3f) * 0.9f;
			if (faction == this._prisonerCharacter.MapFaction || faction == this._prisonerCharacter.Clan)
			{
				return (int)num;
			}
			if (faction.MapFaction == this._prisonerCharacter.PartyBelongedToAsPrisoner.MapFaction)
			{
				return (int)(-(int)num);
			}
			return 0;
		}

		// Token: 0x06003E34 RID: 15924 RVA: 0x001298B4 File Offset: 0x00127AB4
		public override ImageIdentifier GetVisualIdentifier()
		{
			return new ImageIdentifier(CharacterCode.CreateFrom(this._prisonerCharacter.CharacterObject));
		}

		// Token: 0x06003E35 RID: 15925 RVA: 0x001298CB File Offset: 0x00127ACB
		public override string GetEncyclopediaLink()
		{
			return this._prisonerCharacter.EncyclopediaLink;
		}

		// Token: 0x06003E36 RID: 15926 RVA: 0x001298D8 File Offset: 0x00127AD8
		public override void Apply()
		{
			if (this._prisonerCharacter.IsPrisoner)
			{
				EndCaptivityAction.ApplyByRansom(this._prisonerCharacter, this._ransompayer);
			}
		}

		// Token: 0x06003E37 RID: 15927 RVA: 0x001298F8 File Offset: 0x00127AF8
		internal static void AutoGeneratedStaticCollectObjectsSetPrisonerFreeBarterable(object o, List<object> collectedObjects)
		{
			((SetPrisonerFreeBarterable)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06003E38 RID: 15928 RVA: 0x00129906 File Offset: 0x00127B06
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this._prisonerCharacter);
			collectedObjects.Add(this._ransompayer);
		}

		// Token: 0x06003E39 RID: 15929 RVA: 0x00129927 File Offset: 0x00127B27
		internal static object AutoGeneratedGetMemberValue_prisonerCharacter(object o)
		{
			return ((SetPrisonerFreeBarterable)o)._prisonerCharacter;
		}

		// Token: 0x06003E3A RID: 15930 RVA: 0x00129934 File Offset: 0x00127B34
		internal static object AutoGeneratedGetMemberValue_ransompayer(object o)
		{
			return ((SetPrisonerFreeBarterable)o)._ransompayer;
		}

		// Token: 0x040012A9 RID: 4777
		[SaveableField(900)]
		private readonly Hero _prisonerCharacter;

		// Token: 0x040012AA RID: 4778
		[SaveableField(901)]
		private readonly Hero _ransompayer;
	}
}
