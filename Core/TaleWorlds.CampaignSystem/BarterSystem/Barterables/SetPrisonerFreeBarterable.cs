using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.CampaignSystem.Actions;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.BarterSystem.Barterables
{
	public class SetPrisonerFreeBarterable : Barterable
	{
		public override string StringID
		{
			get
			{
				return "set_prisoner_free_barterable";
			}
		}

		public SetPrisonerFreeBarterable(Hero prisonerCharacter, Hero captor, PartyBase ownerParty, Hero ransompayer)
			: base(captor, ownerParty)
		{
			this._prisonerCharacter = prisonerCharacter;
			this._ransompayer = ransompayer;
		}

		public override TextObject Name
		{
			get
			{
				StringHelpers.SetCharacterProperties("PRISONER", this._prisonerCharacter.CharacterObject, null, false);
				return new TextObject("{=RwOzeGc3}Release {PRISONER.NAME}", null);
			}
		}

		public override int GetUnitValueForFaction(IFaction faction)
		{
			float num = (float)Campaign.Current.Models.RansomValueCalculationModel.PrisonerRansomValue(this._prisonerCharacter.CharacterObject, null) * (1f + MBMath.ClampFloat(this._prisonerCharacter.CaptivityStartTime.ElapsedWeeksUntilNow, 0f, 8f) * 0.3f) * 0.9f;
			if (faction == this._prisonerCharacter.MapFaction || faction == this._prisonerCharacter.Clan)
			{
				return (int)num;
			}
			if (faction.MapFaction == this._prisonerCharacter.PartyBelongedToAsPrisoner.MapFaction)
			{
				return (int)(-(int)num);
			}
			return 0;
		}

		public override ImageIdentifier GetVisualIdentifier()
		{
			return new ImageIdentifier(CharacterCode.CreateFrom(this._prisonerCharacter.CharacterObject));
		}

		public override string GetEncyclopediaLink()
		{
			return this._prisonerCharacter.EncyclopediaLink;
		}

		public override void Apply()
		{
			if (this._prisonerCharacter.IsPrisoner)
			{
				EndCaptivityAction.ApplyByRansom(this._prisonerCharacter, this._ransompayer);
			}
		}

		internal static void AutoGeneratedStaticCollectObjectsSetPrisonerFreeBarterable(object o, List<object> collectedObjects)
		{
			((SetPrisonerFreeBarterable)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this._prisonerCharacter);
			collectedObjects.Add(this._ransompayer);
		}

		internal static object AutoGeneratedGetMemberValue_prisonerCharacter(object o)
		{
			return ((SetPrisonerFreeBarterable)o)._prisonerCharacter;
		}

		internal static object AutoGeneratedGetMemberValue_ransompayer(object o)
		{
			return ((SetPrisonerFreeBarterable)o)._ransompayer;
		}

		[SaveableField(900)]
		private readonly Hero _prisonerCharacter;

		[SaveableField(901)]
		private readonly Hero _ransompayer;
	}
}
