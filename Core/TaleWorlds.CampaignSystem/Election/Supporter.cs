using System;
using System.Collections.Generic;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Election
{
	public class Supporter
	{
		internal static void AutoGeneratedStaticCollectObjectsSupporter(object o, List<object> collectedObjects)
		{
			((Supporter)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this.Clan);
		}

		internal static object AutoGeneratedGetMemberValueClan(object o)
		{
			return ((Supporter)o).Clan;
		}

		internal static object AutoGeneratedGetMemberValueSupportWeight(object o)
		{
			return ((Supporter)o).SupportWeight;
		}

		internal static object AutoGeneratedGetMemberValueImagePath(object o)
		{
			return ((Supporter)o).ImagePath;
		}

		public bool IsPlayer
		{
			get
			{
				return this.Clan.Leader.IsHumanPlayerCharacter;
			}
		}

		public TextObject Name
		{
			get
			{
				return this.Clan.Leader.Name;
			}
		}

		public TextObject EncyclopediaLinkWithName
		{
			get
			{
				return this.Clan.Leader.EncyclopediaLinkWithName;
			}
		}

		public Supporter(Clan clan)
		{
			this.Clan = clan;
			this.SupportWeight = Supporter.SupportWeights.StayNeutral;
		}

		public override bool Equals(object obj)
		{
			Supporter supporter = obj as Supporter;
			return supporter != null && supporter.Clan == this.Clan;
		}

		public override int GetHashCode()
		{
			return base.GetHashCode();
		}

		[SaveableField(0)]
		public readonly Clan Clan;

		[SaveableField(1)]
		public Supporter.SupportWeights SupportWeight;

		[SaveableField(2)]
		public string ImagePath;

		public enum SupportWeights
		{
			Choose,
			StayNeutral,
			SlightlyFavor,
			StronglyFavor,
			FullyPush
		}
	}
}
