using System;
using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.MapNotificationTypes
{
	public class PeaceOfferMapNotification : InformationData
	{
		internal static void AutoGeneratedStaticCollectObjectsPeaceOfferMapNotification(object o, List<object> collectedObjects)
		{
			((PeaceOfferMapNotification)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.OpponentFaction);
		}

		internal static object AutoGeneratedGetMemberValueOpponentFaction(object o)
		{
			return ((PeaceOfferMapNotification)o).OpponentFaction;
		}

		internal static object AutoGeneratedGetMemberValueTributeAmount(object o)
		{
			return ((PeaceOfferMapNotification)o).TributeAmount;
		}

		[SaveableProperty(1)]
		public IFaction OpponentFaction { get; private set; }

		[SaveableProperty(2)]
		public int TributeAmount { get; private set; }

		public override TextObject TitleText
		{
			get
			{
				return new TextObject("{=ebAZrm70}Peace Offer", null);
			}
		}

		public override string SoundEventPath
		{
			get
			{
				return "event:/ui/notification/peace_offer";
			}
		}

		public PeaceOfferMapNotification(IFaction opponentFaction, int tributeAmount, TextObject descriptionText)
			: base(descriptionText)
		{
			this.OpponentFaction = opponentFaction;
			this.TributeAmount = tributeAmount;
		}

		public PeaceOfferMapNotification(TextObject description)
			: base(description)
		{
		}

		public override bool IsValid()
		{
			return true;
		}
	}
}
