using System;
using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;

namespace TaleWorlds.CampaignSystem
{
	public sealed class PolicyObject : PropertyObject
	{
		internal static void AutoGeneratedStaticCollectObjectsPolicyObject(object o, List<object> collectedObjects)
		{
			((PolicyObject)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		public static MBReadOnlyList<PolicyObject> All
		{
			get
			{
				return Campaign.Current.AllPolicies;
			}
		}

		public TextObject SecondaryEffects { get; private set; }

		public float AuthoritarianWeight { get; private set; }

		public float OligarchicWeight { get; private set; }

		public float EgalitarianWeight { get; private set; }

		public TextObject LogEntryDescription { get; private set; }

		public PolicyObject(string stringId)
			: base(stringId)
		{
		}

		public void Initialize(TextObject name, TextObject description, TextObject logEntryDescription, TextObject secondaryEffects, float authoritarianWeight, float oligarchyWeight, float egalitarianWeight)
		{
			base.Initialize(name, description);
			this.LogEntryDescription = logEntryDescription;
			this.SecondaryEffects = secondaryEffects;
			this.AuthoritarianWeight = authoritarianWeight;
			this.OligarchicWeight = oligarchyWeight;
			this.EgalitarianWeight = egalitarianWeight;
			base.AfterInitialized();
		}

		public override string ToString()
		{
			return base.Name.ToString();
		}
	}
}
