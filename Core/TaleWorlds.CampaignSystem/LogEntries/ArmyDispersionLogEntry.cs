using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries
{
	// Token: 0x020002CB RID: 715
	public class ArmyDispersionLogEntry : LogEntry, IEncyclopediaLog, IChatNotification, IWarLog
	{
		// Token: 0x060029A1 RID: 10657 RVA: 0x000B1DE9 File Offset: 0x000AFFE9
		internal static void AutoGeneratedStaticCollectObjectsArmyDispersionLogEntry(object o, List<object> collectedObjects)
		{
			((ArmyDispersionLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x060029A2 RID: 10658 RVA: 0x000B1DF7 File Offset: 0x000AFFF7
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this._armyLeader);
			collectedObjects.Add(this._encyclopediaLinkWithName);
		}

		// Token: 0x060029A3 RID: 10659 RVA: 0x000B1E18 File Offset: 0x000B0018
		internal static object AutoGeneratedGetMemberValueDispersionReason(object o)
		{
			return ((ArmyDispersionLogEntry)o).DispersionReason;
		}

		// Token: 0x060029A4 RID: 10660 RVA: 0x000B1E2A File Offset: 0x000B002A
		internal static object AutoGeneratedGetMemberValue_notificationTextColor(object o)
		{
			return ((ArmyDispersionLogEntry)o)._notificationTextColor;
		}

		// Token: 0x060029A5 RID: 10661 RVA: 0x000B1E3C File Offset: 0x000B003C
		internal static object AutoGeneratedGetMemberValue_isVisibleNotification(object o)
		{
			return ((ArmyDispersionLogEntry)o)._isVisibleNotification;
		}

		// Token: 0x060029A6 RID: 10662 RVA: 0x000B1E4E File Offset: 0x000B004E
		internal static object AutoGeneratedGetMemberValue_armyLeader(object o)
		{
			return ((ArmyDispersionLogEntry)o)._armyLeader;
		}

		// Token: 0x060029A7 RID: 10663 RVA: 0x000B1E5B File Offset: 0x000B005B
		internal static object AutoGeneratedGetMemberValue_encyclopediaLinkWithName(object o)
		{
			return ((ArmyDispersionLogEntry)o)._encyclopediaLinkWithName;
		}

		// Token: 0x17000A49 RID: 2633
		// (get) Token: 0x060029A8 RID: 10664 RVA: 0x000B1E68 File Offset: 0x000B0068
		public override CampaignTime KeepInHistoryTime
		{
			get
			{
				return CampaignTime.Weeks(1f);
			}
		}

		// Token: 0x17000A4A RID: 2634
		// (get) Token: 0x060029A9 RID: 10665 RVA: 0x000B1E74 File Offset: 0x000B0074
		public override ChatNotificationType NotificationType
		{
			get
			{
				Hero heroObject = this._armyLeader.HeroObject;
				return base.DiplomaticNotification(((heroObject != null) ? heroObject.Clan : null) ?? null, null);
			}
		}

		// Token: 0x17000A4B RID: 2635
		// (get) Token: 0x060029AA RID: 10666 RVA: 0x000B1E99 File Offset: 0x000B0099
		public bool IsVisibleNotification
		{
			get
			{
				return this._isVisibleNotification;
			}
		}

		// Token: 0x060029AB RID: 10667 RVA: 0x000B1EA4 File Offset: 0x000B00A4
		public ArmyDispersionLogEntry(Army army, Army.ArmyDispersionReason reason)
		{
			this._armyLeader = army.ArmyOwner.CharacterObject;
			this._encyclopediaLinkWithName = army.EncyclopediaLinkWithName;
			Kingdom mapFaction = army.MapFaction;
			this._notificationTextColor = ((mapFaction != null) ? mapFaction.LabelColor : 0U);
			this.DispersionReason = reason;
			this._isVisibleNotification = army.LeaderParty.MapFaction == Hero.MainHero.MapFaction && army.Parties.IndexOf(MobileParty.MainParty) >= 0;
		}

		// Token: 0x060029AC RID: 10668 RVA: 0x000B1F29 File Offset: 0x000B0129
		public override string ToString()
		{
			return this.GetEncyclopediaText().ToString();
		}

		// Token: 0x060029AD RID: 10669 RVA: 0x000B1F38 File Offset: 0x000B0138
		public bool IsRelatedToWar(StanceLink stance, out IFaction effector, out IFaction effected)
		{
			IFaction faction = stance.Faction1;
			IFaction faction2 = stance.Faction2;
			effector = this._armyLeader.HeroObject.MapFaction;
			effected = null;
			return this._armyLeader.HeroObject.MapFaction == faction || this._armyLeader.HeroObject.MapFaction == faction2;
		}

		// Token: 0x060029AE RID: 10670 RVA: 0x000B1F90 File Offset: 0x000B0190
		public TextObject GetNotificationText()
		{
			return this.GetEncyclopediaText();
		}

		// Token: 0x060029AF RID: 10671 RVA: 0x000B1F98 File Offset: 0x000B0198
		public bool IsVisibleInEncyclopediaPageOf<T>(T obj) where T : MBObjectBase
		{
			return this._armyLeader != null && obj == this._armyLeader.HeroObject;
		}

		// Token: 0x060029B0 RID: 10672 RVA: 0x000B1FB8 File Offset: 0x000B01B8
		public TextObject GetEncyclopediaText()
		{
			TextObject textObject;
			switch (this.DispersionReason)
			{
			case Army.ArmyDispersionReason.Unknown:
				textObject = new TextObject("{=5CJOMH90}{ARMY} has been disbanded.", null);
				break;
			case Army.ArmyDispersionReason.DismissalRequestedWithInfluence:
				textObject = new TextObject("{=bAVZloaC}{ARMY} has been disbanded since dismissal is requested.", null);
				break;
			case Army.ArmyDispersionReason.NotEnoughParty:
				textObject = new TextObject("{=s2lKb22C}{ARMY} has been disbanded since other parties has left the army.", null);
				break;
			case Army.ArmyDispersionReason.KingdomChanged:
				textObject = new TextObject("{=6XAvdeEE}{ARMY} has been disbanded since kingdom has been changed.", null);
				break;
			case Army.ArmyDispersionReason.CohesionDepleted:
				textObject = new TextObject("{=ESM0NhLy}{ARMY} has been disbanded since cohesion has been depleted.", null);
				break;
			case Army.ArmyDispersionReason.ObjectiveFinished:
				textObject = new TextObject("{=6XRt8101}{ARMY} has been disbanded since the objective is finished", null);
				break;
			case Army.ArmyDispersionReason.LeaderPartyRemoved:
				textObject = new TextObject("{=A3HdRbqf}{ARMY} has been disbanded since the leader party has left the army.", null);
				break;
			case Army.ArmyDispersionReason.PlayerTakenPrisoner:
				textObject = new TextObject("{=loEI5awS}{ARMY} has been disbanded since the player has taken as a prisoner", null);
				break;
			case Army.ArmyDispersionReason.CannotElectNewLeader:
				textObject = new TextObject("{=7DCzgGNP}{ARMY} has been disbanded since a new leader cannot be selected", null);
				break;
			case Army.ArmyDispersionReason.LeaderCannotArrivePointOnTime:
				textObject = new TextObject("{=t5Y0gTGv}{ARMY} has been disbanded since the leader couldn't arrived to the point on time.", null);
				break;
			case Army.ArmyDispersionReason.ArmyLeaderIsDead:
				textObject = new TextObject("{=t6FNeiOC}{ARMY} has been disbanded since the army leader is dead.", null);
				break;
			default:
				textObject = new TextObject("{=5CJOMH90}{ARMY} has been disbanded.", null);
				break;
			}
			TextObject textObject2 = new TextObject("{=nbmctMLk}{LEADER_NAME}{.o} Army", null);
			textObject2.SetTextVariable("LEADER_NAME", this._armyLeader.Name);
			textObject.SetTextVariable("ARMY", textObject2);
			return textObject;
		}

		// Token: 0x04000C98 RID: 3224
		[SaveableField(30)]
		public readonly Army.ArmyDispersionReason DispersionReason;

		// Token: 0x04000C99 RID: 3225
		[SaveableField(31)]
		private readonly uint _notificationTextColor;

		// Token: 0x04000C9A RID: 3226
		[SaveableField(32)]
		private readonly bool _isVisibleNotification;

		// Token: 0x04000C9B RID: 3227
		[SaveableField(33)]
		private readonly CharacterObject _armyLeader;

		// Token: 0x04000C9C RID: 3228
		[SaveableField(34)]
		private readonly TextObject _encyclopediaLinkWithName;
	}
}
