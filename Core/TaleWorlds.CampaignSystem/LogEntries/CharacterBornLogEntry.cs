using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.Core;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries
{
	// Token: 0x020002D2 RID: 722
	public class CharacterBornLogEntry : LogEntry, IEncyclopediaLog, IChatNotification
	{
		// Token: 0x060029F9 RID: 10745 RVA: 0x000B2E4E File Offset: 0x000B104E
		internal static void AutoGeneratedStaticCollectObjectsCharacterBornLogEntry(object o, List<object> collectedObjects)
		{
			((CharacterBornLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x060029FA RID: 10746 RVA: 0x000B2E5C File Offset: 0x000B105C
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.BornCharacter);
		}

		// Token: 0x060029FB RID: 10747 RVA: 0x000B2E71 File Offset: 0x000B1071
		internal static object AutoGeneratedGetMemberValueBornCharacter(object o)
		{
			return ((CharacterBornLogEntry)o).BornCharacter;
		}

		// Token: 0x17000A50 RID: 2640
		// (get) Token: 0x060029FC RID: 10748 RVA: 0x000B2E7E File Offset: 0x000B107E
		public bool IsVisibleNotification
		{
			get
			{
				return true;
			}
		}

		// Token: 0x17000A51 RID: 2641
		// (get) Token: 0x060029FD RID: 10749 RVA: 0x000B2E81 File Offset: 0x000B1081
		public override CampaignTime KeepInHistoryTime
		{
			get
			{
				return CampaignTime.Years((float)(Campaign.Current.Models.AgeModel.BecomeOldAge / 2));
			}
		}

		// Token: 0x060029FE RID: 10750 RVA: 0x000B2E9F File Offset: 0x000B109F
		public CharacterBornLogEntry(Hero bornCharacter)
		{
			this.BornCharacter = bornCharacter;
		}

		// Token: 0x17000A52 RID: 2642
		// (get) Token: 0x060029FF RID: 10751 RVA: 0x000B2EAE File Offset: 0x000B10AE
		public override ChatNotificationType NotificationType
		{
			get
			{
				return base.PoliticalNotification(this.BornCharacter.Clan);
			}
		}

		// Token: 0x06002A00 RID: 10752 RVA: 0x000B2EC1 File Offset: 0x000B10C1
		public override string ToString()
		{
			return this.GetEncyclopediaText().ToString();
		}

		// Token: 0x06002A01 RID: 10753 RVA: 0x000B2ECE File Offset: 0x000B10CE
		public TextObject GetNotificationText()
		{
			return this.GetEncyclopediaText();
		}

		// Token: 0x06002A02 RID: 10754 RVA: 0x000B2ED6 File Offset: 0x000B10D6
		public bool IsVisibleInEncyclopediaPageOf<T>(T obj) where T : MBObjectBase
		{
			return obj == this.BornCharacter;
		}

		// Token: 0x06002A03 RID: 10755 RVA: 0x000B2EE8 File Offset: 0x000B10E8
		public TextObject GetEncyclopediaText()
		{
			TextObject textObject = GameTexts.FindText("str_notification_character_born", null);
			StringHelpers.SetCharacterProperties("HERO", this.BornCharacter.CharacterObject, textObject, false);
			StringHelpers.SetCharacterProperties("MOTHER", this.BornCharacter.Mother.CharacterObject, textObject, false);
			StringHelpers.SetCharacterProperties("FATHER", this.BornCharacter.Father.CharacterObject, textObject, false);
			return textObject;
		}

		// Token: 0x04000CB4 RID: 3252
		[SaveableField(100)]
		public readonly Hero BornCharacter;
	}
}
