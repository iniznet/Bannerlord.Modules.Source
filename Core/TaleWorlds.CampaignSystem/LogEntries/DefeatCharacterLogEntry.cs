using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries
{
	// Token: 0x020002DB RID: 731
	public class DefeatCharacterLogEntry : LogEntry
	{
		// Token: 0x06002A71 RID: 10865 RVA: 0x000B4332 File Offset: 0x000B2532
		internal static void AutoGeneratedStaticCollectObjectsDefeatCharacterLogEntry(object o, List<object> collectedObjects)
		{
			((DefeatCharacterLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002A72 RID: 10866 RVA: 0x000B4340 File Offset: 0x000B2540
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.WinnerHero);
			collectedObjects.Add(this.LoserHero);
		}

		// Token: 0x06002A73 RID: 10867 RVA: 0x000B4361 File Offset: 0x000B2561
		internal static object AutoGeneratedGetMemberValueWinnerHero(object o)
		{
			return ((DefeatCharacterLogEntry)o).WinnerHero;
		}

		// Token: 0x06002A74 RID: 10868 RVA: 0x000B436E File Offset: 0x000B256E
		internal static object AutoGeneratedGetMemberValueLoserHero(object o)
		{
			return ((DefeatCharacterLogEntry)o).LoserHero;
		}

		// Token: 0x06002A75 RID: 10869 RVA: 0x000B437B File Offset: 0x000B257B
		public DefeatCharacterLogEntry(Hero winner, Hero loser)
		{
			this.WinnerHero = winner;
			this.LoserHero = loser;
		}

		// Token: 0x06002A76 RID: 10870 RVA: 0x000B4391 File Offset: 0x000B2591
		public override ImportanceEnum GetImportanceForClan(Clan clan)
		{
			if (this.WinnerHero.Clan == clan || this.LoserHero.Clan == clan)
			{
				return ImportanceEnum.SlightlyImportant;
			}
			return ImportanceEnum.Zero;
		}

		// Token: 0x06002A77 RID: 10871 RVA: 0x000B43B4 File Offset: 0x000B25B4
		public override void GetConversationScoreAndComment(Hero talkTroop, bool findString, out string comment, out ImportanceEnum score)
		{
			score = ImportanceEnum.Zero;
			comment = "";
			if (this.WinnerHero == Hero.MainHero)
			{
				if (this.LoserHero == talkTroop)
				{
					score = ImportanceEnum.SlightlyImportant;
					if (findString)
					{
						comment = "str_comment_you_defeated_me_in_single_combat";
						return;
					}
				}
			}
			else if (this.LoserHero == Hero.MainHero && this.WinnerHero == talkTroop)
			{
				score = ImportanceEnum.SlightlyImportant;
				if (findString)
				{
					comment = "str_comment_i_defeated_you_in_single_combat";
				}
			}
		}

		// Token: 0x06002A78 RID: 10872 RVA: 0x000B4418 File Offset: 0x000B2618
		public override string ToString()
		{
			TextObject textObject = new TextObject("{=!}{LOSER.NAME} defeated by {WINNER.NAME}.", null);
			StringHelpers.SetCharacterProperties("WINNER", this.WinnerHero.CharacterObject, textObject, false);
			StringHelpers.SetCharacterProperties("LOSER", this.LoserHero.CharacterObject, textObject, false);
			return textObject.ToString();
		}

		// Token: 0x04000CCF RID: 3279
		[SaveableField(200)]
		public readonly Hero WinnerHero;

		// Token: 0x04000CD0 RID: 3280
		[SaveableField(201)]
		public readonly Hero LoserHero;
	}
}
