using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries
{
	public class ArmyCreationLogEntry : LogEntry, IEncyclopediaLog, IWarLog
	{
		internal static void AutoGeneratedStaticCollectObjectsArmyCreationLogEntry(object o, List<object> collectedObjects)
		{
			((ArmyCreationLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this._armyLeader);
		}

		internal static object AutoGeneratedGetMemberValue_armyLeader(object o)
		{
			return ((ArmyCreationLogEntry)o)._armyLeader;
		}

		public override CampaignTime KeepInHistoryTime
		{
			get
			{
				return CampaignTime.Weeks(1f);
			}
		}

		public ArmyCreationLogEntry(Army army)
		{
			this._armyLeader = army.LeaderParty.LeaderHero.CharacterObject;
		}

		public override string ToString()
		{
			return this.GetEncyclopediaText().ToString();
		}

		public bool IsRelatedToWar(StanceLink stance, out IFaction effector, out IFaction effected)
		{
			IFaction faction = stance.Faction1;
			IFaction faction2 = stance.Faction2;
			effector = this._armyLeader.HeroObject.MapFaction;
			effected = null;
			return this._armyLeader.HeroObject.MapFaction == faction || this._armyLeader.HeroObject.MapFaction == faction2;
		}

		public bool IsVisibleInEncyclopediaPageOf<T>(T obj) where T : MBObjectBase
		{
			return obj == this._armyLeader.HeroObject;
		}

		public TextObject GetEncyclopediaText()
		{
			TextObject textObject = new TextObject("{=aXhPvVud}{HERO.LINK} created an army.", null);
			StringHelpers.SetCharacterProperties("HERO", this._armyLeader, textObject, false);
			return textObject;
		}

		[SaveableField(20)]
		private readonly CharacterObject _armyLeader;
	}
}
