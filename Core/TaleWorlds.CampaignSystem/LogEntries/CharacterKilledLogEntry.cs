using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.CampaignSystem.Actions;
using TaleWorlds.CampaignSystem.Conversation;
using TaleWorlds.Core;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries
{
	// Token: 0x020002D4 RID: 724
	public class CharacterKilledLogEntry : LogEntry, IEncyclopediaLog, IChatNotification, IWarLog
	{
		// Token: 0x06002A14 RID: 10772 RVA: 0x000B3355 File Offset: 0x000B1555
		internal static void AutoGeneratedStaticCollectObjectsCharacterKilledLogEntry(object o, List<object> collectedObjects)
		{
			((CharacterKilledLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002A15 RID: 10773 RVA: 0x000B3363 File Offset: 0x000B1563
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.Victim);
			collectedObjects.Add(this.Killer);
			collectedObjects.Add(this.VictimMapFaction);
			collectedObjects.Add(this.KillerMapFaction);
		}

		// Token: 0x06002A16 RID: 10774 RVA: 0x000B339C File Offset: 0x000B159C
		internal static object AutoGeneratedGetMemberValueVictim(object o)
		{
			return ((CharacterKilledLogEntry)o).Victim;
		}

		// Token: 0x06002A17 RID: 10775 RVA: 0x000B33A9 File Offset: 0x000B15A9
		internal static object AutoGeneratedGetMemberValueKiller(object o)
		{
			return ((CharacterKilledLogEntry)o).Killer;
		}

		// Token: 0x06002A18 RID: 10776 RVA: 0x000B33B6 File Offset: 0x000B15B6
		internal static object AutoGeneratedGetMemberValue_actionDetail(object o)
		{
			return ((CharacterKilledLogEntry)o)._actionDetail;
		}

		// Token: 0x06002A19 RID: 10777 RVA: 0x000B33C8 File Offset: 0x000B15C8
		internal static object AutoGeneratedGetMemberValueVictimMapFaction(object o)
		{
			return ((CharacterKilledLogEntry)o).VictimMapFaction;
		}

		// Token: 0x06002A1A RID: 10778 RVA: 0x000B33D5 File Offset: 0x000B15D5
		internal static object AutoGeneratedGetMemberValueKillerMapFaction(object o)
		{
			return ((CharacterKilledLogEntry)o).KillerMapFaction;
		}

		// Token: 0x17000A56 RID: 2646
		// (get) Token: 0x06002A1B RID: 10779 RVA: 0x000B33E2 File Offset: 0x000B15E2
		public bool IsVisibleNotification
		{
			get
			{
				return true;
			}
		}

		// Token: 0x17000A57 RID: 2647
		// (get) Token: 0x06002A1C RID: 10780 RVA: 0x000B33E5 File Offset: 0x000B15E5
		public override ChatNotificationType NotificationType
		{
			get
			{
				return base.CivilianNotification(this.Victim.Clan);
			}
		}

		// Token: 0x17000A58 RID: 2648
		// (get) Token: 0x06002A1D RID: 10781 RVA: 0x000B33F8 File Offset: 0x000B15F8
		public override CampaignTime KeepInHistoryTime
		{
			get
			{
				return CampaignTime.Never;
			}
		}

		// Token: 0x06002A1E RID: 10782 RVA: 0x000B33FF File Offset: 0x000B15FF
		public CharacterKilledLogEntry(Hero victim, Hero killer, KillCharacterAction.KillCharacterActionDetail detail)
		{
			this.Victim = victim;
			this.Killer = killer;
			this.VictimMapFaction = victim.MapFaction;
			this.KillerMapFaction = ((killer != null) ? killer.MapFaction : null);
			this._actionDetail = detail;
		}

		// Token: 0x06002A1F RID: 10783 RVA: 0x000B343A File Offset: 0x000B163A
		public override int AsReasonForEnmity(Hero potentialKiller, Hero potentialRelative)
		{
			if (this.Killer != null && potentialKiller == this.Killer && !potentialRelative.Clan.IsMapFaction && potentialRelative.Clan == this.Victim.Clan)
			{
				return 10;
			}
			return 0;
		}

		// Token: 0x06002A20 RID: 10784 RVA: 0x000B3471 File Offset: 0x000B1671
		public override string ToString()
		{
			return this.GetEncyclopediaText().ToString();
		}

		// Token: 0x06002A21 RID: 10785 RVA: 0x000B3480 File Offset: 0x000B1680
		public override TextObject GetHistoricComment(Hero talkTroop)
		{
			if (this.Killer == null)
			{
				return TextObject.Empty;
			}
			ConversationHelper.HeroRefersToHero(talkTroop, this.Victim, true);
			MBTextManager.SetTextVariable("HERO_1", this.Killer.Name, false);
			MBTextManager.SetTextVariable("HERO_2", this.Victim.Name, false);
			return GameTexts.FindText("str_responsible_of_death_news", null);
		}

		// Token: 0x06002A22 RID: 10786 RVA: 0x000B34E0 File Offset: 0x000B16E0
		public TextObject GetNotificationText()
		{
			TextObject textObject = TextObject.Empty;
			if (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.DiedOfOldAge)
			{
				textObject = new TextObject("{=5GSrvawr}{VICTIM.NAME} died of old age. {?VICTIM.GENDER}Her{?}His{\\?} family and friends will remember {?VICTIM.GENDER}her{?}him{\\?}.", null);
				StringHelpers.SetCharacterProperties("VICTIM", this.Victim.CharacterObject, textObject, false);
			}
			else if (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.Murdered)
			{
				if (this.Killer != null)
				{
					textObject = GameTexts.FindText("str_responsible_of_death_link_news", null);
					StringHelpers.SetCharacterProperties("HERO_1", this.Killer.CharacterObject, textObject, false);
					StringHelpers.SetCharacterProperties("HERO_2", this.Victim.CharacterObject, textObject, false);
				}
				else
				{
					textObject = GameTexts.FindText("str_murdered_passive_news", null);
					StringHelpers.SetCharacterProperties("HERO_2", this.Victim.CharacterObject, textObject, false);
				}
			}
			else if (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.DiedInBattle)
			{
				textObject = new TextObject("{=BhDWm78v}{VICTIM.NAME} has died in battle.", null);
				StringHelpers.SetCharacterProperties("VICTIM", this.Victim.CharacterObject, textObject, false);
			}
			else if (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.DiedInLabor)
			{
				textObject = GameTexts.FindText("str_notification_maternal_death", null);
				StringHelpers.SetCharacterProperties("MOTHER", this.Victim.CharacterObject, textObject, false);
			}
			else if (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.Executed)
			{
				if (this.Killer != null)
				{
					textObject = new TextObject("{=hB8CU9LP}{VICTIM.NAME} has been executed by {KILLER.NAME}.", null);
					StringHelpers.SetCharacterProperties("VICTIM", this.Victim.CharacterObject, textObject, false);
					StringHelpers.SetCharacterProperties("KILLER", this.Killer.CharacterObject, textObject, false);
				}
				else
				{
					textObject = new TextObject("{=mwbYdaJr}{VICTIM.NAME} has been executed.", null);
					StringHelpers.SetCharacterProperties("VICTIM", this.Victim.CharacterObject, textObject, false);
				}
			}
			else if (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.Lost)
			{
				textObject = new TextObject("{=pVkchhqX}{VICTIM.NAME} was lost.", null);
				StringHelpers.SetCharacterProperties("VICTIM", this.Victim.CharacterObject, textObject, false);
			}
			return textObject;
		}

		// Token: 0x06002A23 RID: 10787 RVA: 0x000B36A7 File Offset: 0x000B18A7
		public bool IsVisibleInEncyclopediaPageOf<T>(T obj) where T : MBObjectBase
		{
			return obj == this.Victim || obj == this.Killer;
		}

		// Token: 0x06002A24 RID: 10788 RVA: 0x000B36C8 File Offset: 0x000B18C8
		public TextObject GetEncyclopediaText()
		{
			TextObject textObject = TextObject.Empty;
			if (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.DiedOfOldAge)
			{
				textObject = new TextObject("{=KWBwCq1Y}{VICTIM.LINK} died of old age.", null);
				StringHelpers.SetCharacterProperties("VICTIM", this.Victim.CharacterObject, textObject, false);
			}
			else if (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.Murdered)
			{
				if (this.Killer != null)
				{
					textObject = GameTexts.FindText("str_responsible_of_death_link_news", null);
					StringHelpers.SetCharacterProperties("HERO_1", this.Killer.CharacterObject, textObject, false);
					StringHelpers.SetCharacterProperties("HERO_2", this.Victim.CharacterObject, textObject, false);
				}
				else
				{
					textObject = GameTexts.FindText("str_murdered_passive_news", null);
					StringHelpers.SetCharacterProperties("HERO_2", this.Victim.CharacterObject, textObject, false);
				}
			}
			else if (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.DiedInBattle)
			{
				if (this.KillerMapFaction != null)
				{
					textObject = new TextObject("{=kknvzzcG}{VICTIM.LINK} died in a battle against {FACTION_LINK}.", null);
					textObject.SetTextVariable("FACTION_LINK", this.KillerMapFaction.EncyclopediaLinkWithName);
				}
				else
				{
					textObject = new TextObject("{=mjSauU7P}{VICTIM.LINK} died in battle.", null);
				}
				StringHelpers.SetCharacterProperties("VICTIM", this.Victim.CharacterObject, textObject, false);
			}
			else if (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.DiedInLabor)
			{
				textObject = GameTexts.FindText("str_notification_maternal_death", null);
				StringHelpers.SetCharacterProperties("MOTHER", this.Victim.CharacterObject, textObject, false);
			}
			else if (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.Executed)
			{
				if (this.Killer != null)
				{
					textObject = new TextObject("{=b6Spbd9O}{VICTIM.LINK} has been executed by {KILLER.LINK}.", null);
					StringHelpers.SetCharacterProperties("VICTIM", this.Victim.CharacterObject, textObject, false);
					StringHelpers.SetCharacterProperties("KILLER", this.Killer.CharacterObject, textObject, false);
				}
				else
				{
					textObject = new TextObject("{=NacogXav}{VICTIM.LINK} has been executed.", null);
					StringHelpers.SetCharacterProperties("VICTIM", this.Victim.CharacterObject, textObject, false);
				}
			}
			else if (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.Lost)
			{
				textObject = new TextObject("{=NKTbhIoi}{VICTIM.LINK} was lost.", null);
				StringHelpers.SetCharacterProperties("VICTIM", this.Victim.CharacterObject, textObject, false);
			}
			return textObject;
		}

		// Token: 0x06002A25 RID: 10789 RVA: 0x000B38BC File Offset: 0x000B1ABC
		public bool IsRelatedToWar(StanceLink stance, out IFaction effector, out IFaction effected)
		{
			IFaction faction = stance.Faction1;
			IFaction faction2 = stance.Faction2;
			effector = this.VictimMapFaction;
			effected = this.KillerMapFaction;
			return (this._actionDetail == KillCharacterAction.KillCharacterActionDetail.DiedInBattle || this._actionDetail == KillCharacterAction.KillCharacterActionDetail.Executed) && effector != null && effected != null && ((faction == this.VictimMapFaction && faction2 == this.KillerMapFaction) || (faction2 == this.VictimMapFaction && faction == this.KillerMapFaction));
		}

		// Token: 0x04000CB9 RID: 3257
		[SaveableField(120)]
		public readonly Hero Victim;

		// Token: 0x04000CBA RID: 3258
		[SaveableField(121)]
		public readonly Hero Killer;

		// Token: 0x04000CBB RID: 3259
		[SaveableField(122)]
		private readonly KillCharacterAction.KillCharacterActionDetail _actionDetail;

		// Token: 0x04000CBC RID: 3260
		[SaveableField(124)]
		private readonly IFaction VictimMapFaction;

		// Token: 0x04000CBD RID: 3261
		[SaveableField(125)]
		private readonly IFaction KillerMapFaction;
	}
}
