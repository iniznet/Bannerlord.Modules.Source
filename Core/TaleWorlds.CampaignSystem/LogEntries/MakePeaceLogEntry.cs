using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Core;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries
{
	// Token: 0x020002DF RID: 735
	public class MakePeaceLogEntry : LogEntry, IEncyclopediaLog, IChatNotification
	{
		// Token: 0x06002A98 RID: 10904 RVA: 0x000B487D File Offset: 0x000B2A7D
		internal static void AutoGeneratedStaticCollectObjectsMakePeaceLogEntry(object o, List<object> collectedObjects)
		{
			((MakePeaceLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002A99 RID: 10905 RVA: 0x000B488B File Offset: 0x000B2A8B
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.Faction1);
			collectedObjects.Add(this.Faction2);
		}

		// Token: 0x06002A9A RID: 10906 RVA: 0x000B48AC File Offset: 0x000B2AAC
		internal static object AutoGeneratedGetMemberValueFaction1(object o)
		{
			return ((MakePeaceLogEntry)o).Faction1;
		}

		// Token: 0x06002A9B RID: 10907 RVA: 0x000B48B9 File Offset: 0x000B2AB9
		internal static object AutoGeneratedGetMemberValueFaction2(object o)
		{
			return ((MakePeaceLogEntry)o).Faction2;
		}

		// Token: 0x17000A6B RID: 2667
		// (get) Token: 0x06002A9C RID: 10908 RVA: 0x000B48C6 File Offset: 0x000B2AC6
		public bool IsVisibleNotification
		{
			get
			{
				return true;
			}
		}

		// Token: 0x17000A6C RID: 2668
		// (get) Token: 0x06002A9D RID: 10909 RVA: 0x000B48C9 File Offset: 0x000B2AC9
		public override CampaignTime KeepInHistoryTime
		{
			get
			{
				return CampaignTime.Days(40f);
			}
		}

		// Token: 0x06002A9E RID: 10910 RVA: 0x000B48D5 File Offset: 0x000B2AD5
		public MakePeaceLogEntry(IFaction faction1, IFaction faction2)
		{
			this.Faction1 = faction1;
			this.Faction2 = faction2;
		}

		// Token: 0x06002A9F RID: 10911 RVA: 0x000B48EC File Offset: 0x000B2AEC
		public override int GetAsRumor(Settlement talkSettlement, ref TextObject comment)
		{
			if (this.Faction1 == talkSettlement.MapFaction)
			{
				comment = new TextObject("{=wfb0FnbW}At last they've made peace with {ENEMY_NAME}. Good. I hope it lasts.", null);
				comment.SetTextVariable("ENEMY_NAME", FactionHelper.GetTermUsedByOtherFaction(this.Faction2, talkSettlement.MapFaction, false));
				return 10;
			}
			if (this.Faction2 == talkSettlement.MapFaction)
			{
				comment = new TextObject("{=94wCiGjB}So it seems as though {ENEMY_NAME} have had enough of war. Good. Peace is good.", null);
				comment.SetTextVariable("ENEMY_NAME", FactionHelper.GetTermUsedByOtherFaction(this.Faction1, talkSettlement.MapFaction, false));
				return 10;
			}
			return 0;
		}

		// Token: 0x06002AA0 RID: 10912 RVA: 0x000B4974 File Offset: 0x000B2B74
		public override string ToString()
		{
			return this.GetEncyclopediaText().ToString();
		}

		// Token: 0x06002AA1 RID: 10913 RVA: 0x000B4981 File Offset: 0x000B2B81
		public TextObject GetNotificationText()
		{
			TextObject textObject = GameTexts.FindText("str_notification_secondary_peace", null);
			textObject.SetTextVariable("FACTION1", this.Faction1.InformalName);
			textObject.SetTextVariable("FACTION2", this.Faction2.InformalName);
			return textObject;
		}

		// Token: 0x06002AA2 RID: 10914 RVA: 0x000B49BC File Offset: 0x000B2BBC
		public bool IsVisibleInEncyclopediaPageOf<T>(T obj) where T : MBObjectBase
		{
			return obj == this.Faction1 || obj == this.Faction2;
		}

		// Token: 0x17000A6D RID: 2669
		// (get) Token: 0x06002AA3 RID: 10915 RVA: 0x000B49DC File Offset: 0x000B2BDC
		public override ChatNotificationType NotificationType
		{
			get
			{
				return base.DiplomaticNotification(this.Faction1, this.Faction2);
			}
		}

		// Token: 0x06002AA4 RID: 10916 RVA: 0x000B49F0 File Offset: 0x000B2BF0
		public TextObject GetEncyclopediaText()
		{
			TextObject textObject = GameTexts.FindText("str_factions_make_peace_news", null);
			textObject.SetTextVariable("FACTION1", this.Faction1.EncyclopediaLinkWithName);
			textObject.SetTextVariable("FACTION2", this.Faction2.EncyclopediaLinkWithName);
			return textObject;
		}

		// Token: 0x04000CDC RID: 3292
		[SaveableField(240)]
		public readonly IFaction Faction1;

		// Token: 0x04000CDD RID: 3293
		[SaveableField(241)]
		public readonly IFaction Faction2;
	}
}
