using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries
{
	public class GatherArmyLogEntry : LogEntry, IChatNotification
	{
		internal static void AutoGeneratedStaticCollectObjectsGatherArmyLogEntry(object o, List<object> collectedObjects)
		{
			((GatherArmyLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.ArmyLeader);
			collectedObjects.Add(this.ArmyMapFaction);
			collectedObjects.Add(this.GatheringSettlement);
		}

		internal static object AutoGeneratedGetMemberValueArmyLeader(object o)
		{
			return ((GatherArmyLogEntry)o).ArmyLeader;
		}

		internal static object AutoGeneratedGetMemberValueArmyMapFaction(object o)
		{
			return ((GatherArmyLogEntry)o).ArmyMapFaction;
		}

		internal static object AutoGeneratedGetMemberValueGatheringSettlement(object o)
		{
			return ((GatherArmyLogEntry)o).GatheringSettlement;
		}

		public override ChatNotificationType NotificationType
		{
			get
			{
				return base.MilitaryNotification(this.ArmyLeader.Clan, null);
			}
		}

		public bool IsVisibleNotification
		{
			get
			{
				return this.ArmyMapFaction == Hero.MainHero.MapFaction;
			}
		}

		public GatherArmyLogEntry(Army army, Settlement gatheringSettlement)
		{
			this.ArmyLeader = army.LeaderParty.LeaderHero;
			this.ArmyMapFaction = army.MapFaction;
			this.GatheringSettlement = gatheringSettlement;
		}

		public override string ToString()
		{
			return this.GetNotificationText().ToString();
		}

		public TextObject GetNotificationText()
		{
			TextObject textObject = new TextObject("{=Vi5Ylvr1}{LORD.NAME} is gathering army near {SETTLEMENT}", null);
			StringHelpers.SetCharacterProperties("LORD", this.ArmyLeader.CharacterObject, textObject, false);
			textObject.SetTextVariable("SETTLEMENT", this.GatheringSettlement.ToString());
			return textObject;
		}

		[SaveableField(220)]
		public readonly Hero ArmyLeader;

		[SaveableField(221)]
		public readonly IFaction ArmyMapFaction;

		[SaveableField(222)]
		public readonly Settlement GatheringSettlement;
	}
}
