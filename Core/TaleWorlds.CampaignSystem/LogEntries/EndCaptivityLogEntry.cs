using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.CampaignSystem.Actions;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries
{
	// Token: 0x020002E9 RID: 745
	public class EndCaptivityLogEntry : LogEntry, IEncyclopediaLog, IChatNotification
	{
		// Token: 0x06002B11 RID: 11025 RVA: 0x000B608B File Offset: 0x000B428B
		internal static void AutoGeneratedStaticCollectObjectsEndCaptivityLogEntry(object o, List<object> collectedObjects)
		{
			((EndCaptivityLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002B12 RID: 11026 RVA: 0x000B6099 File Offset: 0x000B4299
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.CapturerMapFaction);
			collectedObjects.Add(this.Prisoner);
		}

		// Token: 0x06002B13 RID: 11027 RVA: 0x000B60BA File Offset: 0x000B42BA
		internal static object AutoGeneratedGetMemberValueDetail(object o)
		{
			return ((EndCaptivityLogEntry)o).Detail;
		}

		// Token: 0x06002B14 RID: 11028 RVA: 0x000B60CC File Offset: 0x000B42CC
		internal static object AutoGeneratedGetMemberValueCapturerMapFaction(object o)
		{
			return ((EndCaptivityLogEntry)o).CapturerMapFaction;
		}

		// Token: 0x06002B15 RID: 11029 RVA: 0x000B60D9 File Offset: 0x000B42D9
		internal static object AutoGeneratedGetMemberValuePrisoner(object o)
		{
			return ((EndCaptivityLogEntry)o).Prisoner;
		}

		// Token: 0x17000A7E RID: 2686
		// (get) Token: 0x06002B16 RID: 11030 RVA: 0x000B60E6 File Offset: 0x000B42E6
		// (set) Token: 0x06002B17 RID: 11031 RVA: 0x000B60EE File Offset: 0x000B42EE
		[SaveableProperty(732)]
		public EndCaptivityDetail Detail { get; private set; }

		// Token: 0x06002B18 RID: 11032 RVA: 0x000B60F7 File Offset: 0x000B42F7
		public EndCaptivityLogEntry(Hero prisoner, IFaction capturerMapFaction, EndCaptivityDetail detail)
		{
			this.CapturerMapFaction = capturerMapFaction;
			this.Prisoner = prisoner;
			this.Detail = detail;
		}

		// Token: 0x06002B19 RID: 11033 RVA: 0x000B6114 File Offset: 0x000B4314
		public override string ToString()
		{
			return this.GetEncyclopediaText().ToString();
		}

		// Token: 0x17000A7F RID: 2687
		// (get) Token: 0x06002B1A RID: 11034 RVA: 0x000B6121 File Offset: 0x000B4321
		public bool IsVisibleNotification
		{
			get
			{
				return true;
			}
		}

		// Token: 0x06002B1B RID: 11035 RVA: 0x000B6124 File Offset: 0x000B4324
		public TextObject GetEncyclopediaText()
		{
			return this.GetNotificationText();
		}

		// Token: 0x06002B1C RID: 11036 RVA: 0x000B612C File Offset: 0x000B432C
		public bool IsVisibleInEncyclopediaPageOf<T>(T obj) where T : MBObjectBase
		{
			return obj == this.Prisoner || obj == this.Prisoner.Clan;
		}

		// Token: 0x17000A80 RID: 2688
		// (get) Token: 0x06002B1D RID: 11037 RVA: 0x000B6151 File Offset: 0x000B4351
		public override ChatNotificationType NotificationType
		{
			get
			{
				return base.MilitaryNotification(this.Prisoner.Clan, null);
			}
		}

		// Token: 0x06002B1E RID: 11038 RVA: 0x000B6168 File Offset: 0x000B4368
		public TextObject GetNotificationText()
		{
			TextObject textObject = new TextObject("{=6u3t174w}{PRISONER_LORD.LINK}{?PRISONER_LORD_HAS_FACTION_LINK} of the {PRISONER_LORD_FACTION_LINK}{?}{\\?} is now free.", null);
			switch (this.Detail)
			{
			case EndCaptivityDetail.Ransom:
				textObject = new TextObject("{=pX0MgdZA}{PRISONER_LORD.LINK}{?PRISONER_LORD_HAS_FACTION_LINK} of the {PRISONER_LORD_FACTION_LINK}{?}{\\?} has been ransomed from the {CAPTURER_FACTION}.", null);
				break;
			case EndCaptivityDetail.ReleasedAfterPeace:
				textObject = new TextObject("{=wlhJGG0q}{PRISONER_LORD.LINK}{?PRISONER_LORD_HAS_FACTION_LINK} of the {PRISONER_LORD_FACTION_LINK}{?}{\\?} has been freed because of a peace declaration.", null);
				break;
			case EndCaptivityDetail.ReleasedAfterBattle:
				textObject = new TextObject("{=hp4jLl3M}{PRISONER_LORD.LINK}{?PRISONER_LORD_HAS_FACTION_LINK} of the {PRISONER_LORD_FACTION_LINK}{?}{\\?} has been released after battle.", null);
				break;
			case EndCaptivityDetail.ReleasedAfterEscape:
				textObject = new TextObject("{=krTrNonp}{PRISONER_LORD.LINK}{?PRISONER_LORD_HAS_FACTION_LINK} of the {PRISONER_LORD_FACTION_LINK}{?}{\\?} has escaped from captivity.", null);
				break;
			case EndCaptivityDetail.Death:
				textObject = new TextObject("{=XbQFAKUz}{PRISONER_LORD.LINK}{?PRISONER_LORD_HAS_FACTION_LINK} of the {PRISONER_LORD_FACTION_LINK}{?}{\\?} has died while being held captive by the {CAPTURER_FACTION}.", null);
				break;
			}
			Clan clan = this.Prisoner.Clan;
			if (clan != null && !clan.IsMinorFaction && this.Prisoner.MapFaction != CampaignData.NeutralFaction)
			{
				textObject.SetTextVariable("PRISONER_LORD_FACTION_LINK", this.Prisoner.MapFaction.EncyclopediaLinkWithName);
				textObject.SetTextVariable("PRISONER_LORD_HAS_FACTION_LINK", 1);
			}
			StringHelpers.SetCharacterProperties("PRISONER_LORD", this.Prisoner.CharacterObject, textObject, false);
			if (this.CapturerMapFaction != null)
			{
				textObject.SetTextVariable("CAPTURER_FACTION", this.CapturerMapFaction.InformalName);
			}
			return textObject;
		}

		// Token: 0x06002B1F RID: 11039 RVA: 0x000B627B File Offset: 0x000B447B
		public override void GetConversationScoreAndComment(Hero talkTroop, bool findString, out string comment, out ImportanceEnum score)
		{
			score = ImportanceEnum.Zero;
			comment = "";
			if (talkTroop == this.Prisoner && talkTroop.IsPlayerCompanion)
			{
				if (this.Detail == EndCaptivityDetail.Ransom)
				{
					score = ImportanceEnum.VeryImportant;
					comment = "str_comment_captivity_release_companion_ransom";
					return;
				}
				score = ImportanceEnum.VeryImportant;
				comment = "str_comment_captivity_release_companion";
			}
		}

		// Token: 0x04000CFF RID: 3327
		[SaveableField(730)]
		public readonly IFaction CapturerMapFaction;

		// Token: 0x04000D00 RID: 3328
		[SaveableField(731)]
		public readonly Hero Prisoner;
	}
}
