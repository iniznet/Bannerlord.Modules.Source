using System;
using System.Collections;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Roster
{
	// Token: 0x02000291 RID: 657
	public class FlattenedTroopRoster : IEnumerable<FlattenedTroopRosterElement>, IEnumerable
	{
		// Token: 0x0600230B RID: 8971 RVA: 0x000949A6 File Offset: 0x00092BA6
		internal static void AutoGeneratedStaticCollectObjectsFlattenedTroopRoster(object o, List<object> collectedObjects)
		{
			((FlattenedTroopRoster)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x0600230C RID: 8972 RVA: 0x000949B4 File Offset: 0x00092BB4
		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this._elementDictionary);
		}

		// Token: 0x0600230D RID: 8973 RVA: 0x000949C2 File Offset: 0x00092BC2
		internal static object AutoGeneratedGetMemberValue_elementDictionary(object o)
		{
			return ((FlattenedTroopRoster)o)._elementDictionary;
		}

		// Token: 0x0600230E RID: 8974 RVA: 0x000949CF File Offset: 0x00092BCF
		public FlattenedTroopRoster(int count = 4)
		{
			this._elementDictionary = new Dictionary<UniqueTroopDescriptor, FlattenedTroopRosterElement>(count);
		}

		// Token: 0x0600230F RID: 8975 RVA: 0x000949E3 File Offset: 0x00092BE3
		public FlattenedTroopRoster(TroopRoster roster)
			: this(roster.Count)
		{
			this.Add(roster.GetTroopRoster());
		}

		// Token: 0x06002310 RID: 8976 RVA: 0x000949FD File Offset: 0x00092BFD
		public FlattenedTroopRoster(FlattenedTroopRoster other)
		{
			this._elementDictionary = new Dictionary<UniqueTroopDescriptor, FlattenedTroopRosterElement>(other._elementDictionary);
		}

		// Token: 0x170008A9 RID: 2217
		public FlattenedTroopRosterElement this[UniqueTroopDescriptor index]
		{
			get
			{
				return this._elementDictionary[index];
			}
			set
			{
				this._elementDictionary[index] = value;
			}
		}

		// Token: 0x06002313 RID: 8979 RVA: 0x00094A34 File Offset: 0x00092C34
		public void Add(MBList<TroopRosterElement> roster)
		{
			foreach (TroopRosterElement troopRosterElement in roster)
			{
				if (troopRosterElement.Number > 0)
				{
					int num = troopRosterElement.Xp / troopRosterElement.Number;
					int num2 = troopRosterElement.Xp % troopRosterElement.Number;
					for (int i = 0; i < troopRosterElement.Number; i++)
					{
						bool flag = i < troopRosterElement.WoundedNumber;
						int num3 = num;
						if (i < num2)
						{
							num3++;
						}
						this.Add(troopRosterElement.Character, flag, num3);
					}
				}
			}
		}

		// Token: 0x06002314 RID: 8980 RVA: 0x00094AE8 File Offset: 0x00092CE8
		public void Add(TroopRosterElement troop)
		{
			int num = troop.Xp / troop.Number;
			int num2 = troop.Xp % troop.Number;
			for (int i = 0; i < troop.Number; i++)
			{
				bool flag = i < troop.WoundedNumber;
				int num3 = num;
				if (i < num2)
				{
					num3++;
				}
				this.Add(troop.Character, flag, num3);
			}
		}

		// Token: 0x06002315 RID: 8981 RVA: 0x00094B50 File Offset: 0x00092D50
		public void Add(CharacterObject troop, int number, int woundedNumber = 0)
		{
			for (int i = 0; i < number; i++)
			{
				this.Add(troop, woundedNumber > 0, 0);
				woundedNumber--;
			}
		}

		// Token: 0x06002316 RID: 8982 RVA: 0x00094B7C File Offset: 0x00092D7C
		public UniqueTroopDescriptor Add(CharacterObject troop, bool isWounded = false, int xp = 0)
		{
			FlattenedTroopRosterElement flattenedTroopRosterElement = new FlattenedTroopRosterElement(troop, isWounded ? RosterTroopState.Wounded : RosterTroopState.Active, xp, default(UniqueTroopDescriptor), 0);
			this._elementDictionary.Add(flattenedTroopRosterElement.Descriptor, flattenedTroopRosterElement);
			return flattenedTroopRosterElement.Descriptor;
		}

		// Token: 0x06002317 RID: 8983 RVA: 0x00094BBD File Offset: 0x00092DBD
		public static int GenerateUniqueNoFromParty(MobileParty party, int troopIndex)
		{
			return (party.Party.Index * 999983 + troopIndex * 100003) % 616841;
		}

		// Token: 0x06002318 RID: 8984 RVA: 0x00094BDE File Offset: 0x00092DDE
		public void Remove(UniqueTroopDescriptor descriptor)
		{
			this._elementDictionary.Remove(descriptor);
		}

		// Token: 0x170008AA RID: 2218
		// (get) Token: 0x06002319 RID: 8985 RVA: 0x00094BED File Offset: 0x00092DED
		public IEnumerable<CharacterObject> Troops
		{
			get
			{
				foreach (FlattenedTroopRosterElement flattenedTroopRosterElement in this._elementDictionary.Values)
				{
					yield return flattenedTroopRosterElement.Troop;
				}
				Dictionary<UniqueTroopDescriptor, FlattenedTroopRosterElement>.ValueCollection.Enumerator enumerator = default(Dictionary<UniqueTroopDescriptor, FlattenedTroopRosterElement>.ValueCollection.Enumerator);
				yield break;
				yield break;
			}
		}

		// Token: 0x0600231A RID: 8986 RVA: 0x00094BFD File Offset: 0x00092DFD
		public void Clear()
		{
			this._elementDictionary.Clear();
		}

		// Token: 0x0600231B RID: 8987 RVA: 0x00094C0C File Offset: 0x00092E0C
		public ICollection<FlattenedTroopRosterElement> RemoveIf(Predicate<FlattenedTroopRosterElement> match)
		{
			List<FlattenedTroopRosterElement> list = new List<FlattenedTroopRosterElement>();
			foreach (KeyValuePair<UniqueTroopDescriptor, FlattenedTroopRosterElement> keyValuePair in this._elementDictionary)
			{
				if (match(keyValuePair.Value))
				{
					list.Add(keyValuePair.Value);
				}
			}
			foreach (FlattenedTroopRosterElement flattenedTroopRosterElement in list)
			{
				this._elementDictionary.Remove(flattenedTroopRosterElement.Descriptor);
			}
			return list;
		}

		// Token: 0x0600231C RID: 8988 RVA: 0x00094CC8 File Offset: 0x00092EC8
		public UniqueTroopDescriptor FindIndexOfCharacter(CharacterObject character)
		{
			foreach (KeyValuePair<UniqueTroopDescriptor, FlattenedTroopRosterElement> keyValuePair in this._elementDictionary)
			{
				if (keyValuePair.Value.Troop == character)
				{
					return keyValuePair.Value.Descriptor;
				}
			}
			return UniqueTroopDescriptor.Invalid;
		}

		// Token: 0x0600231D RID: 8989 RVA: 0x00094D40 File Offset: 0x00092F40
		public IEnumerator<FlattenedTroopRosterElement> GetEnumerator()
		{
			foreach (FlattenedTroopRosterElement flattenedTroopRosterElement in this._elementDictionary.Values)
			{
				yield return flattenedTroopRosterElement;
			}
			Dictionary<UniqueTroopDescriptor, FlattenedTroopRosterElement>.ValueCollection.Enumerator enumerator = default(Dictionary<UniqueTroopDescriptor, FlattenedTroopRosterElement>.ValueCollection.Enumerator);
			yield break;
			yield break;
		}

		// Token: 0x0600231E RID: 8990 RVA: 0x00094D4F File Offset: 0x00092F4F
		IEnumerator IEnumerable.GetEnumerator()
		{
			return this.GetEnumerator();
		}

		// Token: 0x0600231F RID: 8991 RVA: 0x00094D58 File Offset: 0x00092F58
		public void OnTroopKilled(UniqueTroopDescriptor troopSeed)
		{
			FlattenedTroopRosterElement flattenedTroopRosterElement = this._elementDictionary[troopSeed];
			this._elementDictionary[troopSeed] = new FlattenedTroopRosterElement(flattenedTroopRosterElement.Troop, RosterTroopState.Killed, 0, flattenedTroopRosterElement.Descriptor, 0);
		}

		// Token: 0x06002320 RID: 8992 RVA: 0x00094D94 File Offset: 0x00092F94
		public void OnTroopWounded(UniqueTroopDescriptor troopSeed)
		{
			FlattenedTroopRosterElement flattenedTroopRosterElement = this._elementDictionary[troopSeed];
			this._elementDictionary[troopSeed] = new FlattenedTroopRosterElement(flattenedTroopRosterElement.Troop, RosterTroopState.WoundedInThisBattle, flattenedTroopRosterElement.Xp, flattenedTroopRosterElement.Descriptor, flattenedTroopRosterElement.XpGained);
		}

		// Token: 0x06002321 RID: 8993 RVA: 0x00094DDC File Offset: 0x00092FDC
		public void OnTroopRouted(UniqueTroopDescriptor troopSeed)
		{
			FlattenedTroopRosterElement flattenedTroopRosterElement = this._elementDictionary[troopSeed];
			this._elementDictionary[troopSeed] = new FlattenedTroopRosterElement(flattenedTroopRosterElement.Troop, RosterTroopState.Routed, flattenedTroopRosterElement.Xp, flattenedTroopRosterElement.Descriptor, 0);
		}

		// Token: 0x06002322 RID: 8994 RVA: 0x00094E20 File Offset: 0x00093020
		public int OnTroopGainXp(UniqueTroopDescriptor troopSeed, int xpAmount)
		{
			FlattenedTroopRosterElement flattenedTroopRosterElement = this._elementDictionary[troopSeed];
			int num = flattenedTroopRosterElement.XpGained + xpAmount;
			int num2 = num - flattenedTroopRosterElement.XpGained;
			if (num2 != 0)
			{
				this._elementDictionary[troopSeed] = new FlattenedTroopRosterElement(flattenedTroopRosterElement.Troop, flattenedTroopRosterElement.State, flattenedTroopRosterElement.Xp, flattenedTroopRosterElement.Descriptor, num);
			}
			return num2;
		}

		// Token: 0x04000AC6 RID: 2758
		[SaveableField(1)]
		private readonly Dictionary<UniqueTroopDescriptor, FlattenedTroopRosterElement> _elementDictionary;
	}
}
