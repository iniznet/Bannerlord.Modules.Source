using System;
using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Roster
{
	// Token: 0x02000293 RID: 659
	public struct TroopRosterElement : ISerializableObject
	{
		// Token: 0x0600233B RID: 9019 RVA: 0x0009508C File Offset: 0x0009328C
		public static void AutoGeneratedStaticCollectObjectsTroopRosterElement(object o, List<object> collectedObjects)
		{
			((TroopRosterElement)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x0600233C RID: 9020 RVA: 0x000950A8 File Offset: 0x000932A8
		private void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this.Character);
		}

		// Token: 0x0600233D RID: 9021 RVA: 0x000950B8 File Offset: 0x000932B8
		internal static object AutoGeneratedGetMemberValueTempXp(object o)
		{
			return ((TroopRosterElement)o).TempXp;
		}

		// Token: 0x0600233E RID: 9022 RVA: 0x000950D8 File Offset: 0x000932D8
		internal static object AutoGeneratedGetMemberValueCharacter(object o)
		{
			return ((TroopRosterElement)o).Character;
		}

		// Token: 0x0600233F RID: 9023 RVA: 0x000950E5 File Offset: 0x000932E5
		internal static object AutoGeneratedGetMemberValue_number(object o)
		{
			return ((TroopRosterElement)o)._number;
		}

		// Token: 0x06002340 RID: 9024 RVA: 0x000950F7 File Offset: 0x000932F7
		internal static object AutoGeneratedGetMemberValue_woundedNumber(object o)
		{
			return ((TroopRosterElement)o)._woundedNumber;
		}

		// Token: 0x06002341 RID: 9025 RVA: 0x00095109 File Offset: 0x00093309
		internal static object AutoGeneratedGetMemberValue_xp(object o)
		{
			return ((TroopRosterElement)o)._xp;
		}

		// Token: 0x170008B3 RID: 2227
		// (get) Token: 0x06002342 RID: 9026 RVA: 0x0009511B File Offset: 0x0009331B
		// (set) Token: 0x06002343 RID: 9027 RVA: 0x00095123 File Offset: 0x00093323
		public int Number
		{
			get
			{
				return this._number;
			}
			set
			{
				if (value < 0)
				{
					throw new MBUnderFlowException("ItemRosterElement::Character");
				}
				this._number = value;
			}
		}

		// Token: 0x170008B4 RID: 2228
		// (get) Token: 0x06002344 RID: 9028 RVA: 0x0009513B File Offset: 0x0009333B
		// (set) Token: 0x06002345 RID: 9029 RVA: 0x00095166 File Offset: 0x00093366
		public int WoundedNumber
		{
			get
			{
				if (!this.Character.IsHero)
				{
					return this._woundedNumber;
				}
				if (!this.Character.HeroObject.IsWounded)
				{
					return 0;
				}
				return 1;
			}
			set
			{
				if (value < 0)
				{
					throw new MBUnderFlowException("ItemRosterElement::WoundedNumber");
				}
				this._woundedNumber = value;
			}
		}

		// Token: 0x170008B5 RID: 2229
		// (get) Token: 0x06002346 RID: 9030 RVA: 0x0009517E File Offset: 0x0009337E
		// (set) Token: 0x06002347 RID: 9031 RVA: 0x00095186 File Offset: 0x00093386
		public int Xp
		{
			get
			{
				return this._xp;
			}
			set
			{
				if (value < 0)
				{
					Debug.FailedAssert("false", "C:\\Develop\\MB3\\Source\\Bannerlord\\TaleWorlds.CampaignSystem\\Roster\\TroopRosterElement.cs", "Xp", 74);
					this._xp = 0;
					return;
				}
				this._xp = value;
			}
		}

		// Token: 0x170008B6 RID: 2230
		// (get) Token: 0x06002348 RID: 9032 RVA: 0x000951B1 File Offset: 0x000933B1
		// (set) Token: 0x06002349 RID: 9033 RVA: 0x000951B9 File Offset: 0x000933B9
		[SaveableProperty(5)]
		internal int TempXp { get; set; }

		// Token: 0x0600234A RID: 9034 RVA: 0x000951C2 File Offset: 0x000933C2
		public TroopRosterElement(CharacterObject character)
		{
			this.Character = character;
			this._number = 0;
			this._woundedNumber = 0;
			this._xp = 0;
			this.TempXp = 0;
		}

		// Token: 0x0600234B RID: 9035 RVA: 0x000951E7 File Offset: 0x000933E7
		internal void Clear()
		{
			this.Character = null;
			this._number = 0;
		}

		// Token: 0x0600234C RID: 9036 RVA: 0x000951F8 File Offset: 0x000933F8
		void ISerializableObject.SerializeTo(IWriter writer)
		{
			writer.WriteUInt((this.Character != null) ? this.Character.Id.InternalValue : 0U);
			writer.WriteInt(this._number);
			writer.WriteInt(this._woundedNumber);
			writer.WriteInt(this._xp);
		}

		// Token: 0x0600234D RID: 9037 RVA: 0x00095250 File Offset: 0x00093450
		void ISerializableObject.DeserializeFrom(IReader reader)
		{
			uint num = reader.ReadUInt();
			this.Character = null;
			if (num != 0U)
			{
				MBGUID mbguid = new MBGUID(num);
				this.Character = MBObjectManager.Instance.GetObject(mbguid) as CharacterObject;
			}
			this._number = reader.ReadInt();
			this._woundedNumber = reader.ReadInt();
		}

		// Token: 0x0600234E RID: 9038 RVA: 0x000952A4 File Offset: 0x000934A4
		public override string ToString()
		{
			string text = this.Number.ToString();
			string text2 = " ";
			CharacterObject character = this.Character;
			return text + text2 + ((character != null) ? character.ToString() : null);
		}

		// Token: 0x0600234F RID: 9039 RVA: 0x000952DC File Offset: 0x000934DC
		public override bool Equals(object obj)
		{
			if (obj is TroopRosterElement)
			{
				TroopRosterElement troopRosterElement = (TroopRosterElement)obj;
				return this.Equals(troopRosterElement);
			}
			return false;
		}

		// Token: 0x06002350 RID: 9040 RVA: 0x00095305 File Offset: 0x00093505
		public bool Equals(TroopRosterElement other)
		{
			return this.Character == other.Character;
		}

		// Token: 0x06002351 RID: 9041 RVA: 0x00095315 File Offset: 0x00093515
		public override int GetHashCode()
		{
			if (this.Character == null)
			{
				return 0;
			}
			return this.Character.GetHashCode();
		}

		// Token: 0x04000ACD RID: 2765
		[SaveableField(0)]
		private int _number;

		// Token: 0x04000ACE RID: 2766
		[SaveableField(1)]
		private int _woundedNumber;

		// Token: 0x04000ACF RID: 2767
		[SaveableField(2)]
		private int _xp;

		// Token: 0x04000AD0 RID: 2768
		[SaveableField(4)]
		public CharacterObject Character;
	}
}
