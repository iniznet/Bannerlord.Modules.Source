using System;
using System.Collections.Generic;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Roster
{
	public struct TroopRosterElement : ISerializableObject, ISavedStruct
	{
		public static void AutoGeneratedStaticCollectObjectsTroopRosterElement(object o, List<object> collectedObjects)
		{
			((TroopRosterElement)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		private void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this.Character);
		}

		internal static object AutoGeneratedGetMemberValueDeltaXp(object o)
		{
			return ((TroopRosterElement)o).DeltaXp;
		}

		internal static object AutoGeneratedGetMemberValueCharacter(object o)
		{
			return ((TroopRosterElement)o).Character;
		}

		internal static object AutoGeneratedGetMemberValue_number(object o)
		{
			return ((TroopRosterElement)o)._number;
		}

		internal static object AutoGeneratedGetMemberValue_woundedNumber(object o)
		{
			return ((TroopRosterElement)o)._woundedNumber;
		}

		internal static object AutoGeneratedGetMemberValue_xp(object o)
		{
			return ((TroopRosterElement)o)._xp;
		}

		public static TroopRosterElement Invalid
		{
			get
			{
				return TroopRosterElement.StaticInvalidElement;
			}
		}

		public int Number
		{
			get
			{
				return this._number;
			}
			set
			{
				if (value < 0)
				{
					throw new MBUnderFlowException("ItemRosterElement::Character");
				}
				this._number = value;
			}
		}

		public int WoundedNumber
		{
			get
			{
				if (!this.Character.IsHero)
				{
					return this._woundedNumber;
				}
				if (!this.Character.HeroObject.IsWounded)
				{
					return 0;
				}
				return 1;
			}
			set
			{
				if (value < 0)
				{
					throw new MBUnderFlowException("ItemRosterElement::WoundedNumber");
				}
				this._woundedNumber = value;
			}
		}

		public int Xp
		{
			get
			{
				return this._xp;
			}
			set
			{
				if (value < 0)
				{
					Debug.FailedAssert("false", "C:\\Develop\\MB3\\Source\\Bannerlord\\TaleWorlds.CampaignSystem\\Roster\\TroopRosterElement.cs", "Xp", 77);
					this._xp = 0;
					return;
				}
				this._xp = value;
			}
		}

		[SaveableProperty(5)]
		public int DeltaXp { get; internal set; }

		public TroopRosterElement(CharacterObject character)
		{
			this.Character = character;
			this._number = 0;
			this._woundedNumber = 0;
			this._xp = 0;
			this.DeltaXp = 0;
		}

		internal void Clear()
		{
			this.Character = null;
			this._number = 0;
		}

		void ISerializableObject.SerializeTo(IWriter writer)
		{
			writer.WriteUInt((this.Character != null) ? this.Character.Id.InternalValue : 0U);
			writer.WriteInt(this._number);
			writer.WriteInt(this._woundedNumber);
			writer.WriteInt(this._xp);
		}

		void ISerializableObject.DeserializeFrom(IReader reader)
		{
			uint num = reader.ReadUInt();
			this.Character = null;
			if (num != 0U)
			{
				MBGUID mbguid = new MBGUID(num);
				this.Character = MBObjectManager.Instance.GetObject(mbguid) as CharacterObject;
			}
			this._number = reader.ReadInt();
			this._woundedNumber = reader.ReadInt();
		}

		public override string ToString()
		{
			string text = this.Number.ToString();
			string text2 = " ";
			CharacterObject character = this.Character;
			return text + text2 + ((character != null) ? character.ToString() : null);
		}

		public override bool Equals(object obj)
		{
			if (obj is TroopRosterElement)
			{
				TroopRosterElement troopRosterElement = (TroopRosterElement)obj;
				return this.Equals(troopRosterElement);
			}
			return false;
		}

		public bool Equals(TroopRosterElement other)
		{
			return this.Character == other.Character;
		}

		public override int GetHashCode()
		{
			if (this.Character == null)
			{
				return 0;
			}
			return this.Character.GetHashCode();
		}

		bool ISavedStruct.IsDefault()
		{
			return this.Character == null && this._number == 0 && this._woundedNumber == 0 && this._xp == 0 && this.DeltaXp == 0;
		}

		private static readonly TroopRosterElement StaticInvalidElement = new TroopRosterElement(null);

		[SaveableField(0)]
		private int _number;

		[SaveableField(1)]
		private int _woundedNumber;

		[SaveableField(2)]
		private int _xp;

		[SaveableField(4)]
		public CharacterObject Character;
	}
}
