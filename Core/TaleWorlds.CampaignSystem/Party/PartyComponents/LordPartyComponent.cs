using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.CharacterDevelopment;
using TaleWorlds.CampaignSystem.Extensions;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Party.PartyComponents
{
	// Token: 0x020002B5 RID: 693
	public class LordPartyComponent : WarPartyComponent
	{
		// Token: 0x06002796 RID: 10134 RVA: 0x000A9024 File Offset: 0x000A7224
		internal static void AutoGeneratedStaticCollectObjectsLordPartyComponent(object o, List<object> collectedObjects)
		{
			((LordPartyComponent)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002797 RID: 10135 RVA: 0x000A9032 File Offset: 0x000A7232
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this._leader);
			collectedObjects.Add(this.Owner);
		}

		// Token: 0x06002798 RID: 10136 RVA: 0x000A9053 File Offset: 0x000A7253
		internal static object AutoGeneratedGetMemberValueOwner(object o)
		{
			return ((LordPartyComponent)o).Owner;
		}

		// Token: 0x06002799 RID: 10137 RVA: 0x000A9060 File Offset: 0x000A7260
		internal static object AutoGeneratedGetMemberValue_leader(object o)
		{
			return ((LordPartyComponent)o)._leader;
		}

		// Token: 0x0600279A RID: 10138 RVA: 0x000A906D File Offset: 0x000A726D
		internal static object AutoGeneratedGetMemberValue_wagePaymentLimit(object o)
		{
			return ((LordPartyComponent)o)._wagePaymentLimit;
		}

		// Token: 0x170009D9 RID: 2521
		// (get) Token: 0x0600279B RID: 10139 RVA: 0x000A907F File Offset: 0x000A727F
		public override Hero PartyOwner
		{
			get
			{
				return this.Owner;
			}
		}

		// Token: 0x170009DA RID: 2522
		// (get) Token: 0x0600279C RID: 10140 RVA: 0x000A9087 File Offset: 0x000A7287
		public override TextObject Name
		{
			get
			{
				if (this._cachedName == null && this.Owner != null)
				{
					this._cachedName = this.GetPartyName();
				}
				return this._cachedName ?? new TextObject("{=!}unnamedMobileParty", null);
			}
		}

		// Token: 0x170009DB RID: 2523
		// (get) Token: 0x0600279D RID: 10141 RVA: 0x000A90BA File Offset: 0x000A72BA
		public override Settlement HomeSettlement
		{
			get
			{
				return this.Owner.HomeSettlement;
			}
		}

		// Token: 0x170009DC RID: 2524
		// (get) Token: 0x0600279E RID: 10142 RVA: 0x000A90C7 File Offset: 0x000A72C7
		// (set) Token: 0x0600279F RID: 10143 RVA: 0x000A90CF File Offset: 0x000A72CF
		[SaveableProperty(20)]
		public Hero Owner { get; private set; }

		// Token: 0x170009DD RID: 2525
		// (get) Token: 0x060027A0 RID: 10144 RVA: 0x000A90D8 File Offset: 0x000A72D8
		public override Hero Leader
		{
			get
			{
				return this._leader;
			}
		}

		// Token: 0x170009DE RID: 2526
		// (get) Token: 0x060027A1 RID: 10145 RVA: 0x000A90E0 File Offset: 0x000A72E0
		public override int WagePaymentLimit
		{
			get
			{
				return this._wagePaymentLimit;
			}
		}

		// Token: 0x060027A2 RID: 10146 RVA: 0x000A90E8 File Offset: 0x000A72E8
		public override void SetWagePaymentLimit(int newLimit)
		{
			this._wagePaymentLimit = newLimit;
		}

		// Token: 0x060027A3 RID: 10147 RVA: 0x000A90F4 File Offset: 0x000A72F4
		public static MobileParty CreateLordParty(string stringId, Hero hero, Vec2 position, float spawnRadius, Settlement spawnSettlement, Hero partyLeader)
		{
			return MobileParty.CreateParty(hero.CharacterObject.StringId + "_party_1", new LordPartyComponent(hero, partyLeader), delegate(MobileParty mobileParty)
			{
				mobileParty.LordPartyComponent.InitializeLordPartyProperties(mobileParty, position, spawnRadius, spawnSettlement);
			});
		}

		// Token: 0x060027A4 RID: 10148 RVA: 0x000A914B File Offset: 0x000A734B
		protected internal LordPartyComponent(Hero owner, Hero leader)
		{
			this.Owner = owner;
			this._leader = leader;
		}

		// Token: 0x060027A5 RID: 10149 RVA: 0x000A917B File Offset: 0x000A737B
		internal void ChangePartyOwner(Hero owner)
		{
			this.ClearCachedName();
			this.Owner = owner;
		}

		// Token: 0x060027A6 RID: 10150 RVA: 0x000A918A File Offset: 0x000A738A
		public override void ChangePartyLeader(Hero newLeader)
		{
			this._leader = newLeader;
			this.ClearCachedName();
		}

		// Token: 0x060027A7 RID: 10151 RVA: 0x000A9199 File Offset: 0x000A7399
		public override void ClearCachedName()
		{
			this._cachedName = null;
		}

		// Token: 0x060027A8 RID: 10152 RVA: 0x000A91A2 File Offset: 0x000A73A2
		private TextObject GetPartyName()
		{
			TextObject textObject = GameTexts.FindText("str_lord_party_name", null);
			textObject.SetCharacterProperties("TROOP", this.Owner.CharacterObject, false);
			textObject.SetTextVariable("IS_LORDPARTY", 1);
			return textObject;
		}

		// Token: 0x060027A9 RID: 10153 RVA: 0x000A91D4 File Offset: 0x000A73D4
		private void InitializeLordPartyProperties(MobileParty mobileParty, Vec2 position, float spawnRadius, Settlement spawnSettlement)
		{
			mobileParty.AddElementToMemberRoster(this.Owner.CharacterObject, 1, true);
			mobileParty.ActualClan = this.Owner.Clan;
			int num = ((this.Owner != Hero.MainHero && this.Owner.Clan != Clan.PlayerClan) ? ((int)MathF.Min(this.Owner.Clan.IsRebelClan ? 40f : 19f, (this.Owner.Clan.IsRebelClan ? 0.2f : 0.1f) * (float)mobileParty.Party.PartySizeLimit)) : 0);
			if (!Campaign.Current.GameStarted)
			{
				float randomFloat = MBRandom.RandomFloat;
				float num2 = MathF.Sqrt(MBRandom.RandomFloat);
				float num3 = 1f - randomFloat * num2;
				num = (int)((float)mobileParty.Party.PartySizeLimit * num3);
			}
			mobileParty.InitializeMobilePartyAroundPosition(this.Owner.Clan.DefaultPartyTemplate, position, spawnRadius, 0f, num);
			mobileParty.Party.Visuals.SetMapIconAsDirty();
			if (spawnSettlement != null)
			{
				mobileParty.Ai.SetMoveGoToSettlement(spawnSettlement);
			}
			mobileParty.Aggressiveness = 0.9f + 0.1f * (float)this.Owner.GetTraitLevel(DefaultTraits.Valor) - 0.05f * (float)this.Owner.GetTraitLevel(DefaultTraits.Mercy);
			mobileParty.ItemRoster.Add(new ItemRosterElement(DefaultItems.Grain, MBRandom.RandomInt(15, 30), null));
			this.Owner.PassedTimeAtHomeSettlement = (float)((int)(MBRandom.RandomFloat * 100f));
			if (spawnSettlement != null)
			{
				mobileParty.Ai.SetMoveGoToSettlement(spawnSettlement);
			}
		}

		// Token: 0x04000C29 RID: 3113
		[CachedData]
		private TextObject _cachedName;

		// Token: 0x04000C2B RID: 3115
		[SaveableField(30)]
		private Hero _leader;

		// Token: 0x04000C2C RID: 3116
		[SaveableField(40)]
		private int _wagePaymentLimit = Campaign.Current.Models.PartyWageModel.MaxWage;
	}
}
