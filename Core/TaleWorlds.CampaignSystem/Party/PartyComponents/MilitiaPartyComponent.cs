using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.Actions;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Party.PartyComponents
{
	public class MilitiaPartyComponent : PartyComponent
	{
		internal static void AutoGeneratedStaticCollectObjectsMilitiaPartyComponent(object o, List<object> collectedObjects)
		{
			((MilitiaPartyComponent)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.Settlement);
		}

		internal static object AutoGeneratedGetMemberValueSettlement(object o)
		{
			return ((MilitiaPartyComponent)o).Settlement;
		}

		[SaveableProperty(1)]
		public Settlement Settlement { get; private set; }

		public override Hero PartyOwner
		{
			get
			{
				return this.Settlement.OwnerClan.Leader;
			}
		}

		public override TextObject Name
		{
			get
			{
				if (this._cachedName == null)
				{
					this._cachedName = GameTexts.FindText("str_militia_name", null);
					this._cachedName.SetTextVariable("SETTLEMENT_NAME", this.Settlement.Name);
				}
				return this._cachedName;
			}
		}

		public override Settlement HomeSettlement
		{
			get
			{
				return this.Settlement;
			}
		}

		public static MobileParty CreateMilitiaParty(string stringId, Settlement settlement)
		{
			MobileParty mobileParty2 = MobileParty.CreateParty("militias_of_" + stringId + "_aaa1", new MilitiaPartyComponent(settlement), delegate(MobileParty mobileParty)
			{
				(mobileParty.PartyComponent as MilitiaPartyComponent).InitializeMilitiaPartyProperties(mobileParty, settlement);
			});
			EnterSettlementAction.ApplyForParty(mobileParty2, settlement);
			return mobileParty2;
		}

		protected override void OnInitialize()
		{
			this.Settlement.MilitiaPartyComponent = this;
		}

		protected override void OnFinalize()
		{
			this.Settlement.MilitiaPartyComponent = null;
		}

		public override void ClearCachedName()
		{
			this._cachedName = null;
		}

		private void InitializeMilitiaPartyProperties(MobileParty mobileParty, Settlement settlement)
		{
			PartyTemplateObject militiaPartyTemplate = settlement.Culture.MilitiaPartyTemplate;
			mobileParty.InitializeMobilePartyAtPosition(militiaPartyTemplate, settlement.GatePosition, -1);
			mobileParty.Party.Visuals.SetMapIconAsDirty();
			mobileParty.Ai.DisableAi();
			mobileParty.Aggressiveness = 0f;
		}

		protected internal MilitiaPartyComponent(Settlement settlement)
		{
			this.Settlement = settlement;
		}

		[CachedData]
		private TextObject _cachedName;
	}
}
