using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Library;
using TaleWorlds.Localization;

namespace TaleWorlds.CampaignSystem.Party.PartyComponents
{
	// Token: 0x020002B3 RID: 691
	public abstract class PartyComponent
	{
		// Token: 0x06002773 RID: 10099 RVA: 0x000A8DBC File Offset: 0x000A6FBC
		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
		}

		// Token: 0x170009CD RID: 2509
		// (get) Token: 0x06002774 RID: 10100 RVA: 0x000A8DBE File Offset: 0x000A6FBE
		// (set) Token: 0x06002775 RID: 10101 RVA: 0x000A8DC6 File Offset: 0x000A6FC6
		public MobileParty MobileParty { get; private set; }

		// Token: 0x170009CE RID: 2510
		// (get) Token: 0x06002776 RID: 10102 RVA: 0x000A8DCF File Offset: 0x000A6FCF
		public PartyBase Party
		{
			get
			{
				return this.MobileParty.Party;
			}
		}

		// Token: 0x170009CF RID: 2511
		// (get) Token: 0x06002777 RID: 10103
		public abstract Hero PartyOwner { get; }

		// Token: 0x170009D0 RID: 2512
		// (get) Token: 0x06002778 RID: 10104
		public abstract TextObject Name { get; }

		// Token: 0x170009D1 RID: 2513
		// (get) Token: 0x06002779 RID: 10105
		public abstract Settlement HomeSettlement { get; }

		// Token: 0x170009D2 RID: 2514
		// (get) Token: 0x0600277A RID: 10106 RVA: 0x000A8DDC File Offset: 0x000A6FDC
		public virtual int WagePaymentLimit
		{
			get
			{
				return Campaign.Current.Models.PartyWageModel.MaxWage;
			}
		}

		// Token: 0x0600277B RID: 10107 RVA: 0x000A8DF2 File Offset: 0x000A6FF2
		public virtual void SetWagePaymentLimit(int newLimit)
		{
			Debug.FailedAssert("Invalid set wage payment limit function usage!", "C:\\Develop\\MB3\\Source\\Bannerlord\\TaleWorlds.CampaignSystem\\Party\\PartyComponents\\PartyComponent.cs", "SetWagePaymentLimit", 26);
		}

		// Token: 0x170009D3 RID: 2515
		// (get) Token: 0x0600277C RID: 10108 RVA: 0x000A8E0A File Offset: 0x000A700A
		public virtual Hero Leader
		{
			get
			{
				return null;
			}
		}

		// Token: 0x0600277D RID: 10109 RVA: 0x000A8E0D File Offset: 0x000A700D
		internal void SetMobilePartyInternal(MobileParty party)
		{
			this.MobileParty = party;
		}

		// Token: 0x0600277E RID: 10110 RVA: 0x000A8E16 File Offset: 0x000A7016
		internal void Initialize(MobileParty party)
		{
			this.SetMobilePartyInternal(party);
			this.OnInitialize();
		}

		// Token: 0x0600277F RID: 10111 RVA: 0x000A8E25 File Offset: 0x000A7025
		internal void Finish()
		{
			this.OnFinalize();
		}

		// Token: 0x06002780 RID: 10112 RVA: 0x000A8E2D File Offset: 0x000A702D
		protected virtual void OnInitialize()
		{
		}

		// Token: 0x06002781 RID: 10113 RVA: 0x000A8E2F File Offset: 0x000A702F
		protected virtual void OnFinalize()
		{
		}

		// Token: 0x06002782 RID: 10114 RVA: 0x000A8E31 File Offset: 0x000A7031
		public virtual void ClearCachedName()
		{
		}

		// Token: 0x06002783 RID: 10115 RVA: 0x000A8E33 File Offset: 0x000A7033
		public virtual void ChangePartyLeader(Hero newLeader)
		{
		}

		// Token: 0x06002784 RID: 10116 RVA: 0x000A8E35 File Offset: 0x000A7035
		public virtual void GetMountAndHarnessVisualIdsForPartyIcon(PartyBase party, out string mountStringId, out string harnessStringId)
		{
			mountStringId = "";
			harnessStringId = "";
		}

		// Token: 0x020005D0 RID: 1488
		// (Invoke) Token: 0x060045C5 RID: 17861
		public delegate void OnPartyComponentCreatedDelegate(MobileParty mobileParty);
	}
}
