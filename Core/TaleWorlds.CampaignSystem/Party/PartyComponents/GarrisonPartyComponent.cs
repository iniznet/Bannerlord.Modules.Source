using System;
using System.Collections.Generic;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Core;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Party.PartyComponents
{
	public class GarrisonPartyComponent : PartyComponent
	{
		internal static void AutoGeneratedStaticCollectObjectsGarrisonPartyComponent(object o, List<object> collectedObjects)
		{
			((GarrisonPartyComponent)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.Settlement);
		}

		internal static object AutoGeneratedGetMemberValueSettlement(object o)
		{
			return ((GarrisonPartyComponent)o).Settlement;
		}

		public static MobileParty CreateGarrisonParty(string stringId, Settlement settlement, bool isInitialGarrison)
		{
			return MobileParty.CreateParty(stringId, new GarrisonPartyComponent(settlement), delegate(MobileParty mobileParty)
			{
				(mobileParty.PartyComponent as GarrisonPartyComponent).InitializeGarrisonPartyProperties(mobileParty, isInitialGarrison);
			});
		}

		public override Hero PartyOwner
		{
			get
			{
				return this.Settlement.OwnerClan.Leader;
			}
		}

		public override TextObject Name
		{
			get
			{
				if (this._cachedName == null)
				{
					this._cachedName = GameTexts.FindText("str_garrison_party_name", null);
					this._cachedName.SetTextVariable("MAJOR_PARTY_LEADER", this.Settlement.Name);
				}
				return this._cachedName;
			}
		}

		public override Settlement HomeSettlement
		{
			get
			{
				return this.Settlement;
			}
		}

		public override int WagePaymentLimit
		{
			get
			{
				return this.Settlement.GarrisonWagePaymentLimit;
			}
		}

		public override void SetWagePaymentLimit(int newLimit)
		{
			this.Settlement.SetGarrisonWagePaymentLimit(newLimit);
		}

		[SaveableProperty(1)]
		public Settlement Settlement { get; private set; }

		protected internal GarrisonPartyComponent(Settlement settlement)
		{
			this.Settlement = settlement;
		}

		protected override void OnInitialize()
		{
			this.Settlement.Town.GarrisonPartyComponent = this;
		}

		protected override void OnFinalize()
		{
			this.Settlement.Town.GarrisonPartyComponent = null;
		}

		public override void ClearCachedName()
		{
			this._cachedName = null;
		}

		private void InitializeGarrisonPartyProperties(MobileParty mobileParty, bool isInitialGarrison)
		{
			PartyTemplateObject defaultPartyTemplate = this.Settlement.Culture.DefaultPartyTemplate;
			mobileParty.CurrentSettlement = this.Settlement;
			int num = (isInitialGarrison ? ((int)(this.Settlement.Town.Prosperity * 0.04f + (float)(this.Settlement.IsTown ? 40 : 0) + 80f)) : 0);
			mobileParty.InitializeMobilePartyAtPosition(defaultPartyTemplate, this.Settlement.GatePosition, num);
			mobileParty.Party.SetVisualAsDirty();
			mobileParty.InitializePartyTrade(Campaign.Current.Models.ClanFinanceModel.PartyGoldLowerThreshold);
			mobileParty.Ai.DisableAi();
			mobileParty.Aggressiveness = 0f;
		}

		[CachedData]
		private TextObject _cachedName;
	}
}
