using System;
using System.Collections.Generic;
using System.Xml;
using TaleWorlds.Library;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.ObjectSystem
{
	public class MBObjectBase
	{
		[SaveableProperty(1)]
		public string StringId { get; set; }

		[SaveableProperty(2)]
		public MBGUID Id { get; set; }

		[CachedData]
		public bool IsInitialized { get; internal set; }

		[CachedData]
		public bool IsReady { get; set; }

		[CachedData]
		[SaveableProperty(3)]
		internal bool IsRegistered { get; private set; }

		public MBObjectBase()
		{
		}

		public MBObjectBase(MBObjectBase other)
		{
			this.StringId = other.StringId;
		}

		public MBObjectBase(string stringId)
		{
			this.StringId = stringId;
		}

		public void AfterInitialized()
		{
			if (this.IsRegistered)
			{
				this.IsReady = true;
			}
		}

		public virtual void AfterRegister()
		{
		}

		public virtual void Initialize()
		{
			this.IsInitialized = true;
		}

		public virtual void Deserialize(MBObjectManager objectManager, XmlNode node)
		{
			this.Initialize();
			this.StringId = node.Attributes["id"].Value;
		}

		[LoadInitializationCallback]
		private void BeforeLoad()
		{
			this.OnBeforeLoad();
		}

		protected virtual void OnBeforeLoad()
		{
			if (this.IsRegistered)
			{
				MBObjectManager.Instance.TryRegisterObjectWithoutInitialization(this);
				this.IsInitialized = true;
			}
		}

		public override int GetHashCode()
		{
			return this.Id.GetHashCode();
		}

		public virtual TextObject GetName()
		{
			return new TextObject(this.StringId, null);
		}

		protected virtual void PreAfterLoad()
		{
		}

		public void PreAfterLoadInternal()
		{
			this.PreAfterLoad();
		}

		protected virtual void AfterLoad()
		{
		}

		public void AfterLoadInternal()
		{
			this.AfterLoad();
		}

		public void OnRegistered()
		{
			this.IsRegistered = true;
			this.AfterRegister();
		}

		public void OnUnregistered()
		{
			this.IsRegistered = false;
		}

		internal static void AutoGeneratedStaticCollectObjectsMBObjectBase(object o, List<object> collectedObjects)
		{
			((MBObjectBase)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
		}

		internal static object AutoGeneratedGetMemberValueStringId(object o)
		{
			return ((MBObjectBase)o).StringId;
		}

		internal static object AutoGeneratedGetMemberValueId(object o)
		{
			return ((MBObjectBase)o).Id;
		}

		internal static object AutoGeneratedGetMemberValueIsRegistered(object o)
		{
			return ((MBObjectBase)o).IsRegistered;
		}
	}
}
